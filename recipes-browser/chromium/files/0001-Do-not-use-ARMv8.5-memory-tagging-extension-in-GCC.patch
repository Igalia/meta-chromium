From 2dab835ef9612c0a3a5e5018528a190f6c7feafb Mon Sep 17 00:00:00 2001
From: Jose Dapena Paz <jdapena@igalia.com>
Date: Fri, 22 Oct 2021 20:03:51 +0200
Subject: Do not use ARMv8.5 memory tagging extension in GCC.

In GCC, we can only enable memory tagging extension at compile time
if architecture is ARMv8.5-a. So the changes to introduce memory
tagging break the build if the CPU architecture is not 8.5.

To avoid problems, we provisionally disable memory tagging extensions
completely if build is not done with Clang.

Bug: 819294
Change-Id: I2b3e918dd41500e86d6bb802b535b66403cc4cf1
---
 base/BUILD.gn         | 2 +-
 base/memory/tagging.h | 3 ++-
 2 files changed, 3 insertions(+), 2 deletions(-)

diff --git a/base/BUILD.gn b/base/BUILD.gn
index 0caa283e2de32..5d8510f5d4ae3 100644
--- a/base/BUILD.gn
+++ b/base/BUILD.gn
@@ -95,7 +95,7 @@ if (is_fuchsia) {
 }
 
 config("memory_tagging") {
-  if (current_cpu == "arm64" &&
+  if (current_cpu == "arm64" && is_clang &&
       (is_linux || is_chromeos || is_android || is_fuchsia)) {
     # base/ has access to the MTE intrinsics because it needs to use them,
     # but they're not backwards compatible. Use base::CPU::has_mte()
diff --git a/base/memory/tagging.h b/base/memory/tagging.h
index 3aa74a4a40b83..b67dd90b13fab 100644
--- a/base/memory/tagging.h
+++ b/base/memory/tagging.h
@@ -13,7 +13,8 @@
 #include "base/compiler_specific.h"
 #include "build/build_config.h"
 
-#if defined(ARCH_CPU_ARM64) && (defined(OS_LINUX) || defined(OS_ANDROID))
+#if defined(ARCH_CPU_ARM64) && defined(__clang__) && \
+    (defined(OS_LINUX) || defined(OS_ANDROID))
 #define HAS_MEMORY_TAGGING 1
 #endif
 
-- 
2.32.0

