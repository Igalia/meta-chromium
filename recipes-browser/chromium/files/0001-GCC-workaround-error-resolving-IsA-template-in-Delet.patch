From a73d374f6f107ad27370aa4f83144715f7be5967 Mon Sep 17 00:00:00 2001
From: Jose Dapena Paz <jdapena@igalia.com>
Date: Wed, 15 Jan 2020 12:25:25 +0100
Subject: GCC: workaround error resolving IsA template in
 DeleteSelectionCommand

GCC fails to resolve IsA template as a function parameter in DeleteSelectionCommand.
To avoid this we add a static function that uses it internally, with the expected
function signature expected by EnclosingNodeOfType.

Bug: 819294
Change-Id: If9dfcfb4ca7e298d33545bfd870b6e3d05f9ce76
---
 .../core/editing/commands/delete_selection_command.cc     | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/third_party/blink/renderer/core/editing/commands/delete_selection_command.cc b/third_party/blink/renderer/core/editing/commands/delete_selection_command.cc
index 9425c9c546ef..98c1f86f9b51 100644
--- a/third_party/blink/renderer/core/editing/commands/delete_selection_command.cc
+++ b/third_party/blink/renderer/core/editing/commands/delete_selection_command.cc
@@ -224,6 +224,10 @@ static Position TrailingWhitespacePosition(const Position& position,
   return Position();
 }
 
+static bool IsHTMLTableRowElement(const blink::Node* node) {
+  return IsA<HTMLTableRowElement>(node);
+}
+
 void DeleteSelectionCommand::InitializePositionData(
     EditingState* editing_state) {
   DCHECK(!GetDocument().NeedsLayoutTreeUpdate());
@@ -253,9 +257,9 @@ void DeleteSelectionCommand::InitializePositionData(
   end_root_ = RootEditableElementOf(end);
 
   start_table_row_ = To<HTMLTableRowElement>(
-      EnclosingNodeOfType(start, &IsA<HTMLTableRowElement>));
+      EnclosingNodeOfType(start, &IsHTMLTableRowElement));
   end_table_row_ = To<HTMLTableRowElement>(
-      EnclosingNodeOfType(end, &IsA<HTMLTableRowElement>));
+      EnclosingNodeOfType(end, &IsHTMLTableRowElement));
 
   // Don't move content out of a table cell.
   // If the cell is non-editable, enclosingNodeOfType won't return it by
-- 
2.20.1

