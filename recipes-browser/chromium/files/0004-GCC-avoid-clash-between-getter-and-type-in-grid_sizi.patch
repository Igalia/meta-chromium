From 05a74771fed5491740588ec7b39ba64a7b710013 Mon Sep 17 00:00:00 2001
From: Jose Dapena Paz <jdapena@igalia.com>
Date: Thu, 1 Feb 2024 17:34:38 +0000
Subject: [PATCH] GCC: avoid clash between getter and type in
 grid_sizing_tree.h
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Rename GridSubsizingTree::GridItems getter to GetGridItems to avoid
type clash.

Bug: 819294
Change-Id: I4112929d9f85dc4573002b429cc982d50085d3c9
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/5224147
Reviewed-by: Xianzhu Wang <wangxianzhu@chromium.org>
Commit-Queue: Xianzhu Wang <wangxianzhu@chromium.org>
Commit-Queue: José Dapena Paz <jdapena@igalia.com>
Cr-Commit-Position: refs/heads/main@{#1255116}
---
 .../core/layout/grid/grid_layout_algorithm.cc       | 13 +++++++------
 .../renderer/core/layout/grid/grid_sizing_tree.h    |  2 +-
 2 files changed, 8 insertions(+), 7 deletions(-)

diff --git a/third_party/blink/renderer/core/layout/grid/grid_layout_algorithm.cc b/third_party/blink/renderer/core/layout/grid/grid_layout_algorithm.cc
index 3560f0d71a4c5..e697a4794b973 100644
--- a/third_party/blink/renderer/core/layout/grid/grid_layout_algorithm.cc
+++ b/third_party/blink/renderer/core/layout/grid/grid_layout_algorithm.cc
@@ -1552,7 +1552,8 @@ void GridLayoutAlgorithm::ComputeGridItemBaselines(
   const auto writing_mode = GetConstraintSpace().GetWritingMode();
   track_collection.ResetBaselines();
 
-  for (auto& grid_item : sizing_subtree.GridItems().IncludeSubgriddedItems()) {
+  for (auto& grid_item :
+       sizing_subtree.GetGridItems().IncludeSubgriddedItems()) {
     if (!grid_item.IsBaselineSpecified(track_direction) ||
         !grid_item.IsConsideredForSizing(track_direction)) {
       continue;
@@ -1720,7 +1721,7 @@ void GridLayoutAlgorithm::InitializeTrackSizes(
     const absl::optional<GridTrackSizingDirection>& opt_track_direction) const {
   DCHECK(sizing_subtree.HasValidRootFor(Node()));
 
-  auto& grid_items = sizing_subtree.GridItems();
+  auto& grid_items = sizing_subtree.GetGridItems();
   auto& layout_data = sizing_subtree.LayoutData();
 
   auto InitAndCacheTrackSizes = [&](GridTrackSizingDirection track_direction) {
@@ -1928,7 +1929,7 @@ void GridLayoutAlgorithm::CompleteTrackSizingAlgorithm(
 
       if (needs_to_check_block_size_dependent_grid_items) {
         block_size_dependent_grid_items = BlockSizeDependentGridItems(
-            sizing_subtree.GridItems(), track_collection);
+            sizing_subtree.GetGridItems(), track_collection);
       }
 
       auto first_set_geometry = ComputeFirstSetGeometry(
@@ -2049,7 +2050,7 @@ void GridLayoutAlgorithm::ForEachSubgrid(
 
   const auto& layout_data = sizing_subtree.LayoutData();
 
-  for (const auto& grid_item : sizing_subtree.GridItems()) {
+  for (const auto& grid_item : sizing_subtree.GetGridItems()) {
     if (!grid_item.IsSubgrid()) {
       continue;
     }
@@ -2681,7 +2682,7 @@ void GridLayoutAlgorithm::ResolveIntrinsicTrackSizes(
     const GridSizingSubtree& sizing_subtree,
     GridTrackSizingDirection track_direction,
     SizingConstraint sizing_constraint) const {
-  auto& grid_items = sizing_subtree.GridItems();
+  auto& grid_items = sizing_subtree.GetGridItems();
   auto& track_collection = sizing_subtree.SizingCollection(track_direction);
 
   GridItemDataPtrVector reordered_grid_items;
@@ -3024,7 +3025,7 @@ void GridLayoutAlgorithm::ExpandFlexibleTracks(
     //   finding the size of an fr using all the grid tracks that the item
     //   crosses and a space to fill of the item’s max-content contribution.
     for (auto& grid_item :
-         sizing_subtree.GridItems().IncludeSubgriddedItems()) {
+         sizing_subtree.GetGridItems().IncludeSubgriddedItems()) {
       if (grid_item.IsConsideredForSizing(track_direction) &&
           grid_item.IsSpanningFlexibleTrack(track_direction)) {
         float grid_item_fr_size =
diff --git a/third_party/blink/renderer/core/layout/grid/grid_sizing_tree.h b/third_party/blink/renderer/core/layout/grid/grid_sizing_tree.h
index 45d55e2b36da4..2148ea9ea0657 100644
--- a/third_party/blink/renderer/core/layout/grid/grid_sizing_tree.h
+++ b/third_party/blink/renderer/core/layout/grid/grid_sizing_tree.h
@@ -194,7 +194,7 @@ class GridSizingSubtree
            grid_tree_->LookupSubgridIndex(grid_node) == subtree_root_;
   }
 
-  GridItems& GridItems() const {
+  GridItems& GetGridItems() const {
     DCHECK(grid_tree_);
     return grid_tree_->At(subtree_root_).grid_items;
   }
-- 
2.40.1

