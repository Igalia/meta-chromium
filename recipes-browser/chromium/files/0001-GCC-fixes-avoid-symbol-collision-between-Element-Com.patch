From 1e641f79336dc59442fb68e19001a25f2882e717 Mon Sep 17 00:00:00 2001
From: Jose Dapena Paz <jose.dapena@lge.com>
Date: Tue, 9 Jan 2018 18:08:40 +0100
Subject: GCC fixes: avoid symbol collision between
 Element::ComputedAccessibleNode and ComputedAccessibleNode.

GCC at least fails to compile if the method has the same name of the class. To avoid
this we rename the getter method to be prefixed with Get.

Change-Id: I7f7ac2ecf0947718f72e78ccef019c3239c9b921

diff --git a/third_party/WebKit/Source/core/dom/Element.cpp b/third_party/WebKit/Source/core/dom/Element.cpp
index bba93fd1be88..63cdd73273ad 100644
--- a/third_party/WebKit/Source/core/dom/Element.cpp
+++ b/third_party/WebKit/Source/core/dom/Element.cpp
@@ -1279,7 +1279,7 @@ AccessibleNode* Element::accessibleNode() {
   return rare_data.EnsureAccessibleNode(this);
 }
 
-ComputedAccessibleNode* Element::ComputedAccessibleNode() {
+ComputedAccessibleNode* Element::GetComputedAccessibleNode() {
   if (!RuntimeEnabledFeatures::AccessibilityObjectModelEnabled())
     return nullptr;
 
diff --git a/third_party/WebKit/Source/core/dom/Element.h b/third_party/WebKit/Source/core/dom/Element.h
index a6cc00ef3c70..b3c4642d63be 100644
--- a/third_party/WebKit/Source/core/dom/Element.h
+++ b/third_party/WebKit/Source/core/dom/Element.h
@@ -295,7 +295,7 @@ class CORE_EXPORT Element : public ContainerNode {
   AccessibleNode* ExistingAccessibleNode() const;
   AccessibleNode* accessibleNode();
 
-  ComputedAccessibleNode* ComputedAccessibleNode();
+  ComputedAccessibleNode* GetComputedAccessibleNode();
 
   void DidMoveToNewDocument(Document&) override;
 
diff --git a/third_party/WebKit/Source/core/frame/LocalDOMWindow.cpp b/third_party/WebKit/Source/core/frame/LocalDOMWindow.cpp
index 642f55fbfd7c..f6a8d8e15227 100644
--- a/third_party/WebKit/Source/core/frame/LocalDOMWindow.cpp
+++ b/third_party/WebKit/Source/core/frame/LocalDOMWindow.cpp
@@ -1110,7 +1110,7 @@ ScriptPromise LocalDOMWindow::getComputedAccessibleNode(
     Element* element) {
   DCHECK(element);
   ComputedAccessibleNode* computed_accessible_node =
-      element->ComputedAccessibleNode();
+      element->GetComputedAccessibleNode();
   return computed_accessible_node->ComputePromiseProperty(script_state);
 }
 
-- 
2.14.1

