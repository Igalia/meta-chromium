From 838b35cead4d6195310ec7a4eebaccac06641d42 Mon Sep 17 00:00:00 2001
From: Jose Dapena Paz <jdapena@igalia.com>
Date: Tue, 20 Feb 2024 12:48:29 +0100
Subject: Drop SVE intrinsics in libvpx for GCC

libvpx SVE intrinsics usage assumes arm_neon_sve_bridge.h
is available. But that is not true for GCC<14

Change-Id: If2c7c799030726add207b490319ebed4c53e91bb
---
 third_party/libvpx/BUILD.gn                   |   12 +-
 third_party/libvpx/generate_gni.sh            |    9 +
 third_party/libvpx/libvpx_srcs.gni            |  442 ++
 .../source/config/linux/arm64-gcc/vp8_rtcd.h  |  464 +++
 .../source/config/linux/arm64-gcc/vp9_rtcd.h  |  236 ++
 .../config/linux/arm64-gcc/vpx_config.asm     |  108 +
 .../config/linux/arm64-gcc/vpx_config.c       |   10 +
 .../config/linux/arm64-gcc/vpx_config.h       |  117 +
 .../config/linux/arm64-gcc/vpx_dsp_rtcd.h     | 3705 +++++++++++++++++
 .../config/linux/arm64-gcc/vpx_scale_rtcd.h   |  101 +
 10 files changed, 5199 insertions(+), 5 deletions(-)
 create mode 100644 third_party/libvpx/source/config/linux/arm64-gcc/vp8_rtcd.h
 create mode 100644 third_party/libvpx/source/config/linux/arm64-gcc/vp9_rtcd.h
 create mode 100644 third_party/libvpx/source/config/linux/arm64-gcc/vpx_config.asm
 create mode 100644 third_party/libvpx/source/config/linux/arm64-gcc/vpx_config.c
 create mode 100644 third_party/libvpx/source/config/linux/arm64-gcc/vpx_config.h
 create mode 100644 third_party/libvpx/source/config/linux/arm64-gcc/vpx_dsp_rtcd.h
 create mode 100644 third_party/libvpx/source/config/linux/arm64-gcc/vpx_scale_rtcd.h

diff --git a/third_party/libvpx/BUILD.gn b/third_party/libvpx/BUILD.gn
index f2cff6bfa4cc4..cea36f354dfdd 100644
--- a/third_party/libvpx/BUILD.gn
+++ b/third_party/libvpx/BUILD.gn
@@ -35,6 +35,8 @@ if (current_cpu == "x86") {
     # configuration, of which there are two (see the later definition of
     # os_category).
     cpu_arch_full = "arm64-highbd"
+  } else if (!is_clang) {
+    cpu_arch_full = "arm64-gcc"
   } else {
     cpu_arch_full = current_cpu
   }
@@ -285,7 +287,7 @@ if (current_cpu == "arm" || current_cpu == "arm64") {
     } else if (cpu_arch_full == "arm-neon-cpu-detect") {
       sources = libvpx_srcs_arm_neon_cpu_detect_neon
       deps = [ ":libvpx_arm_neon_cpu_detect_headers" ]
-    } else if (cpu_arch_full == "arm64") {
+    } else if (cpu_arch_full == "arm64" || cpu_arch_full == "arm64-gcc") {
       sources = libvpx_srcs_arm64_neon
       deps = [ ":libvpx_arm64_headers" ]
     } else if (cpu_arch_full == "arm64-highbd") {
@@ -304,7 +306,7 @@ if (current_cpu == "arm64") {
     if (!is_win || is_clang) {
       cflags = [ "-march=armv8.2-a+dotprod" ]
     }
-    if (cpu_arch_full == "arm64") {
+    if (cpu_arch_full == "arm64" || cpu_arch_full == "arm64-gcc") {
       sources = libvpx_srcs_arm64_neon_dotprod
       deps = [ ":libvpx_arm64_headers" ]
     } else if (cpu_arch_full == "arm64-highbd") {
@@ -321,7 +323,7 @@ if (current_cpu == "arm64") {
     if (!is_win || is_clang) {
       cflags = [ "-march=armv8.2-a+i8mm" ]
     }
-    if (cpu_arch_full == "arm64") {
+    if (cpu_arch_full == "arm64" || cpu_arch_full == "arm64-gcc") {
       sources = libvpx_srcs_arm64_neon_i8mm
       deps = [ ":libvpx_arm64_headers" ]
     } else if (cpu_arch_full == "arm64-highbd") {
@@ -333,7 +335,7 @@ if (current_cpu == "arm64") {
   # SVE is disabled for Windows due to a limitation with clang-cl-18:
   # third_party\llvm-build\Release+Asserts\lib\clang\18\include\arm_sve.h(271,1):
   # error: cannot mangle this built-in __SVInt8_t type yet
-  if (!is_win) {
+  if (!is_win && is_clang) {
     source_set("libvpx_intrinsics_sve") {
       check_includes = false
       configs -= [ "//build/config/compiler:chromium_code" ]
@@ -547,7 +549,7 @@ static_library("libvpx") {
   if (current_cpu == "arm64") {
     deps += [ ":libvpx_intrinsics_neon_dotprod" ]
     deps += [ ":libvpx_intrinsics_neon_i8mm" ]
-    if (!is_win) {
+    if (!is_win && is_clang) {
       deps += [
         ":libvpx_intrinsics_sve",
         ":libvpx_intrinsics_sve2",
diff --git a/third_party/libvpx/generate_gni.sh b/third_party/libvpx/generate_gni.sh
index 89d6033eec1c1..12a47cf2e94cf 100755
--- a/third_party/libvpx/generate_gni.sh
+++ b/third_party/libvpx/generate_gni.sh
@@ -414,6 +414,7 @@ gen_config_files linux/arm-neon "--target=armv7-linux-gcc \
 gen_config_files linux/arm-neon-cpu-detect \
   "--target=armv7-linux-gcc --enable-runtime-cpu-detect ${all_platforms}"
 gen_config_files linux/arm64 "--target=armv8-linux-gcc ${all_platforms}"
+gen_config_files linux/arm64-gcc "--target=armv8-linux-gcc ${all_platforms}"
 gen_config_files linux/arm-neon-highbd \
   "--target=armv7-linux-gcc --disable-runtime-cpu-detect \
   ${all_platforms} ${HIGHBD}"
@@ -451,6 +452,7 @@ lint_config linux/arm
 lint_config linux/arm-neon
 lint_config linux/arm-neon-cpu-detect
 lint_config linux/arm64
+lint_config linux/arm64-gcc
 lint_config linux/arm-neon-highbd
 lint_config linux/arm64-highbd
 lint_config linux/mipsel
@@ -483,6 +485,7 @@ gen_rtcd_header linux/arm armv7 "--disable-neon --disable-neon_asm"
 gen_rtcd_header linux/arm-neon armv7 "${require_neon}"
 gen_rtcd_header linux/arm-neon-cpu-detect armv7
 gen_rtcd_header linux/arm64 armv8 "${require_neon}"
+gen_rtcd_header linux/arm64-gcc armv8 "${require_neon} --disable-sve"
 gen_rtcd_header linux/arm-neon-highbd armv7 "${require_neon}"
 gen_rtcd_header linux/arm64-highbd armv8 "${require_neon}"
 gen_rtcd_header linux/mipsel mipsel
@@ -552,6 +555,12 @@ if [[ -z $ONLY_CONFIGS ]]; then
   make libvpx_srcs.txt target=libs $config > /dev/null
   convert_srcs_to_project_files libvpx_srcs.txt libvpx_srcs_arm64
 
+  echo "Generate ARM64 for GCC source list."
+  config=$(print_config linux/arm64-gcc)
+  make_clean
+  make libvpx_srcs.txt target=libs $config > /dev/null
+  convert_srcs_to_project_files libvpx_srcs.txt libvpx_srcs_arm64_gcc
+
   echo "Generate ARM NEON HighBD source list."
   config=$(print_config linux/arm-neon-highbd)
   make_clean
diff --git a/third_party/libvpx/libvpx_srcs.gni b/third_party/libvpx/libvpx_srcs.gni
index 92dd807ab77df..3bd45aa7b73f6 100644
--- a/third_party/libvpx/libvpx_srcs.gni
+++ b/third_party/libvpx/libvpx_srcs.gni
@@ -2675,6 +2675,448 @@ libvpx_srcs_arm64_sve = [
   "//third_party/libvpx/source/libvpx/vpx_dsp/arm/sum_squares_sve.c",
 ]
 libvpx_srcs_arm64_sve2 = []
+libvpx_srcs_arm64_gcc = [
+  "//third_party/libvpx/source/libvpx/vp8/common/alloccommon.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/arm/loopfilter_arm.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/blockd.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/dequantize.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/entropy.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/entropymode.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/entropymv.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/extend.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/filter.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/findnearmv.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/generic/systemdependent.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/idct_blk.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/idctllm.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/loopfilter_filters.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/mbpitch.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/mfqe.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/modecont.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/postproc.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/quant_common.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/reconinter.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/reconintra.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/reconintra4x4.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/rtcd.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/setupintrarecon.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/swapyv12buffer.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/treecoder.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/vp8_loopfilter.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/vp8_skin_detection.c",
+  "//third_party/libvpx/source/libvpx/vp8/decoder/dboolhuff.c",
+  "//third_party/libvpx/source/libvpx/vp8/decoder/decodeframe.c",
+  "//third_party/libvpx/source/libvpx/vp8/decoder/decodemv.c",
+  "//third_party/libvpx/source/libvpx/vp8/decoder/detokenize.c",
+  "//third_party/libvpx/source/libvpx/vp8/decoder/onyxd_if.c",
+  "//third_party/libvpx/source/libvpx/vp8/decoder/threading.c",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/bitstream.c",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/boolhuff.c",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/copy_c.c",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/dct.c",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/denoising.c",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/encodeframe.c",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/encodeintra.c",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/encodemb.c",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/encodemv.c",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/ethreading.c",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/lookahead.c",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/mcomp.c",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/modecosts.c",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/mr_dissim.c",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/onyx_if.c",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/pickinter.c",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/picklpf.c",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/ratectrl.c",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/rdopt.c",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/segmentation.c",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/tokenize.c",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/treewriter.c",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/vp8_quantize.c",
+  "//third_party/libvpx/source/libvpx/vp8/vp8_cx_iface.c",
+  "//third_party/libvpx/source/libvpx/vp8/vp8_dx_iface.c",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_alloccommon.c",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_blockd.c",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_common_data.c",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_entropy.c",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_entropymode.c",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_entropymv.c",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_filter.c",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_frame_buffers.c",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_idct.c",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_loopfilter.c",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_mfqe.c",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_mvref_common.c",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_postproc.c",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_pred_common.c",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_quant_common.c",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_reconinter.c",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_reconintra.c",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_rtcd.c",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_scale.c",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_scan.c",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_seg_common.c",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_thread_common.c",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_tile_common.c",
+  "//third_party/libvpx/source/libvpx/vp9/decoder/vp9_decodeframe.c",
+  "//third_party/libvpx/source/libvpx/vp9/decoder/vp9_decodemv.c",
+  "//third_party/libvpx/source/libvpx/vp9/decoder/vp9_decoder.c",
+  "//third_party/libvpx/source/libvpx/vp9/decoder/vp9_detokenize.c",
+  "//third_party/libvpx/source/libvpx/vp9/decoder/vp9_dsubexp.c",
+  "//third_party/libvpx/source/libvpx/vp9/decoder/vp9_job_queue.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_aq_cyclicrefresh.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_bitstream.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_context_tree.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_cost.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_dct.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_denoiser.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_encodeframe.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_encodemb.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_encodemv.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_encoder.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_ethread.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_ext_ratectrl.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_extend.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_frame_scale.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_lookahead.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_mcomp.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_multi_thread.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_noise_estimate.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_picklpf.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_pickmode.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_quantize.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_ratectrl.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_rd.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_rdopt.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_resize.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_segmentation.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_skin_detection.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_speed_features.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_subexp.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_svc_layercontext.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_tokenize.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_tpl_model.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_treewriter.c",
+  "//third_party/libvpx/source/libvpx/vp9/vp9_cx_iface.c",
+  "//third_party/libvpx/source/libvpx/vp9/vp9_dx_iface.c",
+  "//third_party/libvpx/source/libvpx/vp9/vp9_iface_common.c",
+  "//third_party/libvpx/source/libvpx/vpx/src/vpx_codec.c",
+  "//third_party/libvpx/source/libvpx/vpx/src/vpx_decoder.c",
+  "//third_party/libvpx/source/libvpx/vpx/src/vpx_encoder.c",
+  "//third_party/libvpx/source/libvpx/vpx/src/vpx_image.c",
+  "//third_party/libvpx/source/libvpx/vpx/src/vpx_tpl.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/add_noise.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/avg.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/bitreader.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/bitreader_buffer.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/bitwriter.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/bitwriter_buffer.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/deblock.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/fwd_txfm.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/intrapred.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/inv_txfm.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/loopfilter.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/prob.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/psnr.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/quantize.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/sad.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/skin_detection.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/sse.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/subtract.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/sum_squares.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/variance.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/vpx_convolve.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/vpx_dsp_rtcd.c",
+  "//third_party/libvpx/source/libvpx/vpx_mem/vpx_mem.c",
+  "//third_party/libvpx/source/libvpx/vpx_ports/aarch64_cpudetect.c",
+  "//third_party/libvpx/source/libvpx/vpx_scale/generic/gen_scalers.c",
+  "//third_party/libvpx/source/libvpx/vpx_scale/generic/vpx_scale.c",
+  "//third_party/libvpx/source/libvpx/vpx_scale/generic/yv12config.c",
+  "//third_party/libvpx/source/libvpx/vpx_scale/generic/yv12extend.c",
+  "//third_party/libvpx/source/libvpx/vpx_scale/vpx_scale_rtcd.c",
+  "//third_party/libvpx/source/libvpx/vpx_util/vpx_thread.c",
+  "//third_party/libvpx/source/libvpx/vpx_util/vpx_write_yuv_frame.c",
+]
+libvpx_srcs_arm64_gcc_headers = [
+  "//third_party/libvpx/source/libvpx/vp8/common/alloccommon.h",
+  "//third_party/libvpx/source/libvpx/vp8/common/arm/loopfilter_arm.h",
+  "//third_party/libvpx/source/libvpx/vp8/common/blockd.h",
+  "//third_party/libvpx/source/libvpx/vp8/common/coefupdateprobs.h",
+  "//third_party/libvpx/source/libvpx/vp8/common/common.h",
+  "//third_party/libvpx/source/libvpx/vp8/common/default_coef_probs.h",
+  "//third_party/libvpx/source/libvpx/vp8/common/entropy.h",
+  "//third_party/libvpx/source/libvpx/vp8/common/entropymode.h",
+  "//third_party/libvpx/source/libvpx/vp8/common/entropymv.h",
+  "//third_party/libvpx/source/libvpx/vp8/common/extend.h",
+  "//third_party/libvpx/source/libvpx/vp8/common/filter.h",
+  "//third_party/libvpx/source/libvpx/vp8/common/findnearmv.h",
+  "//third_party/libvpx/source/libvpx/vp8/common/header.h",
+  "//third_party/libvpx/source/libvpx/vp8/common/invtrans.h",
+  "//third_party/libvpx/source/libvpx/vp8/common/loopfilter.h",
+  "//third_party/libvpx/source/libvpx/vp8/common/modecont.h",
+  "//third_party/libvpx/source/libvpx/vp8/common/mv.h",
+  "//third_party/libvpx/source/libvpx/vp8/common/onyx.h",
+  "//third_party/libvpx/source/libvpx/vp8/common/onyxc_int.h",
+  "//third_party/libvpx/source/libvpx/vp8/common/onyxd.h",
+  "//third_party/libvpx/source/libvpx/vp8/common/postproc.h",
+  "//third_party/libvpx/source/libvpx/vp8/common/ppflags.h",
+  "//third_party/libvpx/source/libvpx/vp8/common/quant_common.h",
+  "//third_party/libvpx/source/libvpx/vp8/common/reconinter.h",
+  "//third_party/libvpx/source/libvpx/vp8/common/reconintra.h",
+  "//third_party/libvpx/source/libvpx/vp8/common/reconintra4x4.h",
+  "//third_party/libvpx/source/libvpx/vp8/common/setupintrarecon.h",
+  "//third_party/libvpx/source/libvpx/vp8/common/swapyv12buffer.h",
+  "//third_party/libvpx/source/libvpx/vp8/common/systemdependent.h",
+  "//third_party/libvpx/source/libvpx/vp8/common/threading.h",
+  "//third_party/libvpx/source/libvpx/vp8/common/treecoder.h",
+  "//third_party/libvpx/source/libvpx/vp8/common/vp8_entropymodedata.h",
+  "//third_party/libvpx/source/libvpx/vp8/common/vp8_skin_detection.h",
+  "//third_party/libvpx/source/libvpx/vp8/decoder/dboolhuff.h",
+  "//third_party/libvpx/source/libvpx/vp8/decoder/decodemv.h",
+  "//third_party/libvpx/source/libvpx/vp8/decoder/decoderthreading.h",
+  "//third_party/libvpx/source/libvpx/vp8/decoder/detokenize.h",
+  "//third_party/libvpx/source/libvpx/vp8/decoder/onyxd_int.h",
+  "//third_party/libvpx/source/libvpx/vp8/decoder/treereader.h",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/bitstream.h",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/block.h",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/boolhuff.h",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/dct_value_cost.h",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/dct_value_tokens.h",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/defaultcoefcounts.h",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/denoising.h",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/encodeframe.h",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/encodeintra.h",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/encodemb.h",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/encodemv.h",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/ethreading.h",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/firstpass.h",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/lookahead.h",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/mcomp.h",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/modecosts.h",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/mr_dissim.h",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/onyx_int.h",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/pickinter.h",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/picklpf.h",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/quantize.h",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/ratectrl.h",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/rdopt.h",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/segmentation.h",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/tokenize.h",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/treewriter.h",
+  "//third_party/libvpx/source/libvpx/vp9/common/arm/neon/vp9_iht_neon.h",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_alloccommon.h",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_blockd.h",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_common.h",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_common_data.h",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_entropy.h",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_entropymode.h",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_entropymv.h",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_enums.h",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_filter.h",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_frame_buffers.h",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_idct.h",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_loopfilter.h",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_mfqe.h",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_mv.h",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_mvref_common.h",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_onyxc_int.h",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_postproc.h",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_ppflags.h",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_pred_common.h",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_quant_common.h",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_reconinter.h",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_reconintra.h",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_scale.h",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_scan.h",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_seg_common.h",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_thread_common.h",
+  "//third_party/libvpx/source/libvpx/vp9/common/vp9_tile_common.h",
+  "//third_party/libvpx/source/libvpx/vp9/decoder/vp9_decodeframe.h",
+  "//third_party/libvpx/source/libvpx/vp9/decoder/vp9_decodemv.h",
+  "//third_party/libvpx/source/libvpx/vp9/decoder/vp9_decoder.h",
+  "//third_party/libvpx/source/libvpx/vp9/decoder/vp9_detokenize.h",
+  "//third_party/libvpx/source/libvpx/vp9/decoder/vp9_dsubexp.h",
+  "//third_party/libvpx/source/libvpx/vp9/decoder/vp9_job_queue.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_aq_cyclicrefresh.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_bitstream.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_block.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_context_tree.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_cost.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_denoiser.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_encodeframe.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_encodemb.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_encodemv.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_encoder.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_ethread.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_ext_ratectrl.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_extend.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_firstpass.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_firstpass_stats.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_job_queue.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_lookahead.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_mbgraph.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_mcomp.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_multi_thread.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_noise_estimate.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_partition_models.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_picklpf.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_pickmode.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_quantize.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_ratectrl.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_rd.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_rdopt.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_resize.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_segmentation.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_skin_detection.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_speed_features.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_subexp.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_svc_layercontext.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_temporal_filter.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_tokenize.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_tpl_model.h",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/vp9_treewriter.h",
+  "//third_party/libvpx/source/libvpx/vp9/vp9_cx_iface.h",
+  "//third_party/libvpx/source/libvpx/vp9/vp9_dx_iface.h",
+  "//third_party/libvpx/source/libvpx/vp9/vp9_iface_common.h",
+  "//third_party/libvpx/source/libvpx/vpx/internal/vpx_codec_internal.h",
+  "//third_party/libvpx/source/libvpx/vpx/internal/vpx_ratectrl_rtc.h",
+  "//third_party/libvpx/source/libvpx/vpx/vp8.h",
+  "//third_party/libvpx/source/libvpx/vpx/vp8cx.h",
+  "//third_party/libvpx/source/libvpx/vpx/vp8dx.h",
+  "//third_party/libvpx/source/libvpx/vpx/vpx_codec.h",
+  "//third_party/libvpx/source/libvpx/vpx/vpx_decoder.h",
+  "//third_party/libvpx/source/libvpx/vpx/vpx_encoder.h",
+  "//third_party/libvpx/source/libvpx/vpx/vpx_ext_ratectrl.h",
+  "//third_party/libvpx/source/libvpx/vpx/vpx_frame_buffer.h",
+  "//third_party/libvpx/source/libvpx/vpx/vpx_image.h",
+  "//third_party/libvpx/source/libvpx/vpx/vpx_integer.h",
+  "//third_party/libvpx/source/libvpx/vpx/vpx_tpl.h",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/idct_neon.h",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/mem_neon.h",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/sum_neon.h",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/transpose_neon.h",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/vpx_convolve8_neon.h",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/bitreader.h",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/bitreader_buffer.h",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/bitwriter.h",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/bitwriter_buffer.h",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/fwd_txfm.h",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/inv_txfm.h",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/postproc.h",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/prob.h",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/psnr.h",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/quantize.h",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/skin_detection.h",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/txfm_common.h",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/variance.h",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/vpx_convolve.h",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/vpx_dsp_common.h",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/vpx_filter.h",
+  "//third_party/libvpx/source/libvpx/vpx_mem/include/vpx_mem_intrnl.h",
+  "//third_party/libvpx/source/libvpx/vpx_mem/vpx_mem.h",
+  "//third_party/libvpx/source/libvpx/vpx_ports/arm.h",
+  "//third_party/libvpx/source/libvpx/vpx_ports/arm_cpudetect.h",
+  "//third_party/libvpx/source/libvpx/vpx_ports/bitops.h",
+  "//third_party/libvpx/source/libvpx/vpx_ports/compiler_attributes.h",
+  "//third_party/libvpx/source/libvpx/vpx_ports/emmintrin_compat.h",
+  "//third_party/libvpx/source/libvpx/vpx_ports/loongarch.h",
+  "//third_party/libvpx/source/libvpx/vpx_ports/mem.h",
+  "//third_party/libvpx/source/libvpx/vpx_ports/mem_ops.h",
+  "//third_party/libvpx/source/libvpx/vpx_ports/mem_ops_aligned.h",
+  "//third_party/libvpx/source/libvpx/vpx_ports/mips.h",
+  "//third_party/libvpx/source/libvpx/vpx_ports/msvc.h",
+  "//third_party/libvpx/source/libvpx/vpx_ports/static_assert.h",
+  "//third_party/libvpx/source/libvpx/vpx_ports/system_state.h",
+  "//third_party/libvpx/source/libvpx/vpx_ports/vpx_once.h",
+  "//third_party/libvpx/source/libvpx/vpx_ports/vpx_timer.h",
+  "//third_party/libvpx/source/libvpx/vpx_ports/x86.h",
+  "//third_party/libvpx/source/libvpx/vpx_scale/vpx_scale.h",
+  "//third_party/libvpx/source/libvpx/vpx_scale/yv12config.h",
+  "//third_party/libvpx/source/libvpx/vpx_util/endian_inl.h",
+  "//third_party/libvpx/source/libvpx/vpx_util/vpx_atomics.h",
+  "//third_party/libvpx/source/libvpx/vpx_util/vpx_pthread.h",
+  "//third_party/libvpx/source/libvpx/vpx_util/vpx_thread.h",
+  "//third_party/libvpx/source/libvpx/vpx_util/vpx_timestamp.h",
+  "//third_party/libvpx/source/libvpx/vpx_util/vpx_write_yuv_frame.h",
+]
+libvpx_srcs_arm64_gcc_assembly = []
+libvpx_srcs_arm64_gcc_neon = [
+  "//third_party/libvpx/source/libvpx/vp8/common/arm/neon/bilinearpredict_neon.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/arm/neon/copymem_neon.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/arm/neon/dc_only_idct_add_neon.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/arm/neon/dequant_idct_neon.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/arm/neon/dequantizeb_neon.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/arm/neon/idct_blk_neon.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/arm/neon/iwalsh_neon.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/arm/neon/loopfiltersimplehorizontaledge_neon.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/arm/neon/loopfiltersimpleverticaledge_neon.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/arm/neon/mbloopfilter_neon.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/arm/neon/shortidct4x4llm_neon.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/arm/neon/sixtappredict_neon.c",
+  "//third_party/libvpx/source/libvpx/vp8/common/arm/neon/vp8_loopfilter_neon.c",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/arm/neon/denoising_neon.c",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/arm/neon/fastquantizeb_neon.c",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/arm/neon/shortfdct_neon.c",
+  "//third_party/libvpx/source/libvpx/vp8/encoder/arm/neon/vp8_shortwalsh4x4_neon.c",
+  "//third_party/libvpx/source/libvpx/vp9/common/arm/neon/vp9_iht16x16_add_neon.c",
+  "//third_party/libvpx/source/libvpx/vp9/common/arm/neon/vp9_iht4x4_add_neon.c",
+  "//third_party/libvpx/source/libvpx/vp9/common/arm/neon/vp9_iht8x8_add_neon.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/arm/neon/vp9_dct_neon.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/arm/neon/vp9_denoiser_neon.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/arm/neon/vp9_diamond_search_sad_neon.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/arm/neon/vp9_error_neon.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/arm/neon/vp9_frame_scale_neon.c",
+  "//third_party/libvpx/source/libvpx/vp9/encoder/arm/neon/vp9_quantize_neon.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/avg_neon.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/avg_pred_neon.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/deblock_neon.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/fdct16x16_neon.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/fdct32x32_neon.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/fdct4x4_neon.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/fdct8x8_neon.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/fdct_partial_neon.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/hadamard_neon.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/idct16x16_1_add_neon.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/idct16x16_add_neon.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/idct32x32_135_add_neon.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/idct32x32_1_add_neon.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/idct32x32_34_add_neon.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/idct32x32_add_neon.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/idct4x4_1_add_neon.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/idct4x4_add_neon.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/idct8x8_1_add_neon.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/idct8x8_add_neon.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/intrapred_neon.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/loopfilter_neon.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/quantize_neon.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/sad4d_neon.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/sad_neon.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/sse_neon.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/subpel_variance_neon.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/subtract_neon.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/sum_squares_neon.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/variance_neon.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/vpx_convolve8_neon.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/vpx_convolve_avg_neon.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/vpx_convolve_copy_neon.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/vpx_convolve_neon.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/vpx_scaled_convolve8_neon.c",
+]
+libvpx_srcs_arm64_gcc_neon_dotprod = [
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/sad4d_neon_dotprod.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/sad_neon_dotprod.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/sse_neon_dotprod.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/variance_neon_dotprod.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/vpx_convolve8_neon_dotprod.c",
+]
+libvpx_srcs_arm64_gcc_neon_i8mm = [
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/vpx_convolve8_neon_i8mm.c",
+]
+libvpx_srcs_arm64_gcc_sve = [
+  "//third_party/libvpx/source/libvpx/vp9/encoder/arm/neon/vp9_error_sve.c",
+  "//third_party/libvpx/source/libvpx/vpx_dsp/arm/sum_squares_sve.c",
+]
+libvpx_srcs_arm64_gcc_sve2 = []
 libvpx_srcs_arm_neon_highbd = [
   "//third_party/libvpx/source/libvpx/vp8/common/alloccommon.c",
   "//third_party/libvpx/source/libvpx/vp8/common/arm/loopfilter_arm.c",
diff --git a/third_party/libvpx/source/config/linux/arm64-gcc/vp8_rtcd.h b/third_party/libvpx/source/config/linux/arm64-gcc/vp8_rtcd.h
new file mode 100644
index 0000000000000..102501094254b
--- /dev/null
+++ b/third_party/libvpx/source/config/linux/arm64-gcc/vp8_rtcd.h
@@ -0,0 +1,464 @@
+// This file is generated. Do not edit.
+#ifndef VP8_RTCD_H_
+#define VP8_RTCD_H_
+
+#ifdef RTCD_C
+#define RTCD_EXTERN
+#else
+#define RTCD_EXTERN extern
+#endif
+
+/*
+ * VP8
+ */
+
+struct blockd;
+struct macroblockd;
+struct loop_filter_info;
+
+/* Encoder forward decls */
+struct block;
+struct macroblock;
+struct variance_vtable;
+union int_mv;
+struct yv12_buffer_config;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+void vp8_bilinear_predict16x16_c(unsigned char* src_ptr,
+                                 int src_pixels_per_line,
+                                 int xoffset,
+                                 int yoffset,
+                                 unsigned char* dst_ptr,
+                                 int dst_pitch);
+void vp8_bilinear_predict16x16_neon(unsigned char* src_ptr,
+                                    int src_pixels_per_line,
+                                    int xoffset,
+                                    int yoffset,
+                                    unsigned char* dst_ptr,
+                                    int dst_pitch);
+#define vp8_bilinear_predict16x16 vp8_bilinear_predict16x16_neon
+
+void vp8_bilinear_predict4x4_c(unsigned char* src_ptr,
+                               int src_pixels_per_line,
+                               int xoffset,
+                               int yoffset,
+                               unsigned char* dst_ptr,
+                               int dst_pitch);
+void vp8_bilinear_predict4x4_neon(unsigned char* src_ptr,
+                                  int src_pixels_per_line,
+                                  int xoffset,
+                                  int yoffset,
+                                  unsigned char* dst_ptr,
+                                  int dst_pitch);
+#define vp8_bilinear_predict4x4 vp8_bilinear_predict4x4_neon
+
+void vp8_bilinear_predict8x4_c(unsigned char* src_ptr,
+                               int src_pixels_per_line,
+                               int xoffset,
+                               int yoffset,
+                               unsigned char* dst_ptr,
+                               int dst_pitch);
+void vp8_bilinear_predict8x4_neon(unsigned char* src_ptr,
+                                  int src_pixels_per_line,
+                                  int xoffset,
+                                  int yoffset,
+                                  unsigned char* dst_ptr,
+                                  int dst_pitch);
+#define vp8_bilinear_predict8x4 vp8_bilinear_predict8x4_neon
+
+void vp8_bilinear_predict8x8_c(unsigned char* src_ptr,
+                               int src_pixels_per_line,
+                               int xoffset,
+                               int yoffset,
+                               unsigned char* dst_ptr,
+                               int dst_pitch);
+void vp8_bilinear_predict8x8_neon(unsigned char* src_ptr,
+                                  int src_pixels_per_line,
+                                  int xoffset,
+                                  int yoffset,
+                                  unsigned char* dst_ptr,
+                                  int dst_pitch);
+#define vp8_bilinear_predict8x8 vp8_bilinear_predict8x8_neon
+
+int vp8_block_error_c(short* coeff, short* dqcoeff);
+#define vp8_block_error vp8_block_error_c
+
+void vp8_copy32xn_c(const unsigned char* src_ptr,
+                    int src_stride,
+                    unsigned char* dst_ptr,
+                    int dst_stride,
+                    int height);
+#define vp8_copy32xn vp8_copy32xn_c
+
+void vp8_copy_mem16x16_c(unsigned char* src,
+                         int src_stride,
+                         unsigned char* dst,
+                         int dst_stride);
+void vp8_copy_mem16x16_neon(unsigned char* src,
+                            int src_stride,
+                            unsigned char* dst,
+                            int dst_stride);
+#define vp8_copy_mem16x16 vp8_copy_mem16x16_neon
+
+void vp8_copy_mem8x4_c(unsigned char* src,
+                       int src_stride,
+                       unsigned char* dst,
+                       int dst_stride);
+void vp8_copy_mem8x4_neon(unsigned char* src,
+                          int src_stride,
+                          unsigned char* dst,
+                          int dst_stride);
+#define vp8_copy_mem8x4 vp8_copy_mem8x4_neon
+
+void vp8_copy_mem8x8_c(unsigned char* src,
+                       int src_stride,
+                       unsigned char* dst,
+                       int dst_stride);
+void vp8_copy_mem8x8_neon(unsigned char* src,
+                          int src_stride,
+                          unsigned char* dst,
+                          int dst_stride);
+#define vp8_copy_mem8x8 vp8_copy_mem8x8_neon
+
+void vp8_dc_only_idct_add_c(short input_dc,
+                            unsigned char* pred_ptr,
+                            int pred_stride,
+                            unsigned char* dst_ptr,
+                            int dst_stride);
+void vp8_dc_only_idct_add_neon(short input_dc,
+                               unsigned char* pred_ptr,
+                               int pred_stride,
+                               unsigned char* dst_ptr,
+                               int dst_stride);
+#define vp8_dc_only_idct_add vp8_dc_only_idct_add_neon
+
+int vp8_denoiser_filter_c(unsigned char* mc_running_avg_y,
+                          int mc_avg_y_stride,
+                          unsigned char* running_avg_y,
+                          int avg_y_stride,
+                          unsigned char* sig,
+                          int sig_stride,
+                          unsigned int motion_magnitude,
+                          int increase_denoising);
+int vp8_denoiser_filter_neon(unsigned char* mc_running_avg_y,
+                             int mc_avg_y_stride,
+                             unsigned char* running_avg_y,
+                             int avg_y_stride,
+                             unsigned char* sig,
+                             int sig_stride,
+                             unsigned int motion_magnitude,
+                             int increase_denoising);
+#define vp8_denoiser_filter vp8_denoiser_filter_neon
+
+int vp8_denoiser_filter_uv_c(unsigned char* mc_running_avg,
+                             int mc_avg_stride,
+                             unsigned char* running_avg,
+                             int avg_stride,
+                             unsigned char* sig,
+                             int sig_stride,
+                             unsigned int motion_magnitude,
+                             int increase_denoising);
+int vp8_denoiser_filter_uv_neon(unsigned char* mc_running_avg,
+                                int mc_avg_stride,
+                                unsigned char* running_avg,
+                                int avg_stride,
+                                unsigned char* sig,
+                                int sig_stride,
+                                unsigned int motion_magnitude,
+                                int increase_denoising);
+#define vp8_denoiser_filter_uv vp8_denoiser_filter_uv_neon
+
+void vp8_dequant_idct_add_c(short* input,
+                            short* dq,
+                            unsigned char* dest,
+                            int stride);
+void vp8_dequant_idct_add_neon(short* input,
+                               short* dq,
+                               unsigned char* dest,
+                               int stride);
+#define vp8_dequant_idct_add vp8_dequant_idct_add_neon
+
+void vp8_dequant_idct_add_uv_block_c(short* q,
+                                     short* dq,
+                                     unsigned char* dst_u,
+                                     unsigned char* dst_v,
+                                     int stride,
+                                     char* eobs);
+void vp8_dequant_idct_add_uv_block_neon(short* q,
+                                        short* dq,
+                                        unsigned char* dst_u,
+                                        unsigned char* dst_v,
+                                        int stride,
+                                        char* eobs);
+#define vp8_dequant_idct_add_uv_block vp8_dequant_idct_add_uv_block_neon
+
+void vp8_dequant_idct_add_y_block_c(short* q,
+                                    short* dq,
+                                    unsigned char* dst,
+                                    int stride,
+                                    char* eobs);
+void vp8_dequant_idct_add_y_block_neon(short* q,
+                                       short* dq,
+                                       unsigned char* dst,
+                                       int stride,
+                                       char* eobs);
+#define vp8_dequant_idct_add_y_block vp8_dequant_idct_add_y_block_neon
+
+void vp8_dequantize_b_c(struct blockd*, short* DQC);
+void vp8_dequantize_b_neon(struct blockd*, short* DQC);
+#define vp8_dequantize_b vp8_dequantize_b_neon
+
+int vp8_diamond_search_sad_c(struct macroblock* x,
+                             struct block* b,
+                             struct blockd* d,
+                             union int_mv* ref_mv,
+                             union int_mv* best_mv,
+                             int search_param,
+                             int sad_per_bit,
+                             int* num00,
+                             struct variance_vtable* fn_ptr,
+                             int* mvcost[2],
+                             union int_mv* center_mv);
+#define vp8_diamond_search_sad vp8_diamond_search_sad_c
+
+void vp8_fast_quantize_b_c(struct block*, struct blockd*);
+void vp8_fast_quantize_b_neon(struct block*, struct blockd*);
+#define vp8_fast_quantize_b vp8_fast_quantize_b_neon
+
+void vp8_filter_by_weight16x16_c(unsigned char* src,
+                                 int src_stride,
+                                 unsigned char* dst,
+                                 int dst_stride,
+                                 int src_weight);
+#define vp8_filter_by_weight16x16 vp8_filter_by_weight16x16_c
+
+void vp8_filter_by_weight4x4_c(unsigned char* src,
+                               int src_stride,
+                               unsigned char* dst,
+                               int dst_stride,
+                               int src_weight);
+#define vp8_filter_by_weight4x4 vp8_filter_by_weight4x4_c
+
+void vp8_filter_by_weight8x8_c(unsigned char* src,
+                               int src_stride,
+                               unsigned char* dst,
+                               int dst_stride,
+                               int src_weight);
+#define vp8_filter_by_weight8x8 vp8_filter_by_weight8x8_c
+
+void vp8_loop_filter_bh_c(unsigned char* y_ptr,
+                          unsigned char* u_ptr,
+                          unsigned char* v_ptr,
+                          int y_stride,
+                          int uv_stride,
+                          struct loop_filter_info* lfi);
+void vp8_loop_filter_bh_neon(unsigned char* y_ptr,
+                             unsigned char* u_ptr,
+                             unsigned char* v_ptr,
+                             int y_stride,
+                             int uv_stride,
+                             struct loop_filter_info* lfi);
+#define vp8_loop_filter_bh vp8_loop_filter_bh_neon
+
+void vp8_loop_filter_bv_c(unsigned char* y_ptr,
+                          unsigned char* u_ptr,
+                          unsigned char* v_ptr,
+                          int y_stride,
+                          int uv_stride,
+                          struct loop_filter_info* lfi);
+void vp8_loop_filter_bv_neon(unsigned char* y_ptr,
+                             unsigned char* u_ptr,
+                             unsigned char* v_ptr,
+                             int y_stride,
+                             int uv_stride,
+                             struct loop_filter_info* lfi);
+#define vp8_loop_filter_bv vp8_loop_filter_bv_neon
+
+void vp8_loop_filter_mbh_c(unsigned char* y_ptr,
+                           unsigned char* u_ptr,
+                           unsigned char* v_ptr,
+                           int y_stride,
+                           int uv_stride,
+                           struct loop_filter_info* lfi);
+void vp8_loop_filter_mbh_neon(unsigned char* y_ptr,
+                              unsigned char* u_ptr,
+                              unsigned char* v_ptr,
+                              int y_stride,
+                              int uv_stride,
+                              struct loop_filter_info* lfi);
+#define vp8_loop_filter_mbh vp8_loop_filter_mbh_neon
+
+void vp8_loop_filter_mbv_c(unsigned char* y_ptr,
+                           unsigned char* u_ptr,
+                           unsigned char* v_ptr,
+                           int y_stride,
+                           int uv_stride,
+                           struct loop_filter_info* lfi);
+void vp8_loop_filter_mbv_neon(unsigned char* y_ptr,
+                              unsigned char* u_ptr,
+                              unsigned char* v_ptr,
+                              int y_stride,
+                              int uv_stride,
+                              struct loop_filter_info* lfi);
+#define vp8_loop_filter_mbv vp8_loop_filter_mbv_neon
+
+void vp8_loop_filter_bhs_c(unsigned char* y_ptr,
+                           int y_stride,
+                           const unsigned char* blimit);
+void vp8_loop_filter_bhs_neon(unsigned char* y_ptr,
+                              int y_stride,
+                              const unsigned char* blimit);
+#define vp8_loop_filter_simple_bh vp8_loop_filter_bhs_neon
+
+void vp8_loop_filter_bvs_c(unsigned char* y_ptr,
+                           int y_stride,
+                           const unsigned char* blimit);
+void vp8_loop_filter_bvs_neon(unsigned char* y_ptr,
+                              int y_stride,
+                              const unsigned char* blimit);
+#define vp8_loop_filter_simple_bv vp8_loop_filter_bvs_neon
+
+void vp8_loop_filter_simple_horizontal_edge_c(unsigned char* y_ptr,
+                                              int y_stride,
+                                              const unsigned char* blimit);
+void vp8_loop_filter_mbhs_neon(unsigned char* y_ptr,
+                               int y_stride,
+                               const unsigned char* blimit);
+#define vp8_loop_filter_simple_mbh vp8_loop_filter_mbhs_neon
+
+void vp8_loop_filter_simple_vertical_edge_c(unsigned char* y_ptr,
+                                            int y_stride,
+                                            const unsigned char* blimit);
+void vp8_loop_filter_mbvs_neon(unsigned char* y_ptr,
+                               int y_stride,
+                               const unsigned char* blimit);
+#define vp8_loop_filter_simple_mbv vp8_loop_filter_mbvs_neon
+
+int vp8_mbblock_error_c(struct macroblock* mb, int dc);
+#define vp8_mbblock_error vp8_mbblock_error_c
+
+int vp8_mbuverror_c(struct macroblock* mb);
+#define vp8_mbuverror vp8_mbuverror_c
+
+int vp8_refining_search_sad_c(struct macroblock* x,
+                              struct block* b,
+                              struct blockd* d,
+                              union int_mv* ref_mv,
+                              int error_per_bit,
+                              int search_range,
+                              struct variance_vtable* fn_ptr,
+                              int* mvcost[2],
+                              union int_mv* center_mv);
+#define vp8_refining_search_sad vp8_refining_search_sad_c
+
+void vp8_regular_quantize_b_c(struct block*, struct blockd*);
+#define vp8_regular_quantize_b vp8_regular_quantize_b_c
+
+void vp8_short_fdct4x4_c(short* input, short* output, int pitch);
+void vp8_short_fdct4x4_neon(short* input, short* output, int pitch);
+#define vp8_short_fdct4x4 vp8_short_fdct4x4_neon
+
+void vp8_short_fdct8x4_c(short* input, short* output, int pitch);
+void vp8_short_fdct8x4_neon(short* input, short* output, int pitch);
+#define vp8_short_fdct8x4 vp8_short_fdct8x4_neon
+
+void vp8_short_idct4x4llm_c(short* input,
+                            unsigned char* pred_ptr,
+                            int pred_stride,
+                            unsigned char* dst_ptr,
+                            int dst_stride);
+void vp8_short_idct4x4llm_neon(short* input,
+                               unsigned char* pred_ptr,
+                               int pred_stride,
+                               unsigned char* dst_ptr,
+                               int dst_stride);
+#define vp8_short_idct4x4llm vp8_short_idct4x4llm_neon
+
+void vp8_short_inv_walsh4x4_c(short* input, short* mb_dqcoeff);
+void vp8_short_inv_walsh4x4_neon(short* input, short* mb_dqcoeff);
+#define vp8_short_inv_walsh4x4 vp8_short_inv_walsh4x4_neon
+
+void vp8_short_inv_walsh4x4_1_c(short* input, short* mb_dqcoeff);
+#define vp8_short_inv_walsh4x4_1 vp8_short_inv_walsh4x4_1_c
+
+void vp8_short_walsh4x4_c(short* input, short* output, int pitch);
+void vp8_short_walsh4x4_neon(short* input, short* output, int pitch);
+#define vp8_short_walsh4x4 vp8_short_walsh4x4_neon
+
+void vp8_sixtap_predict16x16_c(unsigned char* src_ptr,
+                               int src_pixels_per_line,
+                               int xoffset,
+                               int yoffset,
+                               unsigned char* dst_ptr,
+                               int dst_pitch);
+void vp8_sixtap_predict16x16_neon(unsigned char* src_ptr,
+                                  int src_pixels_per_line,
+                                  int xoffset,
+                                  int yoffset,
+                                  unsigned char* dst_ptr,
+                                  int dst_pitch);
+#define vp8_sixtap_predict16x16 vp8_sixtap_predict16x16_neon
+
+void vp8_sixtap_predict4x4_c(unsigned char* src_ptr,
+                             int src_pixels_per_line,
+                             int xoffset,
+                             int yoffset,
+                             unsigned char* dst_ptr,
+                             int dst_pitch);
+void vp8_sixtap_predict4x4_neon(unsigned char* src_ptr,
+                                int src_pixels_per_line,
+                                int xoffset,
+                                int yoffset,
+                                unsigned char* dst_ptr,
+                                int dst_pitch);
+#define vp8_sixtap_predict4x4 vp8_sixtap_predict4x4_neon
+
+void vp8_sixtap_predict8x4_c(unsigned char* src_ptr,
+                             int src_pixels_per_line,
+                             int xoffset,
+                             int yoffset,
+                             unsigned char* dst_ptr,
+                             int dst_pitch);
+void vp8_sixtap_predict8x4_neon(unsigned char* src_ptr,
+                                int src_pixels_per_line,
+                                int xoffset,
+                                int yoffset,
+                                unsigned char* dst_ptr,
+                                int dst_pitch);
+#define vp8_sixtap_predict8x4 vp8_sixtap_predict8x4_neon
+
+void vp8_sixtap_predict8x8_c(unsigned char* src_ptr,
+                             int src_pixels_per_line,
+                             int xoffset,
+                             int yoffset,
+                             unsigned char* dst_ptr,
+                             int dst_pitch);
+void vp8_sixtap_predict8x8_neon(unsigned char* src_ptr,
+                                int src_pixels_per_line,
+                                int xoffset,
+                                int yoffset,
+                                unsigned char* dst_ptr,
+                                int dst_pitch);
+#define vp8_sixtap_predict8x8 vp8_sixtap_predict8x8_neon
+
+void vp8_rtcd(void);
+
+#include "vpx_config.h"
+
+#ifdef RTCD_C
+#include "vpx_ports/arm.h"
+static void setup_rtcd_internal(void) {
+  int flags = arm_cpu_caps();
+
+  (void)flags;
+}
+#endif
+
+#ifdef __cplusplus
+}  // extern "C"
+#endif
+
+#endif
diff --git a/third_party/libvpx/source/config/linux/arm64-gcc/vp9_rtcd.h b/third_party/libvpx/source/config/linux/arm64-gcc/vp9_rtcd.h
new file mode 100644
index 0000000000000..4c2a4adad26c6
--- /dev/null
+++ b/third_party/libvpx/source/config/linux/arm64-gcc/vp9_rtcd.h
@@ -0,0 +1,236 @@
+// This file is generated. Do not edit.
+#ifndef VP9_RTCD_H_
+#define VP9_RTCD_H_
+
+#ifdef RTCD_C
+#define RTCD_EXTERN
+#else
+#define RTCD_EXTERN extern
+#endif
+
+/*
+ * VP9
+ */
+
+#include "vp9/common/vp9_common.h"
+#include "vp9/common/vp9_enums.h"
+#include "vp9/common/vp9_filter.h"
+#include "vpx/vpx_integer.h"
+
+struct macroblockd;
+
+/* Encoder forward decls */
+struct macroblock;
+struct macroblock_plane;
+struct vp9_sad_table;
+struct ScanOrder;
+struct search_site_config;
+struct mv;
+union int_mv;
+struct yv12_buffer_config;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+int64_t vp9_block_error_c(const tran_low_t* coeff,
+                          const tran_low_t* dqcoeff,
+                          intptr_t block_size,
+                          int64_t* ssz);
+int64_t vp9_block_error_neon(const tran_low_t* coeff,
+                             const tran_low_t* dqcoeff,
+                             intptr_t block_size,
+                             int64_t* ssz);
+#define vp9_block_error vp9_block_error_neon
+
+int64_t vp9_block_error_fp_c(const tran_low_t* coeff,
+                             const tran_low_t* dqcoeff,
+                             int block_size);
+int64_t vp9_block_error_fp_neon(const tran_low_t* coeff,
+                                const tran_low_t* dqcoeff,
+                                int block_size);
+#define vp9_block_error_fp vp9_block_error_fp_neon
+
+int vp9_denoiser_filter_c(const uint8_t* sig,
+                          int sig_stride,
+                          const uint8_t* mc_avg,
+                          int mc_avg_stride,
+                          uint8_t* avg,
+                          int avg_stride,
+                          int increase_denoising,
+                          BLOCK_SIZE bs,
+                          int motion_magnitude);
+int vp9_denoiser_filter_neon(const uint8_t* sig,
+                             int sig_stride,
+                             const uint8_t* mc_avg,
+                             int mc_avg_stride,
+                             uint8_t* avg,
+                             int avg_stride,
+                             int increase_denoising,
+                             BLOCK_SIZE bs,
+                             int motion_magnitude);
+#define vp9_denoiser_filter vp9_denoiser_filter_neon
+
+int vp9_diamond_search_sad_c(const struct macroblock* x,
+                             const struct search_site_config* cfg,
+                             struct mv* ref_mv,
+                             uint32_t start_mv_sad,
+                             struct mv* best_mv,
+                             int search_param,
+                             int sad_per_bit,
+                             int* num00,
+                             const struct vp9_sad_table* sad_fn_ptr,
+                             const struct mv* center_mv);
+int vp9_diamond_search_sad_neon(const struct macroblock* x,
+                                const struct search_site_config* cfg,
+                                struct mv* ref_mv,
+                                uint32_t start_mv_sad,
+                                struct mv* best_mv,
+                                int search_param,
+                                int sad_per_bit,
+                                int* num00,
+                                const struct vp9_sad_table* sad_fn_ptr,
+                                const struct mv* center_mv);
+#define vp9_diamond_search_sad vp9_diamond_search_sad_neon
+
+void vp9_fht16x16_c(const int16_t* input,
+                    tran_low_t* output,
+                    int stride,
+                    int tx_type);
+void vp9_fht16x16_neon(const int16_t* input,
+                       tran_low_t* output,
+                       int stride,
+                       int tx_type);
+#define vp9_fht16x16 vp9_fht16x16_neon
+
+void vp9_fht4x4_c(const int16_t* input,
+                  tran_low_t* output,
+                  int stride,
+                  int tx_type);
+void vp9_fht4x4_neon(const int16_t* input,
+                     tran_low_t* output,
+                     int stride,
+                     int tx_type);
+#define vp9_fht4x4 vp9_fht4x4_neon
+
+void vp9_fht8x8_c(const int16_t* input,
+                  tran_low_t* output,
+                  int stride,
+                  int tx_type);
+void vp9_fht8x8_neon(const int16_t* input,
+                     tran_low_t* output,
+                     int stride,
+                     int tx_type);
+#define vp9_fht8x8 vp9_fht8x8_neon
+
+void vp9_filter_by_weight16x16_c(const uint8_t* src,
+                                 int src_stride,
+                                 uint8_t* dst,
+                                 int dst_stride,
+                                 int src_weight);
+#define vp9_filter_by_weight16x16 vp9_filter_by_weight16x16_c
+
+void vp9_filter_by_weight8x8_c(const uint8_t* src,
+                               int src_stride,
+                               uint8_t* dst,
+                               int dst_stride,
+                               int src_weight);
+#define vp9_filter_by_weight8x8 vp9_filter_by_weight8x8_c
+
+void vp9_fwht4x4_c(const int16_t* input, tran_low_t* output, int stride);
+#define vp9_fwht4x4 vp9_fwht4x4_c
+
+void vp9_iht16x16_256_add_c(const tran_low_t* input,
+                            uint8_t* dest,
+                            int stride,
+                            int tx_type);
+void vp9_iht16x16_256_add_neon(const tran_low_t* input,
+                               uint8_t* dest,
+                               int stride,
+                               int tx_type);
+#define vp9_iht16x16_256_add vp9_iht16x16_256_add_neon
+
+void vp9_iht4x4_16_add_c(const tran_low_t* input,
+                         uint8_t* dest,
+                         int stride,
+                         int tx_type);
+void vp9_iht4x4_16_add_neon(const tran_low_t* input,
+                            uint8_t* dest,
+                            int stride,
+                            int tx_type);
+#define vp9_iht4x4_16_add vp9_iht4x4_16_add_neon
+
+void vp9_iht8x8_64_add_c(const tran_low_t* input,
+                         uint8_t* dest,
+                         int stride,
+                         int tx_type);
+void vp9_iht8x8_64_add_neon(const tran_low_t* input,
+                            uint8_t* dest,
+                            int stride,
+                            int tx_type);
+#define vp9_iht8x8_64_add vp9_iht8x8_64_add_neon
+
+void vp9_quantize_fp_c(const tran_low_t* coeff_ptr,
+                       intptr_t n_coeffs,
+                       const struct macroblock_plane* const mb_plane,
+                       tran_low_t* qcoeff_ptr,
+                       tran_low_t* dqcoeff_ptr,
+                       const int16_t* dequant_ptr,
+                       uint16_t* eob_ptr,
+                       const struct ScanOrder* const scan_order);
+void vp9_quantize_fp_neon(const tran_low_t* coeff_ptr,
+                          intptr_t n_coeffs,
+                          const struct macroblock_plane* const mb_plane,
+                          tran_low_t* qcoeff_ptr,
+                          tran_low_t* dqcoeff_ptr,
+                          const int16_t* dequant_ptr,
+                          uint16_t* eob_ptr,
+                          const struct ScanOrder* const scan_order);
+#define vp9_quantize_fp vp9_quantize_fp_neon
+
+void vp9_quantize_fp_32x32_c(const tran_low_t* coeff_ptr,
+                             intptr_t n_coeffs,
+                             const struct macroblock_plane* const mb_plane,
+                             tran_low_t* qcoeff_ptr,
+                             tran_low_t* dqcoeff_ptr,
+                             const int16_t* dequant_ptr,
+                             uint16_t* eob_ptr,
+                             const struct ScanOrder* const scan_order);
+void vp9_quantize_fp_32x32_neon(const tran_low_t* coeff_ptr,
+                                intptr_t n_coeffs,
+                                const struct macroblock_plane* const mb_plane,
+                                tran_low_t* qcoeff_ptr,
+                                tran_low_t* dqcoeff_ptr,
+                                const int16_t* dequant_ptr,
+                                uint16_t* eob_ptr,
+                                const struct ScanOrder* const scan_order);
+#define vp9_quantize_fp_32x32 vp9_quantize_fp_32x32_neon
+
+void vp9_scale_and_extend_frame_c(const struct yv12_buffer_config* src,
+                                  struct yv12_buffer_config* dst,
+                                  INTERP_FILTER filter_type,
+                                  int phase_scaler);
+void vp9_scale_and_extend_frame_neon(const struct yv12_buffer_config* src,
+                                     struct yv12_buffer_config* dst,
+                                     INTERP_FILTER filter_type,
+                                     int phase_scaler);
+#define vp9_scale_and_extend_frame vp9_scale_and_extend_frame_neon
+
+void vp9_rtcd(void);
+
+#include "vpx_config.h"
+
+#ifdef RTCD_C
+#include "vpx_ports/arm.h"
+static void setup_rtcd_internal(void) {
+  int flags = arm_cpu_caps();
+
+  (void)flags;
+}
+#endif
+
+#ifdef __cplusplus
+}  // extern "C"
+#endif
+
+#endif
diff --git a/third_party/libvpx/source/config/linux/arm64-gcc/vpx_config.asm b/third_party/libvpx/source/config/linux/arm64-gcc/vpx_config.asm
new file mode 100644
index 0000000000000..0c55d08057762
--- /dev/null
+++ b/third_party/libvpx/source/config/linux/arm64-gcc/vpx_config.asm
@@ -0,0 +1,108 @@
+@ This file was created from a .asm file
+@  using the ads2gas.pl script.
+.syntax unified
+.equ VPX_ARCH_ARM ,  1
+.equ ARCH_ARM ,  1
+.equ VPX_ARCH_AARCH64 ,  1
+.equ ARCH_AARCH64 ,  1
+.equ VPX_ARCH_MIPS ,  0
+.equ ARCH_MIPS ,  0
+.equ VPX_ARCH_X86 ,  0
+.equ ARCH_X86 ,  0
+.equ VPX_ARCH_X86_64 ,  0
+.equ ARCH_X86_64 ,  0
+.equ VPX_ARCH_PPC ,  0
+.equ ARCH_PPC ,  0
+.equ VPX_ARCH_LOONGARCH ,  0
+.equ ARCH_LOONGARCH ,  0
+.equ HAVE_NEON_ASM ,  0
+.equ HAVE_NEON ,  1
+.equ HAVE_NEON_DOTPROD ,  1
+.equ HAVE_NEON_I8MM ,  1
+.equ HAVE_SVE ,  1
+.equ HAVE_SVE2 ,  1
+.equ HAVE_MIPS32 ,  0
+.equ HAVE_DSPR2 ,  0
+.equ HAVE_MSA ,  0
+.equ HAVE_MIPS64 ,  0
+.equ HAVE_MMX ,  0
+.equ HAVE_SSE ,  0
+.equ HAVE_SSE2 ,  0
+.equ HAVE_SSE3 ,  0
+.equ HAVE_SSSE3 ,  0
+.equ HAVE_SSE4_1 ,  0
+.equ HAVE_AVX ,  0
+.equ HAVE_AVX2 ,  0
+.equ HAVE_AVX512 ,  0
+.equ HAVE_VSX ,  0
+.equ HAVE_MMI ,  0
+.equ HAVE_LSX ,  0
+.equ HAVE_LASX ,  0
+.equ HAVE_VPX_PORTS ,  1
+.equ HAVE_PTHREAD_H ,  1
+.equ HAVE_UNISTD_H ,  0
+.equ CONFIG_DEPENDENCY_TRACKING ,  1
+.equ CONFIG_EXTERNAL_BUILD ,  1
+.equ CONFIG_INSTALL_DOCS ,  0
+.equ CONFIG_INSTALL_BINS ,  1
+.equ CONFIG_INSTALL_LIBS ,  1
+.equ CONFIG_INSTALL_SRCS ,  0
+.equ CONFIG_DEBUG ,  0
+.equ CONFIG_GPROF ,  0
+.equ CONFIG_GCOV ,  0
+.equ CONFIG_RVCT ,  0
+.equ CONFIG_GCC ,  1
+.equ CONFIG_MSVS ,  0
+.equ CONFIG_PIC ,  0
+.equ CONFIG_BIG_ENDIAN ,  0
+.equ CONFIG_CODEC_SRCS ,  0
+.equ CONFIG_DEBUG_LIBS ,  0
+.equ CONFIG_DEQUANT_TOKENS ,  0
+.equ CONFIG_DC_RECON ,  0
+.equ CONFIG_RUNTIME_CPU_DETECT ,  1
+.equ CONFIG_POSTPROC ,  1
+.equ CONFIG_VP9_POSTPROC ,  1
+.equ CONFIG_MULTITHREAD ,  1
+.equ CONFIG_INTERNAL_STATS ,  0
+.equ CONFIG_VP8_ENCODER ,  1
+.equ CONFIG_VP8_DECODER ,  1
+.equ CONFIG_VP9_ENCODER ,  1
+.equ CONFIG_VP9_DECODER ,  1
+.equ CONFIG_VP8 ,  1
+.equ CONFIG_VP9 ,  1
+.equ CONFIG_ENCODERS ,  1
+.equ CONFIG_DECODERS ,  1
+.equ CONFIG_STATIC_MSVCRT ,  0
+.equ CONFIG_SPATIAL_RESAMPLING ,  1
+.equ CONFIG_REALTIME_ONLY ,  1
+.equ CONFIG_ONTHEFLY_BITPACKING ,  0
+.equ CONFIG_ERROR_CONCEALMENT ,  0
+.equ CONFIG_SHARED ,  0
+.equ CONFIG_STATIC ,  1
+.equ CONFIG_SMALL ,  0
+.equ CONFIG_POSTPROC_VISUALIZER ,  0
+.equ CONFIG_OS_SUPPORT ,  1
+.equ CONFIG_UNIT_TESTS ,  1
+.equ CONFIG_WEBM_IO ,  1
+.equ CONFIG_LIBYUV ,  0
+.equ CONFIG_DECODE_PERF_TESTS ,  0
+.equ CONFIG_ENCODE_PERF_TESTS ,  0
+.equ CONFIG_MULTI_RES_ENCODING ,  1
+.equ CONFIG_TEMPORAL_DENOISING ,  1
+.equ CONFIG_VP9_TEMPORAL_DENOISING ,  1
+.equ CONFIG_COEFFICIENT_RANGE_CHECKING ,  0
+.equ CONFIG_VP9_HIGHBITDEPTH ,  0
+.equ CONFIG_BETTER_HW_COMPATIBILITY ,  0
+.equ CONFIG_EXPERIMENTAL ,  0
+.equ CONFIG_SIZE_LIMIT ,  1
+.equ CONFIG_ALWAYS_ADJUST_BPM ,  0
+.equ CONFIG_BITSTREAM_DEBUG ,  0
+.equ CONFIG_MISMATCH_DEBUG ,  0
+.equ CONFIG_FP_MB_STATS ,  0
+.equ CONFIG_EMULATE_HARDWARE ,  0
+.equ CONFIG_NON_GREEDY_MV ,  0
+.equ CONFIG_RATE_CTRL ,  0
+.equ CONFIG_COLLECT_COMPONENT_TIMING ,  0
+.equ DECODE_WIDTH_LIMIT ,  16384
+.equ DECODE_HEIGHT_LIMIT ,  16384
+    .section .note.GNU-stack,"",%progbits
diff --git a/third_party/libvpx/source/config/linux/arm64-gcc/vpx_config.c b/third_party/libvpx/source/config/linux/arm64-gcc/vpx_config.c
new file mode 100644
index 0000000000000..273c20eb2db32
--- /dev/null
+++ b/third_party/libvpx/source/config/linux/arm64-gcc/vpx_config.c
@@ -0,0 +1,10 @@
+/* Copyright (c) 2011 The WebM project authors. All Rights Reserved. */
+/*  */
+/* Use of this source code is governed by a BSD-style license */
+/* that can be found in the LICENSE file in the root of the source */
+/* tree. An additional intellectual property rights grant can be found */
+/* in the file PATENTS.  All contributing project authors may */
+/* be found in the AUTHORS file in the root of the source tree. */
+#include "vpx/vpx_codec.h"
+static const char* const cfg = "--target=armv8-linux-gcc --enable-external-build --enable-postproc --enable-multi-res-encoding --enable-temporal-denoising --enable-vp9-temporal-denoising --enable-vp9-postproc --size-limit=16384x16384 --enable-realtime-only --disable-install-docs --disable-libyuv";
+const char *vpx_codec_build_config(void) {return cfg;}
diff --git a/third_party/libvpx/source/config/linux/arm64-gcc/vpx_config.h b/third_party/libvpx/source/config/linux/arm64-gcc/vpx_config.h
new file mode 100644
index 0000000000000..39bc1e6f09283
--- /dev/null
+++ b/third_party/libvpx/source/config/linux/arm64-gcc/vpx_config.h
@@ -0,0 +1,117 @@
+/* Copyright (c) 2011 The WebM project authors. All Rights Reserved. */
+/*  */
+/* Use of this source code is governed by a BSD-style license */
+/* that can be found in the LICENSE file in the root of the source */
+/* tree. An additional intellectual property rights grant can be found */
+/* in the file PATENTS.  All contributing project authors may */
+/* be found in the AUTHORS file in the root of the source tree. */
+/* This file automatically generated by configure. Do not edit! */
+#ifndef VPX_CONFIG_H
+#define VPX_CONFIG_H
+#define RESTRICT    
+#define INLINE      inline
+#define VPX_ARCH_ARM 1
+#define ARCH_ARM 1
+#define VPX_ARCH_AARCH64 1
+#define ARCH_AARCH64 1
+#define VPX_ARCH_MIPS 0
+#define ARCH_MIPS 0
+#define VPX_ARCH_X86 0
+#define ARCH_X86 0
+#define VPX_ARCH_X86_64 0
+#define ARCH_X86_64 0
+#define VPX_ARCH_PPC 0
+#define ARCH_PPC 0
+#define VPX_ARCH_LOONGARCH 0
+#define ARCH_LOONGARCH 0
+#define HAVE_NEON_ASM 0
+#define HAVE_NEON 1
+#define HAVE_NEON_DOTPROD 1
+#define HAVE_NEON_I8MM 1
+#define HAVE_SVE 1
+#define HAVE_SVE2 1
+#define HAVE_MIPS32 0
+#define HAVE_DSPR2 0
+#define HAVE_MSA 0
+#define HAVE_MIPS64 0
+#define HAVE_MMX 0
+#define HAVE_SSE 0
+#define HAVE_SSE2 0
+#define HAVE_SSE3 0
+#define HAVE_SSSE3 0
+#define HAVE_SSE4_1 0
+#define HAVE_AVX 0
+#define HAVE_AVX2 0
+#define HAVE_AVX512 0
+#define HAVE_VSX 0
+#define HAVE_MMI 0
+#define HAVE_LSX 0
+#define HAVE_LASX 0
+#define HAVE_VPX_PORTS 1
+#define HAVE_PTHREAD_H 1
+#define HAVE_UNISTD_H 0
+#define CONFIG_DEPENDENCY_TRACKING 1
+#define CONFIG_EXTERNAL_BUILD 1
+#define CONFIG_INSTALL_DOCS 0
+#define CONFIG_INSTALL_BINS 1
+#define CONFIG_INSTALL_LIBS 1
+#define CONFIG_INSTALL_SRCS 0
+#define CONFIG_DEBUG 0
+#define CONFIG_GPROF 0
+#define CONFIG_GCOV 0
+#define CONFIG_RVCT 0
+#define CONFIG_GCC 1
+#define CONFIG_MSVS 0
+#define CONFIG_PIC 0
+#define CONFIG_BIG_ENDIAN 0
+#define CONFIG_CODEC_SRCS 0
+#define CONFIG_DEBUG_LIBS 0
+#define CONFIG_DEQUANT_TOKENS 0
+#define CONFIG_DC_RECON 0
+#define CONFIG_RUNTIME_CPU_DETECT 1
+#define CONFIG_POSTPROC 1
+#define CONFIG_VP9_POSTPROC 1
+#define CONFIG_MULTITHREAD 1
+#define CONFIG_INTERNAL_STATS 0
+#define CONFIG_VP8_ENCODER 1
+#define CONFIG_VP8_DECODER 1
+#define CONFIG_VP9_ENCODER 1
+#define CONFIG_VP9_DECODER 1
+#define CONFIG_VP8 1
+#define CONFIG_VP9 1
+#define CONFIG_ENCODERS 1
+#define CONFIG_DECODERS 1
+#define CONFIG_STATIC_MSVCRT 0
+#define CONFIG_SPATIAL_RESAMPLING 1
+#define CONFIG_REALTIME_ONLY 1
+#define CONFIG_ONTHEFLY_BITPACKING 0
+#define CONFIG_ERROR_CONCEALMENT 0
+#define CONFIG_SHARED 0
+#define CONFIG_STATIC 1
+#define CONFIG_SMALL 0
+#define CONFIG_POSTPROC_VISUALIZER 0
+#define CONFIG_OS_SUPPORT 1
+#define CONFIG_UNIT_TESTS 1
+#define CONFIG_WEBM_IO 1
+#define CONFIG_LIBYUV 0
+#define CONFIG_DECODE_PERF_TESTS 0
+#define CONFIG_ENCODE_PERF_TESTS 0
+#define CONFIG_MULTI_RES_ENCODING 1
+#define CONFIG_TEMPORAL_DENOISING 1
+#define CONFIG_VP9_TEMPORAL_DENOISING 1
+#define CONFIG_COEFFICIENT_RANGE_CHECKING 0
+#define CONFIG_VP9_HIGHBITDEPTH 0
+#define CONFIG_BETTER_HW_COMPATIBILITY 0
+#define CONFIG_EXPERIMENTAL 0
+#define CONFIG_SIZE_LIMIT 1
+#define CONFIG_ALWAYS_ADJUST_BPM 0
+#define CONFIG_BITSTREAM_DEBUG 0
+#define CONFIG_MISMATCH_DEBUG 0
+#define CONFIG_FP_MB_STATS 0
+#define CONFIG_EMULATE_HARDWARE 0
+#define CONFIG_NON_GREEDY_MV 0
+#define CONFIG_RATE_CTRL 0
+#define CONFIG_COLLECT_COMPONENT_TIMING 0
+#define DECODE_WIDTH_LIMIT 16384
+#define DECODE_HEIGHT_LIMIT 16384
+#endif /* VPX_CONFIG_H */
diff --git a/third_party/libvpx/source/config/linux/arm64-gcc/vpx_dsp_rtcd.h b/third_party/libvpx/source/config/linux/arm64-gcc/vpx_dsp_rtcd.h
new file mode 100644
index 0000000000000..7a934ce335def
--- /dev/null
+++ b/third_party/libvpx/source/config/linux/arm64-gcc/vpx_dsp_rtcd.h
@@ -0,0 +1,3705 @@
+// This file is generated. Do not edit.
+#ifndef VPX_DSP_RTCD_H_
+#define VPX_DSP_RTCD_H_
+
+#ifdef RTCD_C
+#define RTCD_EXTERN
+#else
+#define RTCD_EXTERN extern
+#endif
+
+/*
+ * DSP
+ */
+
+#include "vpx/vpx_integer.h"
+#include "vpx_dsp/vpx_dsp_common.h"
+#include "vpx_dsp/vpx_filter.h"
+#if CONFIG_VP9_ENCODER
+struct macroblock_plane;
+struct ScanOrder;
+#endif
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+unsigned int vpx_avg_4x4_c(const uint8_t*, int p);
+unsigned int vpx_avg_4x4_neon(const uint8_t*, int p);
+#define vpx_avg_4x4 vpx_avg_4x4_neon
+
+unsigned int vpx_avg_8x8_c(const uint8_t*, int p);
+unsigned int vpx_avg_8x8_neon(const uint8_t*, int p);
+#define vpx_avg_8x8 vpx_avg_8x8_neon
+
+void vpx_comp_avg_pred_c(uint8_t* comp_pred,
+                         const uint8_t* pred,
+                         int width,
+                         int height,
+                         const uint8_t* ref,
+                         int ref_stride);
+void vpx_comp_avg_pred_neon(uint8_t* comp_pred,
+                            const uint8_t* pred,
+                            int width,
+                            int height,
+                            const uint8_t* ref,
+                            int ref_stride);
+#define vpx_comp_avg_pred vpx_comp_avg_pred_neon
+
+void vpx_convolve8_c(const uint8_t* src,
+                     ptrdiff_t src_stride,
+                     uint8_t* dst,
+                     ptrdiff_t dst_stride,
+                     const InterpKernel* filter,
+                     int x0_q4,
+                     int x_step_q4,
+                     int y0_q4,
+                     int y_step_q4,
+                     int w,
+                     int h);
+void vpx_convolve8_neon(const uint8_t* src,
+                        ptrdiff_t src_stride,
+                        uint8_t* dst,
+                        ptrdiff_t dst_stride,
+                        const InterpKernel* filter,
+                        int x0_q4,
+                        int x_step_q4,
+                        int y0_q4,
+                        int y_step_q4,
+                        int w,
+                        int h);
+void vpx_convolve8_neon_dotprod(const uint8_t* src,
+                                ptrdiff_t src_stride,
+                                uint8_t* dst,
+                                ptrdiff_t dst_stride,
+                                const InterpKernel* filter,
+                                int x0_q4,
+                                int x_step_q4,
+                                int y0_q4,
+                                int y_step_q4,
+                                int w,
+                                int h);
+void vpx_convolve8_neon_i8mm(const uint8_t* src,
+                             ptrdiff_t src_stride,
+                             uint8_t* dst,
+                             ptrdiff_t dst_stride,
+                             const InterpKernel* filter,
+                             int x0_q4,
+                             int x_step_q4,
+                             int y0_q4,
+                             int y_step_q4,
+                             int w,
+                             int h);
+RTCD_EXTERN void (*vpx_convolve8)(const uint8_t* src,
+                                  ptrdiff_t src_stride,
+                                  uint8_t* dst,
+                                  ptrdiff_t dst_stride,
+                                  const InterpKernel* filter,
+                                  int x0_q4,
+                                  int x_step_q4,
+                                  int y0_q4,
+                                  int y_step_q4,
+                                  int w,
+                                  int h);
+
+void vpx_convolve8_avg_c(const uint8_t* src,
+                         ptrdiff_t src_stride,
+                         uint8_t* dst,
+                         ptrdiff_t dst_stride,
+                         const InterpKernel* filter,
+                         int x0_q4,
+                         int x_step_q4,
+                         int y0_q4,
+                         int y_step_q4,
+                         int w,
+                         int h);
+void vpx_convolve8_avg_neon(const uint8_t* src,
+                            ptrdiff_t src_stride,
+                            uint8_t* dst,
+                            ptrdiff_t dst_stride,
+                            const InterpKernel* filter,
+                            int x0_q4,
+                            int x_step_q4,
+                            int y0_q4,
+                            int y_step_q4,
+                            int w,
+                            int h);
+void vpx_convolve8_avg_neon_dotprod(const uint8_t* src,
+                                    ptrdiff_t src_stride,
+                                    uint8_t* dst,
+                                    ptrdiff_t dst_stride,
+                                    const InterpKernel* filter,
+                                    int x0_q4,
+                                    int x_step_q4,
+                                    int y0_q4,
+                                    int y_step_q4,
+                                    int w,
+                                    int h);
+void vpx_convolve8_avg_neon_i8mm(const uint8_t* src,
+                                 ptrdiff_t src_stride,
+                                 uint8_t* dst,
+                                 ptrdiff_t dst_stride,
+                                 const InterpKernel* filter,
+                                 int x0_q4,
+                                 int x_step_q4,
+                                 int y0_q4,
+                                 int y_step_q4,
+                                 int w,
+                                 int h);
+RTCD_EXTERN void (*vpx_convolve8_avg)(const uint8_t* src,
+                                      ptrdiff_t src_stride,
+                                      uint8_t* dst,
+                                      ptrdiff_t dst_stride,
+                                      const InterpKernel* filter,
+                                      int x0_q4,
+                                      int x_step_q4,
+                                      int y0_q4,
+                                      int y_step_q4,
+                                      int w,
+                                      int h);
+
+void vpx_convolve8_avg_horiz_c(const uint8_t* src,
+                               ptrdiff_t src_stride,
+                               uint8_t* dst,
+                               ptrdiff_t dst_stride,
+                               const InterpKernel* filter,
+                               int x0_q4,
+                               int x_step_q4,
+                               int y0_q4,
+                               int y_step_q4,
+                               int w,
+                               int h);
+void vpx_convolve8_avg_horiz_neon(const uint8_t* src,
+                                  ptrdiff_t src_stride,
+                                  uint8_t* dst,
+                                  ptrdiff_t dst_stride,
+                                  const InterpKernel* filter,
+                                  int x0_q4,
+                                  int x_step_q4,
+                                  int y0_q4,
+                                  int y_step_q4,
+                                  int w,
+                                  int h);
+void vpx_convolve8_avg_horiz_neon_dotprod(const uint8_t* src,
+                                          ptrdiff_t src_stride,
+                                          uint8_t* dst,
+                                          ptrdiff_t dst_stride,
+                                          const InterpKernel* filter,
+                                          int x0_q4,
+                                          int x_step_q4,
+                                          int y0_q4,
+                                          int y_step_q4,
+                                          int w,
+                                          int h);
+void vpx_convolve8_avg_horiz_neon_i8mm(const uint8_t* src,
+                                       ptrdiff_t src_stride,
+                                       uint8_t* dst,
+                                       ptrdiff_t dst_stride,
+                                       const InterpKernel* filter,
+                                       int x0_q4,
+                                       int x_step_q4,
+                                       int y0_q4,
+                                       int y_step_q4,
+                                       int w,
+                                       int h);
+RTCD_EXTERN void (*vpx_convolve8_avg_horiz)(const uint8_t* src,
+                                            ptrdiff_t src_stride,
+                                            uint8_t* dst,
+                                            ptrdiff_t dst_stride,
+                                            const InterpKernel* filter,
+                                            int x0_q4,
+                                            int x_step_q4,
+                                            int y0_q4,
+                                            int y_step_q4,
+                                            int w,
+                                            int h);
+
+void vpx_convolve8_avg_vert_c(const uint8_t* src,
+                              ptrdiff_t src_stride,
+                              uint8_t* dst,
+                              ptrdiff_t dst_stride,
+                              const InterpKernel* filter,
+                              int x0_q4,
+                              int x_step_q4,
+                              int y0_q4,
+                              int y_step_q4,
+                              int w,
+                              int h);
+void vpx_convolve8_avg_vert_neon(const uint8_t* src,
+                                 ptrdiff_t src_stride,
+                                 uint8_t* dst,
+                                 ptrdiff_t dst_stride,
+                                 const InterpKernel* filter,
+                                 int x0_q4,
+                                 int x_step_q4,
+                                 int y0_q4,
+                                 int y_step_q4,
+                                 int w,
+                                 int h);
+void vpx_convolve8_avg_vert_neon_dotprod(const uint8_t* src,
+                                         ptrdiff_t src_stride,
+                                         uint8_t* dst,
+                                         ptrdiff_t dst_stride,
+                                         const InterpKernel* filter,
+                                         int x0_q4,
+                                         int x_step_q4,
+                                         int y0_q4,
+                                         int y_step_q4,
+                                         int w,
+                                         int h);
+void vpx_convolve8_avg_vert_neon_i8mm(const uint8_t* src,
+                                      ptrdiff_t src_stride,
+                                      uint8_t* dst,
+                                      ptrdiff_t dst_stride,
+                                      const InterpKernel* filter,
+                                      int x0_q4,
+                                      int x_step_q4,
+                                      int y0_q4,
+                                      int y_step_q4,
+                                      int w,
+                                      int h);
+RTCD_EXTERN void (*vpx_convolve8_avg_vert)(const uint8_t* src,
+                                           ptrdiff_t src_stride,
+                                           uint8_t* dst,
+                                           ptrdiff_t dst_stride,
+                                           const InterpKernel* filter,
+                                           int x0_q4,
+                                           int x_step_q4,
+                                           int y0_q4,
+                                           int y_step_q4,
+                                           int w,
+                                           int h);
+
+void vpx_convolve8_horiz_c(const uint8_t* src,
+                           ptrdiff_t src_stride,
+                           uint8_t* dst,
+                           ptrdiff_t dst_stride,
+                           const InterpKernel* filter,
+                           int x0_q4,
+                           int x_step_q4,
+                           int y0_q4,
+                           int y_step_q4,
+                           int w,
+                           int h);
+void vpx_convolve8_horiz_neon(const uint8_t* src,
+                              ptrdiff_t src_stride,
+                              uint8_t* dst,
+                              ptrdiff_t dst_stride,
+                              const InterpKernel* filter,
+                              int x0_q4,
+                              int x_step_q4,
+                              int y0_q4,
+                              int y_step_q4,
+                              int w,
+                              int h);
+void vpx_convolve8_horiz_neon_dotprod(const uint8_t* src,
+                                      ptrdiff_t src_stride,
+                                      uint8_t* dst,
+                                      ptrdiff_t dst_stride,
+                                      const InterpKernel* filter,
+                                      int x0_q4,
+                                      int x_step_q4,
+                                      int y0_q4,
+                                      int y_step_q4,
+                                      int w,
+                                      int h);
+void vpx_convolve8_horiz_neon_i8mm(const uint8_t* src,
+                                   ptrdiff_t src_stride,
+                                   uint8_t* dst,
+                                   ptrdiff_t dst_stride,
+                                   const InterpKernel* filter,
+                                   int x0_q4,
+                                   int x_step_q4,
+                                   int y0_q4,
+                                   int y_step_q4,
+                                   int w,
+                                   int h);
+RTCD_EXTERN void (*vpx_convolve8_horiz)(const uint8_t* src,
+                                        ptrdiff_t src_stride,
+                                        uint8_t* dst,
+                                        ptrdiff_t dst_stride,
+                                        const InterpKernel* filter,
+                                        int x0_q4,
+                                        int x_step_q4,
+                                        int y0_q4,
+                                        int y_step_q4,
+                                        int w,
+                                        int h);
+
+void vpx_convolve8_vert_c(const uint8_t* src,
+                          ptrdiff_t src_stride,
+                          uint8_t* dst,
+                          ptrdiff_t dst_stride,
+                          const InterpKernel* filter,
+                          int x0_q4,
+                          int x_step_q4,
+                          int y0_q4,
+                          int y_step_q4,
+                          int w,
+                          int h);
+void vpx_convolve8_vert_neon(const uint8_t* src,
+                             ptrdiff_t src_stride,
+                             uint8_t* dst,
+                             ptrdiff_t dst_stride,
+                             const InterpKernel* filter,
+                             int x0_q4,
+                             int x_step_q4,
+                             int y0_q4,
+                             int y_step_q4,
+                             int w,
+                             int h);
+void vpx_convolve8_vert_neon_dotprod(const uint8_t* src,
+                                     ptrdiff_t src_stride,
+                                     uint8_t* dst,
+                                     ptrdiff_t dst_stride,
+                                     const InterpKernel* filter,
+                                     int x0_q4,
+                                     int x_step_q4,
+                                     int y0_q4,
+                                     int y_step_q4,
+                                     int w,
+                                     int h);
+void vpx_convolve8_vert_neon_i8mm(const uint8_t* src,
+                                  ptrdiff_t src_stride,
+                                  uint8_t* dst,
+                                  ptrdiff_t dst_stride,
+                                  const InterpKernel* filter,
+                                  int x0_q4,
+                                  int x_step_q4,
+                                  int y0_q4,
+                                  int y_step_q4,
+                                  int w,
+                                  int h);
+RTCD_EXTERN void (*vpx_convolve8_vert)(const uint8_t* src,
+                                       ptrdiff_t src_stride,
+                                       uint8_t* dst,
+                                       ptrdiff_t dst_stride,
+                                       const InterpKernel* filter,
+                                       int x0_q4,
+                                       int x_step_q4,
+                                       int y0_q4,
+                                       int y_step_q4,
+                                       int w,
+                                       int h);
+
+void vpx_convolve_avg_c(const uint8_t* src,
+                        ptrdiff_t src_stride,
+                        uint8_t* dst,
+                        ptrdiff_t dst_stride,
+                        const InterpKernel* filter,
+                        int x0_q4,
+                        int x_step_q4,
+                        int y0_q4,
+                        int y_step_q4,
+                        int w,
+                        int h);
+void vpx_convolve_avg_neon(const uint8_t* src,
+                           ptrdiff_t src_stride,
+                           uint8_t* dst,
+                           ptrdiff_t dst_stride,
+                           const InterpKernel* filter,
+                           int x0_q4,
+                           int x_step_q4,
+                           int y0_q4,
+                           int y_step_q4,
+                           int w,
+                           int h);
+#define vpx_convolve_avg vpx_convolve_avg_neon
+
+void vpx_convolve_copy_c(const uint8_t* src,
+                         ptrdiff_t src_stride,
+                         uint8_t* dst,
+                         ptrdiff_t dst_stride,
+                         const InterpKernel* filter,
+                         int x0_q4,
+                         int x_step_q4,
+                         int y0_q4,
+                         int y_step_q4,
+                         int w,
+                         int h);
+void vpx_convolve_copy_neon(const uint8_t* src,
+                            ptrdiff_t src_stride,
+                            uint8_t* dst,
+                            ptrdiff_t dst_stride,
+                            const InterpKernel* filter,
+                            int x0_q4,
+                            int x_step_q4,
+                            int y0_q4,
+                            int y_step_q4,
+                            int w,
+                            int h);
+#define vpx_convolve_copy vpx_convolve_copy_neon
+
+void vpx_d117_predictor_16x16_c(uint8_t* dst,
+                                ptrdiff_t stride,
+                                const uint8_t* above,
+                                const uint8_t* left);
+void vpx_d117_predictor_16x16_neon(uint8_t* dst,
+                                   ptrdiff_t stride,
+                                   const uint8_t* above,
+                                   const uint8_t* left);
+#define vpx_d117_predictor_16x16 vpx_d117_predictor_16x16_neon
+
+void vpx_d117_predictor_32x32_c(uint8_t* dst,
+                                ptrdiff_t stride,
+                                const uint8_t* above,
+                                const uint8_t* left);
+void vpx_d117_predictor_32x32_neon(uint8_t* dst,
+                                   ptrdiff_t stride,
+                                   const uint8_t* above,
+                                   const uint8_t* left);
+#define vpx_d117_predictor_32x32 vpx_d117_predictor_32x32_neon
+
+void vpx_d117_predictor_4x4_c(uint8_t* dst,
+                              ptrdiff_t stride,
+                              const uint8_t* above,
+                              const uint8_t* left);
+void vpx_d117_predictor_4x4_neon(uint8_t* dst,
+                                 ptrdiff_t stride,
+                                 const uint8_t* above,
+                                 const uint8_t* left);
+#define vpx_d117_predictor_4x4 vpx_d117_predictor_4x4_neon
+
+void vpx_d117_predictor_8x8_c(uint8_t* dst,
+                              ptrdiff_t stride,
+                              const uint8_t* above,
+                              const uint8_t* left);
+void vpx_d117_predictor_8x8_neon(uint8_t* dst,
+                                 ptrdiff_t stride,
+                                 const uint8_t* above,
+                                 const uint8_t* left);
+#define vpx_d117_predictor_8x8 vpx_d117_predictor_8x8_neon
+
+void vpx_d135_predictor_16x16_c(uint8_t* dst,
+                                ptrdiff_t stride,
+                                const uint8_t* above,
+                                const uint8_t* left);
+void vpx_d135_predictor_16x16_neon(uint8_t* dst,
+                                   ptrdiff_t stride,
+                                   const uint8_t* above,
+                                   const uint8_t* left);
+#define vpx_d135_predictor_16x16 vpx_d135_predictor_16x16_neon
+
+void vpx_d135_predictor_32x32_c(uint8_t* dst,
+                                ptrdiff_t stride,
+                                const uint8_t* above,
+                                const uint8_t* left);
+void vpx_d135_predictor_32x32_neon(uint8_t* dst,
+                                   ptrdiff_t stride,
+                                   const uint8_t* above,
+                                   const uint8_t* left);
+#define vpx_d135_predictor_32x32 vpx_d135_predictor_32x32_neon
+
+void vpx_d135_predictor_4x4_c(uint8_t* dst,
+                              ptrdiff_t stride,
+                              const uint8_t* above,
+                              const uint8_t* left);
+void vpx_d135_predictor_4x4_neon(uint8_t* dst,
+                                 ptrdiff_t stride,
+                                 const uint8_t* above,
+                                 const uint8_t* left);
+#define vpx_d135_predictor_4x4 vpx_d135_predictor_4x4_neon
+
+void vpx_d135_predictor_8x8_c(uint8_t* dst,
+                              ptrdiff_t stride,
+                              const uint8_t* above,
+                              const uint8_t* left);
+void vpx_d135_predictor_8x8_neon(uint8_t* dst,
+                                 ptrdiff_t stride,
+                                 const uint8_t* above,
+                                 const uint8_t* left);
+#define vpx_d135_predictor_8x8 vpx_d135_predictor_8x8_neon
+
+void vpx_d153_predictor_16x16_c(uint8_t* dst,
+                                ptrdiff_t stride,
+                                const uint8_t* above,
+                                const uint8_t* left);
+void vpx_d153_predictor_16x16_neon(uint8_t* dst,
+                                   ptrdiff_t stride,
+                                   const uint8_t* above,
+                                   const uint8_t* left);
+#define vpx_d153_predictor_16x16 vpx_d153_predictor_16x16_neon
+
+void vpx_d153_predictor_32x32_c(uint8_t* dst,
+                                ptrdiff_t stride,
+                                const uint8_t* above,
+                                const uint8_t* left);
+void vpx_d153_predictor_32x32_neon(uint8_t* dst,
+                                   ptrdiff_t stride,
+                                   const uint8_t* above,
+                                   const uint8_t* left);
+#define vpx_d153_predictor_32x32 vpx_d153_predictor_32x32_neon
+
+void vpx_d153_predictor_4x4_c(uint8_t* dst,
+                              ptrdiff_t stride,
+                              const uint8_t* above,
+                              const uint8_t* left);
+void vpx_d153_predictor_4x4_neon(uint8_t* dst,
+                                 ptrdiff_t stride,
+                                 const uint8_t* above,
+                                 const uint8_t* left);
+#define vpx_d153_predictor_4x4 vpx_d153_predictor_4x4_neon
+
+void vpx_d153_predictor_8x8_c(uint8_t* dst,
+                              ptrdiff_t stride,
+                              const uint8_t* above,
+                              const uint8_t* left);
+void vpx_d153_predictor_8x8_neon(uint8_t* dst,
+                                 ptrdiff_t stride,
+                                 const uint8_t* above,
+                                 const uint8_t* left);
+#define vpx_d153_predictor_8x8 vpx_d153_predictor_8x8_neon
+
+void vpx_d207_predictor_16x16_c(uint8_t* dst,
+                                ptrdiff_t stride,
+                                const uint8_t* above,
+                                const uint8_t* left);
+void vpx_d207_predictor_16x16_neon(uint8_t* dst,
+                                   ptrdiff_t stride,
+                                   const uint8_t* above,
+                                   const uint8_t* left);
+#define vpx_d207_predictor_16x16 vpx_d207_predictor_16x16_neon
+
+void vpx_d207_predictor_32x32_c(uint8_t* dst,
+                                ptrdiff_t stride,
+                                const uint8_t* above,
+                                const uint8_t* left);
+void vpx_d207_predictor_32x32_neon(uint8_t* dst,
+                                   ptrdiff_t stride,
+                                   const uint8_t* above,
+                                   const uint8_t* left);
+#define vpx_d207_predictor_32x32 vpx_d207_predictor_32x32_neon
+
+void vpx_d207_predictor_4x4_c(uint8_t* dst,
+                              ptrdiff_t stride,
+                              const uint8_t* above,
+                              const uint8_t* left);
+void vpx_d207_predictor_4x4_neon(uint8_t* dst,
+                                 ptrdiff_t stride,
+                                 const uint8_t* above,
+                                 const uint8_t* left);
+#define vpx_d207_predictor_4x4 vpx_d207_predictor_4x4_neon
+
+void vpx_d207_predictor_8x8_c(uint8_t* dst,
+                              ptrdiff_t stride,
+                              const uint8_t* above,
+                              const uint8_t* left);
+void vpx_d207_predictor_8x8_neon(uint8_t* dst,
+                                 ptrdiff_t stride,
+                                 const uint8_t* above,
+                                 const uint8_t* left);
+#define vpx_d207_predictor_8x8 vpx_d207_predictor_8x8_neon
+
+void vpx_d45_predictor_16x16_c(uint8_t* dst,
+                               ptrdiff_t stride,
+                               const uint8_t* above,
+                               const uint8_t* left);
+void vpx_d45_predictor_16x16_neon(uint8_t* dst,
+                                  ptrdiff_t stride,
+                                  const uint8_t* above,
+                                  const uint8_t* left);
+#define vpx_d45_predictor_16x16 vpx_d45_predictor_16x16_neon
+
+void vpx_d45_predictor_32x32_c(uint8_t* dst,
+                               ptrdiff_t stride,
+                               const uint8_t* above,
+                               const uint8_t* left);
+void vpx_d45_predictor_32x32_neon(uint8_t* dst,
+                                  ptrdiff_t stride,
+                                  const uint8_t* above,
+                                  const uint8_t* left);
+#define vpx_d45_predictor_32x32 vpx_d45_predictor_32x32_neon
+
+void vpx_d45_predictor_4x4_c(uint8_t* dst,
+                             ptrdiff_t stride,
+                             const uint8_t* above,
+                             const uint8_t* left);
+void vpx_d45_predictor_4x4_neon(uint8_t* dst,
+                                ptrdiff_t stride,
+                                const uint8_t* above,
+                                const uint8_t* left);
+#define vpx_d45_predictor_4x4 vpx_d45_predictor_4x4_neon
+
+void vpx_d45_predictor_8x8_c(uint8_t* dst,
+                             ptrdiff_t stride,
+                             const uint8_t* above,
+                             const uint8_t* left);
+void vpx_d45_predictor_8x8_neon(uint8_t* dst,
+                                ptrdiff_t stride,
+                                const uint8_t* above,
+                                const uint8_t* left);
+#define vpx_d45_predictor_8x8 vpx_d45_predictor_8x8_neon
+
+void vpx_d45e_predictor_4x4_c(uint8_t* dst,
+                              ptrdiff_t stride,
+                              const uint8_t* above,
+                              const uint8_t* left);
+#define vpx_d45e_predictor_4x4 vpx_d45e_predictor_4x4_c
+
+void vpx_d63_predictor_16x16_c(uint8_t* dst,
+                               ptrdiff_t stride,
+                               const uint8_t* above,
+                               const uint8_t* left);
+void vpx_d63_predictor_16x16_neon(uint8_t* dst,
+                                  ptrdiff_t stride,
+                                  const uint8_t* above,
+                                  const uint8_t* left);
+#define vpx_d63_predictor_16x16 vpx_d63_predictor_16x16_neon
+
+void vpx_d63_predictor_32x32_c(uint8_t* dst,
+                               ptrdiff_t stride,
+                               const uint8_t* above,
+                               const uint8_t* left);
+void vpx_d63_predictor_32x32_neon(uint8_t* dst,
+                                  ptrdiff_t stride,
+                                  const uint8_t* above,
+                                  const uint8_t* left);
+#define vpx_d63_predictor_32x32 vpx_d63_predictor_32x32_neon
+
+void vpx_d63_predictor_4x4_c(uint8_t* dst,
+                             ptrdiff_t stride,
+                             const uint8_t* above,
+                             const uint8_t* left);
+void vpx_d63_predictor_4x4_neon(uint8_t* dst,
+                                ptrdiff_t stride,
+                                const uint8_t* above,
+                                const uint8_t* left);
+#define vpx_d63_predictor_4x4 vpx_d63_predictor_4x4_neon
+
+void vpx_d63_predictor_8x8_c(uint8_t* dst,
+                             ptrdiff_t stride,
+                             const uint8_t* above,
+                             const uint8_t* left);
+void vpx_d63_predictor_8x8_neon(uint8_t* dst,
+                                ptrdiff_t stride,
+                                const uint8_t* above,
+                                const uint8_t* left);
+#define vpx_d63_predictor_8x8 vpx_d63_predictor_8x8_neon
+
+void vpx_d63e_predictor_4x4_c(uint8_t* dst,
+                              ptrdiff_t stride,
+                              const uint8_t* above,
+                              const uint8_t* left);
+#define vpx_d63e_predictor_4x4 vpx_d63e_predictor_4x4_c
+
+void vpx_dc_128_predictor_16x16_c(uint8_t* dst,
+                                  ptrdiff_t stride,
+                                  const uint8_t* above,
+                                  const uint8_t* left);
+void vpx_dc_128_predictor_16x16_neon(uint8_t* dst,
+                                     ptrdiff_t stride,
+                                     const uint8_t* above,
+                                     const uint8_t* left);
+#define vpx_dc_128_predictor_16x16 vpx_dc_128_predictor_16x16_neon
+
+void vpx_dc_128_predictor_32x32_c(uint8_t* dst,
+                                  ptrdiff_t stride,
+                                  const uint8_t* above,
+                                  const uint8_t* left);
+void vpx_dc_128_predictor_32x32_neon(uint8_t* dst,
+                                     ptrdiff_t stride,
+                                     const uint8_t* above,
+                                     const uint8_t* left);
+#define vpx_dc_128_predictor_32x32 vpx_dc_128_predictor_32x32_neon
+
+void vpx_dc_128_predictor_4x4_c(uint8_t* dst,
+                                ptrdiff_t stride,
+                                const uint8_t* above,
+                                const uint8_t* left);
+void vpx_dc_128_predictor_4x4_neon(uint8_t* dst,
+                                   ptrdiff_t stride,
+                                   const uint8_t* above,
+                                   const uint8_t* left);
+#define vpx_dc_128_predictor_4x4 vpx_dc_128_predictor_4x4_neon
+
+void vpx_dc_128_predictor_8x8_c(uint8_t* dst,
+                                ptrdiff_t stride,
+                                const uint8_t* above,
+                                const uint8_t* left);
+void vpx_dc_128_predictor_8x8_neon(uint8_t* dst,
+                                   ptrdiff_t stride,
+                                   const uint8_t* above,
+                                   const uint8_t* left);
+#define vpx_dc_128_predictor_8x8 vpx_dc_128_predictor_8x8_neon
+
+void vpx_dc_left_predictor_16x16_c(uint8_t* dst,
+                                   ptrdiff_t stride,
+                                   const uint8_t* above,
+                                   const uint8_t* left);
+void vpx_dc_left_predictor_16x16_neon(uint8_t* dst,
+                                      ptrdiff_t stride,
+                                      const uint8_t* above,
+                                      const uint8_t* left);
+#define vpx_dc_left_predictor_16x16 vpx_dc_left_predictor_16x16_neon
+
+void vpx_dc_left_predictor_32x32_c(uint8_t* dst,
+                                   ptrdiff_t stride,
+                                   const uint8_t* above,
+                                   const uint8_t* left);
+void vpx_dc_left_predictor_32x32_neon(uint8_t* dst,
+                                      ptrdiff_t stride,
+                                      const uint8_t* above,
+                                      const uint8_t* left);
+#define vpx_dc_left_predictor_32x32 vpx_dc_left_predictor_32x32_neon
+
+void vpx_dc_left_predictor_4x4_c(uint8_t* dst,
+                                 ptrdiff_t stride,
+                                 const uint8_t* above,
+                                 const uint8_t* left);
+void vpx_dc_left_predictor_4x4_neon(uint8_t* dst,
+                                    ptrdiff_t stride,
+                                    const uint8_t* above,
+                                    const uint8_t* left);
+#define vpx_dc_left_predictor_4x4 vpx_dc_left_predictor_4x4_neon
+
+void vpx_dc_left_predictor_8x8_c(uint8_t* dst,
+                                 ptrdiff_t stride,
+                                 const uint8_t* above,
+                                 const uint8_t* left);
+void vpx_dc_left_predictor_8x8_neon(uint8_t* dst,
+                                    ptrdiff_t stride,
+                                    const uint8_t* above,
+                                    const uint8_t* left);
+#define vpx_dc_left_predictor_8x8 vpx_dc_left_predictor_8x8_neon
+
+void vpx_dc_predictor_16x16_c(uint8_t* dst,
+                              ptrdiff_t stride,
+                              const uint8_t* above,
+                              const uint8_t* left);
+void vpx_dc_predictor_16x16_neon(uint8_t* dst,
+                                 ptrdiff_t stride,
+                                 const uint8_t* above,
+                                 const uint8_t* left);
+#define vpx_dc_predictor_16x16 vpx_dc_predictor_16x16_neon
+
+void vpx_dc_predictor_32x32_c(uint8_t* dst,
+                              ptrdiff_t stride,
+                              const uint8_t* above,
+                              const uint8_t* left);
+void vpx_dc_predictor_32x32_neon(uint8_t* dst,
+                                 ptrdiff_t stride,
+                                 const uint8_t* above,
+                                 const uint8_t* left);
+#define vpx_dc_predictor_32x32 vpx_dc_predictor_32x32_neon
+
+void vpx_dc_predictor_4x4_c(uint8_t* dst,
+                            ptrdiff_t stride,
+                            const uint8_t* above,
+                            const uint8_t* left);
+void vpx_dc_predictor_4x4_neon(uint8_t* dst,
+                               ptrdiff_t stride,
+                               const uint8_t* above,
+                               const uint8_t* left);
+#define vpx_dc_predictor_4x4 vpx_dc_predictor_4x4_neon
+
+void vpx_dc_predictor_8x8_c(uint8_t* dst,
+                            ptrdiff_t stride,
+                            const uint8_t* above,
+                            const uint8_t* left);
+void vpx_dc_predictor_8x8_neon(uint8_t* dst,
+                               ptrdiff_t stride,
+                               const uint8_t* above,
+                               const uint8_t* left);
+#define vpx_dc_predictor_8x8 vpx_dc_predictor_8x8_neon
+
+void vpx_dc_top_predictor_16x16_c(uint8_t* dst,
+                                  ptrdiff_t stride,
+                                  const uint8_t* above,
+                                  const uint8_t* left);
+void vpx_dc_top_predictor_16x16_neon(uint8_t* dst,
+                                     ptrdiff_t stride,
+                                     const uint8_t* above,
+                                     const uint8_t* left);
+#define vpx_dc_top_predictor_16x16 vpx_dc_top_predictor_16x16_neon
+
+void vpx_dc_top_predictor_32x32_c(uint8_t* dst,
+                                  ptrdiff_t stride,
+                                  const uint8_t* above,
+                                  const uint8_t* left);
+void vpx_dc_top_predictor_32x32_neon(uint8_t* dst,
+                                     ptrdiff_t stride,
+                                     const uint8_t* above,
+                                     const uint8_t* left);
+#define vpx_dc_top_predictor_32x32 vpx_dc_top_predictor_32x32_neon
+
+void vpx_dc_top_predictor_4x4_c(uint8_t* dst,
+                                ptrdiff_t stride,
+                                const uint8_t* above,
+                                const uint8_t* left);
+void vpx_dc_top_predictor_4x4_neon(uint8_t* dst,
+                                   ptrdiff_t stride,
+                                   const uint8_t* above,
+                                   const uint8_t* left);
+#define vpx_dc_top_predictor_4x4 vpx_dc_top_predictor_4x4_neon
+
+void vpx_dc_top_predictor_8x8_c(uint8_t* dst,
+                                ptrdiff_t stride,
+                                const uint8_t* above,
+                                const uint8_t* left);
+void vpx_dc_top_predictor_8x8_neon(uint8_t* dst,
+                                   ptrdiff_t stride,
+                                   const uint8_t* above,
+                                   const uint8_t* left);
+#define vpx_dc_top_predictor_8x8 vpx_dc_top_predictor_8x8_neon
+
+void vpx_fdct16x16_c(const int16_t* input, tran_low_t* output, int stride);
+void vpx_fdct16x16_neon(const int16_t* input, tran_low_t* output, int stride);
+#define vpx_fdct16x16 vpx_fdct16x16_neon
+
+void vpx_fdct16x16_1_c(const int16_t* input, tran_low_t* output, int stride);
+void vpx_fdct16x16_1_neon(const int16_t* input, tran_low_t* output, int stride);
+#define vpx_fdct16x16_1 vpx_fdct16x16_1_neon
+
+void vpx_fdct32x32_c(const int16_t* input, tran_low_t* output, int stride);
+void vpx_fdct32x32_neon(const int16_t* input, tran_low_t* output, int stride);
+#define vpx_fdct32x32 vpx_fdct32x32_neon
+
+void vpx_fdct32x32_1_c(const int16_t* input, tran_low_t* output, int stride);
+void vpx_fdct32x32_1_neon(const int16_t* input, tran_low_t* output, int stride);
+#define vpx_fdct32x32_1 vpx_fdct32x32_1_neon
+
+void vpx_fdct32x32_rd_c(const int16_t* input, tran_low_t* output, int stride);
+void vpx_fdct32x32_rd_neon(const int16_t* input,
+                           tran_low_t* output,
+                           int stride);
+#define vpx_fdct32x32_rd vpx_fdct32x32_rd_neon
+
+void vpx_fdct4x4_c(const int16_t* input, tran_low_t* output, int stride);
+void vpx_fdct4x4_neon(const int16_t* input, tran_low_t* output, int stride);
+#define vpx_fdct4x4 vpx_fdct4x4_neon
+
+void vpx_fdct4x4_1_c(const int16_t* input, tran_low_t* output, int stride);
+void vpx_fdct4x4_1_neon(const int16_t* input, tran_low_t* output, int stride);
+#define vpx_fdct4x4_1 vpx_fdct4x4_1_neon
+
+void vpx_fdct8x8_c(const int16_t* input, tran_low_t* output, int stride);
+void vpx_fdct8x8_neon(const int16_t* input, tran_low_t* output, int stride);
+#define vpx_fdct8x8 vpx_fdct8x8_neon
+
+void vpx_fdct8x8_1_c(const int16_t* input, tran_low_t* output, int stride);
+void vpx_fdct8x8_1_neon(const int16_t* input, tran_low_t* output, int stride);
+#define vpx_fdct8x8_1 vpx_fdct8x8_1_neon
+
+void vpx_get16x16var_c(const uint8_t* src_ptr,
+                       int src_stride,
+                       const uint8_t* ref_ptr,
+                       int ref_stride,
+                       unsigned int* sse,
+                       int* sum);
+void vpx_get16x16var_neon(const uint8_t* src_ptr,
+                          int src_stride,
+                          const uint8_t* ref_ptr,
+                          int ref_stride,
+                          unsigned int* sse,
+                          int* sum);
+void vpx_get16x16var_neon_dotprod(const uint8_t* src_ptr,
+                                  int src_stride,
+                                  const uint8_t* ref_ptr,
+                                  int ref_stride,
+                                  unsigned int* sse,
+                                  int* sum);
+RTCD_EXTERN void (*vpx_get16x16var)(const uint8_t* src_ptr,
+                                    int src_stride,
+                                    const uint8_t* ref_ptr,
+                                    int ref_stride,
+                                    unsigned int* sse,
+                                    int* sum);
+
+unsigned int vpx_get4x4sse_cs_c(const unsigned char* src_ptr,
+                                int src_stride,
+                                const unsigned char* ref_ptr,
+                                int ref_stride);
+unsigned int vpx_get4x4sse_cs_neon(const unsigned char* src_ptr,
+                                   int src_stride,
+                                   const unsigned char* ref_ptr,
+                                   int ref_stride);
+unsigned int vpx_get4x4sse_cs_neon_dotprod(const unsigned char* src_ptr,
+                                           int src_stride,
+                                           const unsigned char* ref_ptr,
+                                           int ref_stride);
+RTCD_EXTERN unsigned int (*vpx_get4x4sse_cs)(const unsigned char* src_ptr,
+                                             int src_stride,
+                                             const unsigned char* ref_ptr,
+                                             int ref_stride);
+
+void vpx_get8x8var_c(const uint8_t* src_ptr,
+                     int src_stride,
+                     const uint8_t* ref_ptr,
+                     int ref_stride,
+                     unsigned int* sse,
+                     int* sum);
+void vpx_get8x8var_neon(const uint8_t* src_ptr,
+                        int src_stride,
+                        const uint8_t* ref_ptr,
+                        int ref_stride,
+                        unsigned int* sse,
+                        int* sum);
+void vpx_get8x8var_neon_dotprod(const uint8_t* src_ptr,
+                                int src_stride,
+                                const uint8_t* ref_ptr,
+                                int ref_stride,
+                                unsigned int* sse,
+                                int* sum);
+RTCD_EXTERN void (*vpx_get8x8var)(const uint8_t* src_ptr,
+                                  int src_stride,
+                                  const uint8_t* ref_ptr,
+                                  int ref_stride,
+                                  unsigned int* sse,
+                                  int* sum);
+
+unsigned int vpx_get_mb_ss_c(const int16_t*);
+#define vpx_get_mb_ss vpx_get_mb_ss_c
+
+void vpx_h_predictor_16x16_c(uint8_t* dst,
+                             ptrdiff_t stride,
+                             const uint8_t* above,
+                             const uint8_t* left);
+void vpx_h_predictor_16x16_neon(uint8_t* dst,
+                                ptrdiff_t stride,
+                                const uint8_t* above,
+                                const uint8_t* left);
+#define vpx_h_predictor_16x16 vpx_h_predictor_16x16_neon
+
+void vpx_h_predictor_32x32_c(uint8_t* dst,
+                             ptrdiff_t stride,
+                             const uint8_t* above,
+                             const uint8_t* left);
+void vpx_h_predictor_32x32_neon(uint8_t* dst,
+                                ptrdiff_t stride,
+                                const uint8_t* above,
+                                const uint8_t* left);
+#define vpx_h_predictor_32x32 vpx_h_predictor_32x32_neon
+
+void vpx_h_predictor_4x4_c(uint8_t* dst,
+                           ptrdiff_t stride,
+                           const uint8_t* above,
+                           const uint8_t* left);
+void vpx_h_predictor_4x4_neon(uint8_t* dst,
+                              ptrdiff_t stride,
+                              const uint8_t* above,
+                              const uint8_t* left);
+#define vpx_h_predictor_4x4 vpx_h_predictor_4x4_neon
+
+void vpx_h_predictor_8x8_c(uint8_t* dst,
+                           ptrdiff_t stride,
+                           const uint8_t* above,
+                           const uint8_t* left);
+void vpx_h_predictor_8x8_neon(uint8_t* dst,
+                              ptrdiff_t stride,
+                              const uint8_t* above,
+                              const uint8_t* left);
+#define vpx_h_predictor_8x8 vpx_h_predictor_8x8_neon
+
+void vpx_hadamard_16x16_c(const int16_t* src_diff,
+                          ptrdiff_t src_stride,
+                          int16_t* coeff);
+void vpx_hadamard_16x16_neon(const int16_t* src_diff,
+                             ptrdiff_t src_stride,
+                             int16_t* coeff);
+#define vpx_hadamard_16x16 vpx_hadamard_16x16_neon
+
+void vpx_hadamard_32x32_c(const int16_t* src_diff,
+                          ptrdiff_t src_stride,
+                          int16_t* coeff);
+void vpx_hadamard_32x32_neon(const int16_t* src_diff,
+                             ptrdiff_t src_stride,
+                             int16_t* coeff);
+#define vpx_hadamard_32x32 vpx_hadamard_32x32_neon
+
+void vpx_hadamard_8x8_c(const int16_t* src_diff,
+                        ptrdiff_t src_stride,
+                        int16_t* coeff);
+void vpx_hadamard_8x8_neon(const int16_t* src_diff,
+                           ptrdiff_t src_stride,
+                           int16_t* coeff);
+#define vpx_hadamard_8x8 vpx_hadamard_8x8_neon
+
+void vpx_he_predictor_4x4_c(uint8_t* dst,
+                            ptrdiff_t stride,
+                            const uint8_t* above,
+                            const uint8_t* left);
+#define vpx_he_predictor_4x4 vpx_he_predictor_4x4_c
+
+void vpx_idct16x16_10_add_c(const tran_low_t* input, uint8_t* dest, int stride);
+void vpx_idct16x16_10_add_neon(const tran_low_t* input,
+                               uint8_t* dest,
+                               int stride);
+#define vpx_idct16x16_10_add vpx_idct16x16_10_add_neon
+
+void vpx_idct16x16_1_add_c(const tran_low_t* input, uint8_t* dest, int stride);
+void vpx_idct16x16_1_add_neon(const tran_low_t* input,
+                              uint8_t* dest,
+                              int stride);
+#define vpx_idct16x16_1_add vpx_idct16x16_1_add_neon
+
+void vpx_idct16x16_256_add_c(const tran_low_t* input,
+                             uint8_t* dest,
+                             int stride);
+void vpx_idct16x16_256_add_neon(const tran_low_t* input,
+                                uint8_t* dest,
+                                int stride);
+#define vpx_idct16x16_256_add vpx_idct16x16_256_add_neon
+
+void vpx_idct16x16_38_add_c(const tran_low_t* input, uint8_t* dest, int stride);
+void vpx_idct16x16_38_add_neon(const tran_low_t* input,
+                               uint8_t* dest,
+                               int stride);
+#define vpx_idct16x16_38_add vpx_idct16x16_38_add_neon
+
+void vpx_idct32x32_1024_add_c(const tran_low_t* input,
+                              uint8_t* dest,
+                              int stride);
+void vpx_idct32x32_1024_add_neon(const tran_low_t* input,
+                                 uint8_t* dest,
+                                 int stride);
+#define vpx_idct32x32_1024_add vpx_idct32x32_1024_add_neon
+
+void vpx_idct32x32_135_add_c(const tran_low_t* input,
+                             uint8_t* dest,
+                             int stride);
+void vpx_idct32x32_135_add_neon(const tran_low_t* input,
+                                uint8_t* dest,
+                                int stride);
+#define vpx_idct32x32_135_add vpx_idct32x32_135_add_neon
+
+void vpx_idct32x32_1_add_c(const tran_low_t* input, uint8_t* dest, int stride);
+void vpx_idct32x32_1_add_neon(const tran_low_t* input,
+                              uint8_t* dest,
+                              int stride);
+#define vpx_idct32x32_1_add vpx_idct32x32_1_add_neon
+
+void vpx_idct32x32_34_add_c(const tran_low_t* input, uint8_t* dest, int stride);
+void vpx_idct32x32_34_add_neon(const tran_low_t* input,
+                               uint8_t* dest,
+                               int stride);
+#define vpx_idct32x32_34_add vpx_idct32x32_34_add_neon
+
+void vpx_idct4x4_16_add_c(const tran_low_t* input, uint8_t* dest, int stride);
+void vpx_idct4x4_16_add_neon(const tran_low_t* input,
+                             uint8_t* dest,
+                             int stride);
+#define vpx_idct4x4_16_add vpx_idct4x4_16_add_neon
+
+void vpx_idct4x4_1_add_c(const tran_low_t* input, uint8_t* dest, int stride);
+void vpx_idct4x4_1_add_neon(const tran_low_t* input, uint8_t* dest, int stride);
+#define vpx_idct4x4_1_add vpx_idct4x4_1_add_neon
+
+void vpx_idct8x8_12_add_c(const tran_low_t* input, uint8_t* dest, int stride);
+void vpx_idct8x8_12_add_neon(const tran_low_t* input,
+                             uint8_t* dest,
+                             int stride);
+#define vpx_idct8x8_12_add vpx_idct8x8_12_add_neon
+
+void vpx_idct8x8_1_add_c(const tran_low_t* input, uint8_t* dest, int stride);
+void vpx_idct8x8_1_add_neon(const tran_low_t* input, uint8_t* dest, int stride);
+#define vpx_idct8x8_1_add vpx_idct8x8_1_add_neon
+
+void vpx_idct8x8_64_add_c(const tran_low_t* input, uint8_t* dest, int stride);
+void vpx_idct8x8_64_add_neon(const tran_low_t* input,
+                             uint8_t* dest,
+                             int stride);
+#define vpx_idct8x8_64_add vpx_idct8x8_64_add_neon
+
+int16_t vpx_int_pro_col_c(const uint8_t* ref, const int width);
+int16_t vpx_int_pro_col_neon(const uint8_t* ref, const int width);
+#define vpx_int_pro_col vpx_int_pro_col_neon
+
+void vpx_int_pro_row_c(int16_t hbuf[16],
+                       const uint8_t* ref,
+                       const int ref_stride,
+                       const int height);
+void vpx_int_pro_row_neon(int16_t hbuf[16],
+                          const uint8_t* ref,
+                          const int ref_stride,
+                          const int height);
+#define vpx_int_pro_row vpx_int_pro_row_neon
+
+void vpx_iwht4x4_16_add_c(const tran_low_t* input, uint8_t* dest, int stride);
+#define vpx_iwht4x4_16_add vpx_iwht4x4_16_add_c
+
+void vpx_iwht4x4_1_add_c(const tran_low_t* input, uint8_t* dest, int stride);
+#define vpx_iwht4x4_1_add vpx_iwht4x4_1_add_c
+
+void vpx_lpf_horizontal_16_c(uint8_t* s,
+                             int pitch,
+                             const uint8_t* blimit,
+                             const uint8_t* limit,
+                             const uint8_t* thresh);
+void vpx_lpf_horizontal_16_neon(uint8_t* s,
+                                int pitch,
+                                const uint8_t* blimit,
+                                const uint8_t* limit,
+                                const uint8_t* thresh);
+#define vpx_lpf_horizontal_16 vpx_lpf_horizontal_16_neon
+
+void vpx_lpf_horizontal_16_dual_c(uint8_t* s,
+                                  int pitch,
+                                  const uint8_t* blimit,
+                                  const uint8_t* limit,
+                                  const uint8_t* thresh);
+void vpx_lpf_horizontal_16_dual_neon(uint8_t* s,
+                                     int pitch,
+                                     const uint8_t* blimit,
+                                     const uint8_t* limit,
+                                     const uint8_t* thresh);
+#define vpx_lpf_horizontal_16_dual vpx_lpf_horizontal_16_dual_neon
+
+void vpx_lpf_horizontal_4_c(uint8_t* s,
+                            int pitch,
+                            const uint8_t* blimit,
+                            const uint8_t* limit,
+                            const uint8_t* thresh);
+void vpx_lpf_horizontal_4_neon(uint8_t* s,
+                               int pitch,
+                               const uint8_t* blimit,
+                               const uint8_t* limit,
+                               const uint8_t* thresh);
+#define vpx_lpf_horizontal_4 vpx_lpf_horizontal_4_neon
+
+void vpx_lpf_horizontal_4_dual_c(uint8_t* s,
+                                 int pitch,
+                                 const uint8_t* blimit0,
+                                 const uint8_t* limit0,
+                                 const uint8_t* thresh0,
+                                 const uint8_t* blimit1,
+                                 const uint8_t* limit1,
+                                 const uint8_t* thresh1);
+void vpx_lpf_horizontal_4_dual_neon(uint8_t* s,
+                                    int pitch,
+                                    const uint8_t* blimit0,
+                                    const uint8_t* limit0,
+                                    const uint8_t* thresh0,
+                                    const uint8_t* blimit1,
+                                    const uint8_t* limit1,
+                                    const uint8_t* thresh1);
+#define vpx_lpf_horizontal_4_dual vpx_lpf_horizontal_4_dual_neon
+
+void vpx_lpf_horizontal_8_c(uint8_t* s,
+                            int pitch,
+                            const uint8_t* blimit,
+                            const uint8_t* limit,
+                            const uint8_t* thresh);
+void vpx_lpf_horizontal_8_neon(uint8_t* s,
+                               int pitch,
+                               const uint8_t* blimit,
+                               const uint8_t* limit,
+                               const uint8_t* thresh);
+#define vpx_lpf_horizontal_8 vpx_lpf_horizontal_8_neon
+
+void vpx_lpf_horizontal_8_dual_c(uint8_t* s,
+                                 int pitch,
+                                 const uint8_t* blimit0,
+                                 const uint8_t* limit0,
+                                 const uint8_t* thresh0,
+                                 const uint8_t* blimit1,
+                                 const uint8_t* limit1,
+                                 const uint8_t* thresh1);
+void vpx_lpf_horizontal_8_dual_neon(uint8_t* s,
+                                    int pitch,
+                                    const uint8_t* blimit0,
+                                    const uint8_t* limit0,
+                                    const uint8_t* thresh0,
+                                    const uint8_t* blimit1,
+                                    const uint8_t* limit1,
+                                    const uint8_t* thresh1);
+#define vpx_lpf_horizontal_8_dual vpx_lpf_horizontal_8_dual_neon
+
+void vpx_lpf_vertical_16_c(uint8_t* s,
+                           int pitch,
+                           const uint8_t* blimit,
+                           const uint8_t* limit,
+                           const uint8_t* thresh);
+void vpx_lpf_vertical_16_neon(uint8_t* s,
+                              int pitch,
+                              const uint8_t* blimit,
+                              const uint8_t* limit,
+                              const uint8_t* thresh);
+#define vpx_lpf_vertical_16 vpx_lpf_vertical_16_neon
+
+void vpx_lpf_vertical_16_dual_c(uint8_t* s,
+                                int pitch,
+                                const uint8_t* blimit,
+                                const uint8_t* limit,
+                                const uint8_t* thresh);
+void vpx_lpf_vertical_16_dual_neon(uint8_t* s,
+                                   int pitch,
+                                   const uint8_t* blimit,
+                                   const uint8_t* limit,
+                                   const uint8_t* thresh);
+#define vpx_lpf_vertical_16_dual vpx_lpf_vertical_16_dual_neon
+
+void vpx_lpf_vertical_4_c(uint8_t* s,
+                          int pitch,
+                          const uint8_t* blimit,
+                          const uint8_t* limit,
+                          const uint8_t* thresh);
+void vpx_lpf_vertical_4_neon(uint8_t* s,
+                             int pitch,
+                             const uint8_t* blimit,
+                             const uint8_t* limit,
+                             const uint8_t* thresh);
+#define vpx_lpf_vertical_4 vpx_lpf_vertical_4_neon
+
+void vpx_lpf_vertical_4_dual_c(uint8_t* s,
+                               int pitch,
+                               const uint8_t* blimit0,
+                               const uint8_t* limit0,
+                               const uint8_t* thresh0,
+                               const uint8_t* blimit1,
+                               const uint8_t* limit1,
+                               const uint8_t* thresh1);
+void vpx_lpf_vertical_4_dual_neon(uint8_t* s,
+                                  int pitch,
+                                  const uint8_t* blimit0,
+                                  const uint8_t* limit0,
+                                  const uint8_t* thresh0,
+                                  const uint8_t* blimit1,
+                                  const uint8_t* limit1,
+                                  const uint8_t* thresh1);
+#define vpx_lpf_vertical_4_dual vpx_lpf_vertical_4_dual_neon
+
+void vpx_lpf_vertical_8_c(uint8_t* s,
+                          int pitch,
+                          const uint8_t* blimit,
+                          const uint8_t* limit,
+                          const uint8_t* thresh);
+void vpx_lpf_vertical_8_neon(uint8_t* s,
+                             int pitch,
+                             const uint8_t* blimit,
+                             const uint8_t* limit,
+                             const uint8_t* thresh);
+#define vpx_lpf_vertical_8 vpx_lpf_vertical_8_neon
+
+void vpx_lpf_vertical_8_dual_c(uint8_t* s,
+                               int pitch,
+                               const uint8_t* blimit0,
+                               const uint8_t* limit0,
+                               const uint8_t* thresh0,
+                               const uint8_t* blimit1,
+                               const uint8_t* limit1,
+                               const uint8_t* thresh1);
+void vpx_lpf_vertical_8_dual_neon(uint8_t* s,
+                                  int pitch,
+                                  const uint8_t* blimit0,
+                                  const uint8_t* limit0,
+                                  const uint8_t* thresh0,
+                                  const uint8_t* blimit1,
+                                  const uint8_t* limit1,
+                                  const uint8_t* thresh1);
+#define vpx_lpf_vertical_8_dual vpx_lpf_vertical_8_dual_neon
+
+void vpx_mbpost_proc_across_ip_c(unsigned char* src,
+                                 int pitch,
+                                 int rows,
+                                 int cols,
+                                 int flimit);
+void vpx_mbpost_proc_across_ip_neon(unsigned char* src,
+                                    int pitch,
+                                    int rows,
+                                    int cols,
+                                    int flimit);
+#define vpx_mbpost_proc_across_ip vpx_mbpost_proc_across_ip_neon
+
+void vpx_mbpost_proc_down_c(unsigned char* dst,
+                            int pitch,
+                            int rows,
+                            int cols,
+                            int flimit);
+void vpx_mbpost_proc_down_neon(unsigned char* dst,
+                               int pitch,
+                               int rows,
+                               int cols,
+                               int flimit);
+#define vpx_mbpost_proc_down vpx_mbpost_proc_down_neon
+
+void vpx_minmax_8x8_c(const uint8_t* s,
+                      int p,
+                      const uint8_t* d,
+                      int dp,
+                      int* min,
+                      int* max);
+void vpx_minmax_8x8_neon(const uint8_t* s,
+                         int p,
+                         const uint8_t* d,
+                         int dp,
+                         int* min,
+                         int* max);
+#define vpx_minmax_8x8 vpx_minmax_8x8_neon
+
+unsigned int vpx_mse16x16_c(const uint8_t* src_ptr,
+                            int src_stride,
+                            const uint8_t* ref_ptr,
+                            int ref_stride,
+                            unsigned int* sse);
+unsigned int vpx_mse16x16_neon(const uint8_t* src_ptr,
+                               int src_stride,
+                               const uint8_t* ref_ptr,
+                               int ref_stride,
+                               unsigned int* sse);
+unsigned int vpx_mse16x16_neon_dotprod(const uint8_t* src_ptr,
+                                       int src_stride,
+                                       const uint8_t* ref_ptr,
+                                       int ref_stride,
+                                       unsigned int* sse);
+RTCD_EXTERN unsigned int (*vpx_mse16x16)(const uint8_t* src_ptr,
+                                         int src_stride,
+                                         const uint8_t* ref_ptr,
+                                         int ref_stride,
+                                         unsigned int* sse);
+
+unsigned int vpx_mse16x8_c(const uint8_t* src_ptr,
+                           int src_stride,
+                           const uint8_t* ref_ptr,
+                           int ref_stride,
+                           unsigned int* sse);
+unsigned int vpx_mse16x8_neon(const uint8_t* src_ptr,
+                              int src_stride,
+                              const uint8_t* ref_ptr,
+                              int ref_stride,
+                              unsigned int* sse);
+unsigned int vpx_mse16x8_neon_dotprod(const uint8_t* src_ptr,
+                                      int src_stride,
+                                      const uint8_t* ref_ptr,
+                                      int ref_stride,
+                                      unsigned int* sse);
+RTCD_EXTERN unsigned int (*vpx_mse16x8)(const uint8_t* src_ptr,
+                                        int src_stride,
+                                        const uint8_t* ref_ptr,
+                                        int ref_stride,
+                                        unsigned int* sse);
+
+unsigned int vpx_mse8x16_c(const uint8_t* src_ptr,
+                           int src_stride,
+                           const uint8_t* ref_ptr,
+                           int ref_stride,
+                           unsigned int* sse);
+unsigned int vpx_mse8x16_neon(const uint8_t* src_ptr,
+                              int src_stride,
+                              const uint8_t* ref_ptr,
+                              int ref_stride,
+                              unsigned int* sse);
+unsigned int vpx_mse8x16_neon_dotprod(const uint8_t* src_ptr,
+                                      int src_stride,
+                                      const uint8_t* ref_ptr,
+                                      int ref_stride,
+                                      unsigned int* sse);
+RTCD_EXTERN unsigned int (*vpx_mse8x16)(const uint8_t* src_ptr,
+                                        int src_stride,
+                                        const uint8_t* ref_ptr,
+                                        int ref_stride,
+                                        unsigned int* sse);
+
+unsigned int vpx_mse8x8_c(const uint8_t* src_ptr,
+                          int src_stride,
+                          const uint8_t* ref_ptr,
+                          int ref_stride,
+                          unsigned int* sse);
+unsigned int vpx_mse8x8_neon(const uint8_t* src_ptr,
+                             int src_stride,
+                             const uint8_t* ref_ptr,
+                             int ref_stride,
+                             unsigned int* sse);
+unsigned int vpx_mse8x8_neon_dotprod(const uint8_t* src_ptr,
+                                     int src_stride,
+                                     const uint8_t* ref_ptr,
+                                     int ref_stride,
+                                     unsigned int* sse);
+RTCD_EXTERN unsigned int (*vpx_mse8x8)(const uint8_t* src_ptr,
+                                       int src_stride,
+                                       const uint8_t* ref_ptr,
+                                       int ref_stride,
+                                       unsigned int* sse);
+
+void vpx_plane_add_noise_c(uint8_t* start,
+                           const int8_t* noise,
+                           int blackclamp,
+                           int whiteclamp,
+                           int width,
+                           int height,
+                           int pitch);
+#define vpx_plane_add_noise vpx_plane_add_noise_c
+
+void vpx_post_proc_down_and_across_mb_row_c(unsigned char* src,
+                                            unsigned char* dst,
+                                            int src_pitch,
+                                            int dst_pitch,
+                                            int cols,
+                                            unsigned char* flimits,
+                                            int size);
+void vpx_post_proc_down_and_across_mb_row_neon(unsigned char* src,
+                                               unsigned char* dst,
+                                               int src_pitch,
+                                               int dst_pitch,
+                                               int cols,
+                                               unsigned char* flimits,
+                                               int size);
+#define vpx_post_proc_down_and_across_mb_row \
+  vpx_post_proc_down_and_across_mb_row_neon
+
+void vpx_quantize_b_c(const tran_low_t* coeff_ptr,
+                      intptr_t n_coeffs,
+                      const struct macroblock_plane* const mb_plane,
+                      tran_low_t* qcoeff_ptr,
+                      tran_low_t* dqcoeff_ptr,
+                      const int16_t* dequant_ptr,
+                      uint16_t* eob_ptr,
+                      const struct ScanOrder* const scan_order);
+void vpx_quantize_b_neon(const tran_low_t* coeff_ptr,
+                         intptr_t n_coeffs,
+                         const struct macroblock_plane* const mb_plane,
+                         tran_low_t* qcoeff_ptr,
+                         tran_low_t* dqcoeff_ptr,
+                         const int16_t* dequant_ptr,
+                         uint16_t* eob_ptr,
+                         const struct ScanOrder* const scan_order);
+#define vpx_quantize_b vpx_quantize_b_neon
+
+void vpx_quantize_b_32x32_c(const tran_low_t* coeff_ptr,
+                            const struct macroblock_plane* const mb_plane,
+                            tran_low_t* qcoeff_ptr,
+                            tran_low_t* dqcoeff_ptr,
+                            const int16_t* dequant_ptr,
+                            uint16_t* eob_ptr,
+                            const struct ScanOrder* const scan_order);
+void vpx_quantize_b_32x32_neon(const tran_low_t* coeff_ptr,
+                               const struct macroblock_plane* const mb_plane,
+                               tran_low_t* qcoeff_ptr,
+                               tran_low_t* dqcoeff_ptr,
+                               const int16_t* dequant_ptr,
+                               uint16_t* eob_ptr,
+                               const struct ScanOrder* const scan_order);
+#define vpx_quantize_b_32x32 vpx_quantize_b_32x32_neon
+
+unsigned int vpx_sad16x16_c(const uint8_t* src_ptr,
+                            int src_stride,
+                            const uint8_t* ref_ptr,
+                            int ref_stride);
+unsigned int vpx_sad16x16_neon(const uint8_t* src_ptr,
+                               int src_stride,
+                               const uint8_t* ref_ptr,
+                               int ref_stride);
+unsigned int vpx_sad16x16_neon_dotprod(const uint8_t* src_ptr,
+                                       int src_stride,
+                                       const uint8_t* ref_ptr,
+                                       int ref_stride);
+RTCD_EXTERN unsigned int (*vpx_sad16x16)(const uint8_t* src_ptr,
+                                         int src_stride,
+                                         const uint8_t* ref_ptr,
+                                         int ref_stride);
+
+unsigned int vpx_sad16x16_avg_c(const uint8_t* src_ptr,
+                                int src_stride,
+                                const uint8_t* ref_ptr,
+                                int ref_stride,
+                                const uint8_t* second_pred);
+unsigned int vpx_sad16x16_avg_neon(const uint8_t* src_ptr,
+                                   int src_stride,
+                                   const uint8_t* ref_ptr,
+                                   int ref_stride,
+                                   const uint8_t* second_pred);
+unsigned int vpx_sad16x16_avg_neon_dotprod(const uint8_t* src_ptr,
+                                           int src_stride,
+                                           const uint8_t* ref_ptr,
+                                           int ref_stride,
+                                           const uint8_t* second_pred);
+RTCD_EXTERN unsigned int (*vpx_sad16x16_avg)(const uint8_t* src_ptr,
+                                             int src_stride,
+                                             const uint8_t* ref_ptr,
+                                             int ref_stride,
+                                             const uint8_t* second_pred);
+
+void vpx_sad16x16x4d_c(const uint8_t* src_ptr,
+                       int src_stride,
+                       const uint8_t* const ref_array[4],
+                       int ref_stride,
+                       uint32_t sad_array[4]);
+void vpx_sad16x16x4d_neon(const uint8_t* src_ptr,
+                          int src_stride,
+                          const uint8_t* const ref_array[4],
+                          int ref_stride,
+                          uint32_t sad_array[4]);
+void vpx_sad16x16x4d_neon_dotprod(const uint8_t* src_ptr,
+                                  int src_stride,
+                                  const uint8_t* const ref_array[4],
+                                  int ref_stride,
+                                  uint32_t sad_array[4]);
+RTCD_EXTERN void (*vpx_sad16x16x4d)(const uint8_t* src_ptr,
+                                    int src_stride,
+                                    const uint8_t* const ref_array[4],
+                                    int ref_stride,
+                                    uint32_t sad_array[4]);
+
+unsigned int vpx_sad16x32_c(const uint8_t* src_ptr,
+                            int src_stride,
+                            const uint8_t* ref_ptr,
+                            int ref_stride);
+unsigned int vpx_sad16x32_neon(const uint8_t* src_ptr,
+                               int src_stride,
+                               const uint8_t* ref_ptr,
+                               int ref_stride);
+unsigned int vpx_sad16x32_neon_dotprod(const uint8_t* src_ptr,
+                                       int src_stride,
+                                       const uint8_t* ref_ptr,
+                                       int ref_stride);
+RTCD_EXTERN unsigned int (*vpx_sad16x32)(const uint8_t* src_ptr,
+                                         int src_stride,
+                                         const uint8_t* ref_ptr,
+                                         int ref_stride);
+
+unsigned int vpx_sad16x32_avg_c(const uint8_t* src_ptr,
+                                int src_stride,
+                                const uint8_t* ref_ptr,
+                                int ref_stride,
+                                const uint8_t* second_pred);
+unsigned int vpx_sad16x32_avg_neon(const uint8_t* src_ptr,
+                                   int src_stride,
+                                   const uint8_t* ref_ptr,
+                                   int ref_stride,
+                                   const uint8_t* second_pred);
+unsigned int vpx_sad16x32_avg_neon_dotprod(const uint8_t* src_ptr,
+                                           int src_stride,
+                                           const uint8_t* ref_ptr,
+                                           int ref_stride,
+                                           const uint8_t* second_pred);
+RTCD_EXTERN unsigned int (*vpx_sad16x32_avg)(const uint8_t* src_ptr,
+                                             int src_stride,
+                                             const uint8_t* ref_ptr,
+                                             int ref_stride,
+                                             const uint8_t* second_pred);
+
+void vpx_sad16x32x4d_c(const uint8_t* src_ptr,
+                       int src_stride,
+                       const uint8_t* const ref_array[4],
+                       int ref_stride,
+                       uint32_t sad_array[4]);
+void vpx_sad16x32x4d_neon(const uint8_t* src_ptr,
+                          int src_stride,
+                          const uint8_t* const ref_array[4],
+                          int ref_stride,
+                          uint32_t sad_array[4]);
+void vpx_sad16x32x4d_neon_dotprod(const uint8_t* src_ptr,
+                                  int src_stride,
+                                  const uint8_t* const ref_array[4],
+                                  int ref_stride,
+                                  uint32_t sad_array[4]);
+RTCD_EXTERN void (*vpx_sad16x32x4d)(const uint8_t* src_ptr,
+                                    int src_stride,
+                                    const uint8_t* const ref_array[4],
+                                    int ref_stride,
+                                    uint32_t sad_array[4]);
+
+unsigned int vpx_sad16x8_c(const uint8_t* src_ptr,
+                           int src_stride,
+                           const uint8_t* ref_ptr,
+                           int ref_stride);
+unsigned int vpx_sad16x8_neon(const uint8_t* src_ptr,
+                              int src_stride,
+                              const uint8_t* ref_ptr,
+                              int ref_stride);
+unsigned int vpx_sad16x8_neon_dotprod(const uint8_t* src_ptr,
+                                      int src_stride,
+                                      const uint8_t* ref_ptr,
+                                      int ref_stride);
+RTCD_EXTERN unsigned int (*vpx_sad16x8)(const uint8_t* src_ptr,
+                                        int src_stride,
+                                        const uint8_t* ref_ptr,
+                                        int ref_stride);
+
+unsigned int vpx_sad16x8_avg_c(const uint8_t* src_ptr,
+                               int src_stride,
+                               const uint8_t* ref_ptr,
+                               int ref_stride,
+                               const uint8_t* second_pred);
+unsigned int vpx_sad16x8_avg_neon(const uint8_t* src_ptr,
+                                  int src_stride,
+                                  const uint8_t* ref_ptr,
+                                  int ref_stride,
+                                  const uint8_t* second_pred);
+unsigned int vpx_sad16x8_avg_neon_dotprod(const uint8_t* src_ptr,
+                                          int src_stride,
+                                          const uint8_t* ref_ptr,
+                                          int ref_stride,
+                                          const uint8_t* second_pred);
+RTCD_EXTERN unsigned int (*vpx_sad16x8_avg)(const uint8_t* src_ptr,
+                                            int src_stride,
+                                            const uint8_t* ref_ptr,
+                                            int ref_stride,
+                                            const uint8_t* second_pred);
+
+void vpx_sad16x8x4d_c(const uint8_t* src_ptr,
+                      int src_stride,
+                      const uint8_t* const ref_array[4],
+                      int ref_stride,
+                      uint32_t sad_array[4]);
+void vpx_sad16x8x4d_neon(const uint8_t* src_ptr,
+                         int src_stride,
+                         const uint8_t* const ref_array[4],
+                         int ref_stride,
+                         uint32_t sad_array[4]);
+void vpx_sad16x8x4d_neon_dotprod(const uint8_t* src_ptr,
+                                 int src_stride,
+                                 const uint8_t* const ref_array[4],
+                                 int ref_stride,
+                                 uint32_t sad_array[4]);
+RTCD_EXTERN void (*vpx_sad16x8x4d)(const uint8_t* src_ptr,
+                                   int src_stride,
+                                   const uint8_t* const ref_array[4],
+                                   int ref_stride,
+                                   uint32_t sad_array[4]);
+
+unsigned int vpx_sad32x16_c(const uint8_t* src_ptr,
+                            int src_stride,
+                            const uint8_t* ref_ptr,
+                            int ref_stride);
+unsigned int vpx_sad32x16_neon(const uint8_t* src_ptr,
+                               int src_stride,
+                               const uint8_t* ref_ptr,
+                               int ref_stride);
+unsigned int vpx_sad32x16_neon_dotprod(const uint8_t* src_ptr,
+                                       int src_stride,
+                                       const uint8_t* ref_ptr,
+                                       int ref_stride);
+RTCD_EXTERN unsigned int (*vpx_sad32x16)(const uint8_t* src_ptr,
+                                         int src_stride,
+                                         const uint8_t* ref_ptr,
+                                         int ref_stride);
+
+unsigned int vpx_sad32x16_avg_c(const uint8_t* src_ptr,
+                                int src_stride,
+                                const uint8_t* ref_ptr,
+                                int ref_stride,
+                                const uint8_t* second_pred);
+unsigned int vpx_sad32x16_avg_neon(const uint8_t* src_ptr,
+                                   int src_stride,
+                                   const uint8_t* ref_ptr,
+                                   int ref_stride,
+                                   const uint8_t* second_pred);
+unsigned int vpx_sad32x16_avg_neon_dotprod(const uint8_t* src_ptr,
+                                           int src_stride,
+                                           const uint8_t* ref_ptr,
+                                           int ref_stride,
+                                           const uint8_t* second_pred);
+RTCD_EXTERN unsigned int (*vpx_sad32x16_avg)(const uint8_t* src_ptr,
+                                             int src_stride,
+                                             const uint8_t* ref_ptr,
+                                             int ref_stride,
+                                             const uint8_t* second_pred);
+
+void vpx_sad32x16x4d_c(const uint8_t* src_ptr,
+                       int src_stride,
+                       const uint8_t* const ref_array[4],
+                       int ref_stride,
+                       uint32_t sad_array[4]);
+void vpx_sad32x16x4d_neon(const uint8_t* src_ptr,
+                          int src_stride,
+                          const uint8_t* const ref_array[4],
+                          int ref_stride,
+                          uint32_t sad_array[4]);
+void vpx_sad32x16x4d_neon_dotprod(const uint8_t* src_ptr,
+                                  int src_stride,
+                                  const uint8_t* const ref_array[4],
+                                  int ref_stride,
+                                  uint32_t sad_array[4]);
+RTCD_EXTERN void (*vpx_sad32x16x4d)(const uint8_t* src_ptr,
+                                    int src_stride,
+                                    const uint8_t* const ref_array[4],
+                                    int ref_stride,
+                                    uint32_t sad_array[4]);
+
+unsigned int vpx_sad32x32_c(const uint8_t* src_ptr,
+                            int src_stride,
+                            const uint8_t* ref_ptr,
+                            int ref_stride);
+unsigned int vpx_sad32x32_neon(const uint8_t* src_ptr,
+                               int src_stride,
+                               const uint8_t* ref_ptr,
+                               int ref_stride);
+unsigned int vpx_sad32x32_neon_dotprod(const uint8_t* src_ptr,
+                                       int src_stride,
+                                       const uint8_t* ref_ptr,
+                                       int ref_stride);
+RTCD_EXTERN unsigned int (*vpx_sad32x32)(const uint8_t* src_ptr,
+                                         int src_stride,
+                                         const uint8_t* ref_ptr,
+                                         int ref_stride);
+
+unsigned int vpx_sad32x32_avg_c(const uint8_t* src_ptr,
+                                int src_stride,
+                                const uint8_t* ref_ptr,
+                                int ref_stride,
+                                const uint8_t* second_pred);
+unsigned int vpx_sad32x32_avg_neon(const uint8_t* src_ptr,
+                                   int src_stride,
+                                   const uint8_t* ref_ptr,
+                                   int ref_stride,
+                                   const uint8_t* second_pred);
+unsigned int vpx_sad32x32_avg_neon_dotprod(const uint8_t* src_ptr,
+                                           int src_stride,
+                                           const uint8_t* ref_ptr,
+                                           int ref_stride,
+                                           const uint8_t* second_pred);
+RTCD_EXTERN unsigned int (*vpx_sad32x32_avg)(const uint8_t* src_ptr,
+                                             int src_stride,
+                                             const uint8_t* ref_ptr,
+                                             int ref_stride,
+                                             const uint8_t* second_pred);
+
+void vpx_sad32x32x4d_c(const uint8_t* src_ptr,
+                       int src_stride,
+                       const uint8_t* const ref_array[4],
+                       int ref_stride,
+                       uint32_t sad_array[4]);
+void vpx_sad32x32x4d_neon(const uint8_t* src_ptr,
+                          int src_stride,
+                          const uint8_t* const ref_array[4],
+                          int ref_stride,
+                          uint32_t sad_array[4]);
+void vpx_sad32x32x4d_neon_dotprod(const uint8_t* src_ptr,
+                                  int src_stride,
+                                  const uint8_t* const ref_array[4],
+                                  int ref_stride,
+                                  uint32_t sad_array[4]);
+RTCD_EXTERN void (*vpx_sad32x32x4d)(const uint8_t* src_ptr,
+                                    int src_stride,
+                                    const uint8_t* const ref_array[4],
+                                    int ref_stride,
+                                    uint32_t sad_array[4]);
+
+unsigned int vpx_sad32x64_c(const uint8_t* src_ptr,
+                            int src_stride,
+                            const uint8_t* ref_ptr,
+                            int ref_stride);
+unsigned int vpx_sad32x64_neon(const uint8_t* src_ptr,
+                               int src_stride,
+                               const uint8_t* ref_ptr,
+                               int ref_stride);
+unsigned int vpx_sad32x64_neon_dotprod(const uint8_t* src_ptr,
+                                       int src_stride,
+                                       const uint8_t* ref_ptr,
+                                       int ref_stride);
+RTCD_EXTERN unsigned int (*vpx_sad32x64)(const uint8_t* src_ptr,
+                                         int src_stride,
+                                         const uint8_t* ref_ptr,
+                                         int ref_stride);
+
+unsigned int vpx_sad32x64_avg_c(const uint8_t* src_ptr,
+                                int src_stride,
+                                const uint8_t* ref_ptr,
+                                int ref_stride,
+                                const uint8_t* second_pred);
+unsigned int vpx_sad32x64_avg_neon(const uint8_t* src_ptr,
+                                   int src_stride,
+                                   const uint8_t* ref_ptr,
+                                   int ref_stride,
+                                   const uint8_t* second_pred);
+unsigned int vpx_sad32x64_avg_neon_dotprod(const uint8_t* src_ptr,
+                                           int src_stride,
+                                           const uint8_t* ref_ptr,
+                                           int ref_stride,
+                                           const uint8_t* second_pred);
+RTCD_EXTERN unsigned int (*vpx_sad32x64_avg)(const uint8_t* src_ptr,
+                                             int src_stride,
+                                             const uint8_t* ref_ptr,
+                                             int ref_stride,
+                                             const uint8_t* second_pred);
+
+void vpx_sad32x64x4d_c(const uint8_t* src_ptr,
+                       int src_stride,
+                       const uint8_t* const ref_array[4],
+                       int ref_stride,
+                       uint32_t sad_array[4]);
+void vpx_sad32x64x4d_neon(const uint8_t* src_ptr,
+                          int src_stride,
+                          const uint8_t* const ref_array[4],
+                          int ref_stride,
+                          uint32_t sad_array[4]);
+void vpx_sad32x64x4d_neon_dotprod(const uint8_t* src_ptr,
+                                  int src_stride,
+                                  const uint8_t* const ref_array[4],
+                                  int ref_stride,
+                                  uint32_t sad_array[4]);
+RTCD_EXTERN void (*vpx_sad32x64x4d)(const uint8_t* src_ptr,
+                                    int src_stride,
+                                    const uint8_t* const ref_array[4],
+                                    int ref_stride,
+                                    uint32_t sad_array[4]);
+
+unsigned int vpx_sad4x4_c(const uint8_t* src_ptr,
+                          int src_stride,
+                          const uint8_t* ref_ptr,
+                          int ref_stride);
+unsigned int vpx_sad4x4_neon(const uint8_t* src_ptr,
+                             int src_stride,
+                             const uint8_t* ref_ptr,
+                             int ref_stride);
+#define vpx_sad4x4 vpx_sad4x4_neon
+
+unsigned int vpx_sad4x4_avg_c(const uint8_t* src_ptr,
+                              int src_stride,
+                              const uint8_t* ref_ptr,
+                              int ref_stride,
+                              const uint8_t* second_pred);
+unsigned int vpx_sad4x4_avg_neon(const uint8_t* src_ptr,
+                                 int src_stride,
+                                 const uint8_t* ref_ptr,
+                                 int ref_stride,
+                                 const uint8_t* second_pred);
+#define vpx_sad4x4_avg vpx_sad4x4_avg_neon
+
+void vpx_sad4x4x4d_c(const uint8_t* src_ptr,
+                     int src_stride,
+                     const uint8_t* const ref_array[4],
+                     int ref_stride,
+                     uint32_t sad_array[4]);
+void vpx_sad4x4x4d_neon(const uint8_t* src_ptr,
+                        int src_stride,
+                        const uint8_t* const ref_array[4],
+                        int ref_stride,
+                        uint32_t sad_array[4]);
+#define vpx_sad4x4x4d vpx_sad4x4x4d_neon
+
+unsigned int vpx_sad4x8_c(const uint8_t* src_ptr,
+                          int src_stride,
+                          const uint8_t* ref_ptr,
+                          int ref_stride);
+unsigned int vpx_sad4x8_neon(const uint8_t* src_ptr,
+                             int src_stride,
+                             const uint8_t* ref_ptr,
+                             int ref_stride);
+#define vpx_sad4x8 vpx_sad4x8_neon
+
+unsigned int vpx_sad4x8_avg_c(const uint8_t* src_ptr,
+                              int src_stride,
+                              const uint8_t* ref_ptr,
+                              int ref_stride,
+                              const uint8_t* second_pred);
+unsigned int vpx_sad4x8_avg_neon(const uint8_t* src_ptr,
+                                 int src_stride,
+                                 const uint8_t* ref_ptr,
+                                 int ref_stride,
+                                 const uint8_t* second_pred);
+#define vpx_sad4x8_avg vpx_sad4x8_avg_neon
+
+void vpx_sad4x8x4d_c(const uint8_t* src_ptr,
+                     int src_stride,
+                     const uint8_t* const ref_array[4],
+                     int ref_stride,
+                     uint32_t sad_array[4]);
+void vpx_sad4x8x4d_neon(const uint8_t* src_ptr,
+                        int src_stride,
+                        const uint8_t* const ref_array[4],
+                        int ref_stride,
+                        uint32_t sad_array[4]);
+#define vpx_sad4x8x4d vpx_sad4x8x4d_neon
+
+unsigned int vpx_sad64x32_c(const uint8_t* src_ptr,
+                            int src_stride,
+                            const uint8_t* ref_ptr,
+                            int ref_stride);
+unsigned int vpx_sad64x32_neon(const uint8_t* src_ptr,
+                               int src_stride,
+                               const uint8_t* ref_ptr,
+                               int ref_stride);
+unsigned int vpx_sad64x32_neon_dotprod(const uint8_t* src_ptr,
+                                       int src_stride,
+                                       const uint8_t* ref_ptr,
+                                       int ref_stride);
+RTCD_EXTERN unsigned int (*vpx_sad64x32)(const uint8_t* src_ptr,
+                                         int src_stride,
+                                         const uint8_t* ref_ptr,
+                                         int ref_stride);
+
+unsigned int vpx_sad64x32_avg_c(const uint8_t* src_ptr,
+                                int src_stride,
+                                const uint8_t* ref_ptr,
+                                int ref_stride,
+                                const uint8_t* second_pred);
+unsigned int vpx_sad64x32_avg_neon(const uint8_t* src_ptr,
+                                   int src_stride,
+                                   const uint8_t* ref_ptr,
+                                   int ref_stride,
+                                   const uint8_t* second_pred);
+unsigned int vpx_sad64x32_avg_neon_dotprod(const uint8_t* src_ptr,
+                                           int src_stride,
+                                           const uint8_t* ref_ptr,
+                                           int ref_stride,
+                                           const uint8_t* second_pred);
+RTCD_EXTERN unsigned int (*vpx_sad64x32_avg)(const uint8_t* src_ptr,
+                                             int src_stride,
+                                             const uint8_t* ref_ptr,
+                                             int ref_stride,
+                                             const uint8_t* second_pred);
+
+void vpx_sad64x32x4d_c(const uint8_t* src_ptr,
+                       int src_stride,
+                       const uint8_t* const ref_array[4],
+                       int ref_stride,
+                       uint32_t sad_array[4]);
+void vpx_sad64x32x4d_neon(const uint8_t* src_ptr,
+                          int src_stride,
+                          const uint8_t* const ref_array[4],
+                          int ref_stride,
+                          uint32_t sad_array[4]);
+void vpx_sad64x32x4d_neon_dotprod(const uint8_t* src_ptr,
+                                  int src_stride,
+                                  const uint8_t* const ref_array[4],
+                                  int ref_stride,
+                                  uint32_t sad_array[4]);
+RTCD_EXTERN void (*vpx_sad64x32x4d)(const uint8_t* src_ptr,
+                                    int src_stride,
+                                    const uint8_t* const ref_array[4],
+                                    int ref_stride,
+                                    uint32_t sad_array[4]);
+
+unsigned int vpx_sad64x64_c(const uint8_t* src_ptr,
+                            int src_stride,
+                            const uint8_t* ref_ptr,
+                            int ref_stride);
+unsigned int vpx_sad64x64_neon(const uint8_t* src_ptr,
+                               int src_stride,
+                               const uint8_t* ref_ptr,
+                               int ref_stride);
+unsigned int vpx_sad64x64_neon_dotprod(const uint8_t* src_ptr,
+                                       int src_stride,
+                                       const uint8_t* ref_ptr,
+                                       int ref_stride);
+RTCD_EXTERN unsigned int (*vpx_sad64x64)(const uint8_t* src_ptr,
+                                         int src_stride,
+                                         const uint8_t* ref_ptr,
+                                         int ref_stride);
+
+unsigned int vpx_sad64x64_avg_c(const uint8_t* src_ptr,
+                                int src_stride,
+                                const uint8_t* ref_ptr,
+                                int ref_stride,
+                                const uint8_t* second_pred);
+unsigned int vpx_sad64x64_avg_neon(const uint8_t* src_ptr,
+                                   int src_stride,
+                                   const uint8_t* ref_ptr,
+                                   int ref_stride,
+                                   const uint8_t* second_pred);
+unsigned int vpx_sad64x64_avg_neon_dotprod(const uint8_t* src_ptr,
+                                           int src_stride,
+                                           const uint8_t* ref_ptr,
+                                           int ref_stride,
+                                           const uint8_t* second_pred);
+RTCD_EXTERN unsigned int (*vpx_sad64x64_avg)(const uint8_t* src_ptr,
+                                             int src_stride,
+                                             const uint8_t* ref_ptr,
+                                             int ref_stride,
+                                             const uint8_t* second_pred);
+
+void vpx_sad64x64x4d_c(const uint8_t* src_ptr,
+                       int src_stride,
+                       const uint8_t* const ref_array[4],
+                       int ref_stride,
+                       uint32_t sad_array[4]);
+void vpx_sad64x64x4d_neon(const uint8_t* src_ptr,
+                          int src_stride,
+                          const uint8_t* const ref_array[4],
+                          int ref_stride,
+                          uint32_t sad_array[4]);
+void vpx_sad64x64x4d_neon_dotprod(const uint8_t* src_ptr,
+                                  int src_stride,
+                                  const uint8_t* const ref_array[4],
+                                  int ref_stride,
+                                  uint32_t sad_array[4]);
+RTCD_EXTERN void (*vpx_sad64x64x4d)(const uint8_t* src_ptr,
+                                    int src_stride,
+                                    const uint8_t* const ref_array[4],
+                                    int ref_stride,
+                                    uint32_t sad_array[4]);
+
+unsigned int vpx_sad8x16_c(const uint8_t* src_ptr,
+                           int src_stride,
+                           const uint8_t* ref_ptr,
+                           int ref_stride);
+unsigned int vpx_sad8x16_neon(const uint8_t* src_ptr,
+                              int src_stride,
+                              const uint8_t* ref_ptr,
+                              int ref_stride);
+#define vpx_sad8x16 vpx_sad8x16_neon
+
+unsigned int vpx_sad8x16_avg_c(const uint8_t* src_ptr,
+                               int src_stride,
+                               const uint8_t* ref_ptr,
+                               int ref_stride,
+                               const uint8_t* second_pred);
+unsigned int vpx_sad8x16_avg_neon(const uint8_t* src_ptr,
+                                  int src_stride,
+                                  const uint8_t* ref_ptr,
+                                  int ref_stride,
+                                  const uint8_t* second_pred);
+#define vpx_sad8x16_avg vpx_sad8x16_avg_neon
+
+void vpx_sad8x16x4d_c(const uint8_t* src_ptr,
+                      int src_stride,
+                      const uint8_t* const ref_array[4],
+                      int ref_stride,
+                      uint32_t sad_array[4]);
+void vpx_sad8x16x4d_neon(const uint8_t* src_ptr,
+                         int src_stride,
+                         const uint8_t* const ref_array[4],
+                         int ref_stride,
+                         uint32_t sad_array[4]);
+#define vpx_sad8x16x4d vpx_sad8x16x4d_neon
+
+unsigned int vpx_sad8x4_c(const uint8_t* src_ptr,
+                          int src_stride,
+                          const uint8_t* ref_ptr,
+                          int ref_stride);
+unsigned int vpx_sad8x4_neon(const uint8_t* src_ptr,
+                             int src_stride,
+                             const uint8_t* ref_ptr,
+                             int ref_stride);
+#define vpx_sad8x4 vpx_sad8x4_neon
+
+unsigned int vpx_sad8x4_avg_c(const uint8_t* src_ptr,
+                              int src_stride,
+                              const uint8_t* ref_ptr,
+                              int ref_stride,
+                              const uint8_t* second_pred);
+unsigned int vpx_sad8x4_avg_neon(const uint8_t* src_ptr,
+                                 int src_stride,
+                                 const uint8_t* ref_ptr,
+                                 int ref_stride,
+                                 const uint8_t* second_pred);
+#define vpx_sad8x4_avg vpx_sad8x4_avg_neon
+
+void vpx_sad8x4x4d_c(const uint8_t* src_ptr,
+                     int src_stride,
+                     const uint8_t* const ref_array[4],
+                     int ref_stride,
+                     uint32_t sad_array[4]);
+void vpx_sad8x4x4d_neon(const uint8_t* src_ptr,
+                        int src_stride,
+                        const uint8_t* const ref_array[4],
+                        int ref_stride,
+                        uint32_t sad_array[4]);
+#define vpx_sad8x4x4d vpx_sad8x4x4d_neon
+
+unsigned int vpx_sad8x8_c(const uint8_t* src_ptr,
+                          int src_stride,
+                          const uint8_t* ref_ptr,
+                          int ref_stride);
+unsigned int vpx_sad8x8_neon(const uint8_t* src_ptr,
+                             int src_stride,
+                             const uint8_t* ref_ptr,
+                             int ref_stride);
+#define vpx_sad8x8 vpx_sad8x8_neon
+
+unsigned int vpx_sad8x8_avg_c(const uint8_t* src_ptr,
+                              int src_stride,
+                              const uint8_t* ref_ptr,
+                              int ref_stride,
+                              const uint8_t* second_pred);
+unsigned int vpx_sad8x8_avg_neon(const uint8_t* src_ptr,
+                                 int src_stride,
+                                 const uint8_t* ref_ptr,
+                                 int ref_stride,
+                                 const uint8_t* second_pred);
+#define vpx_sad8x8_avg vpx_sad8x8_avg_neon
+
+void vpx_sad8x8x4d_c(const uint8_t* src_ptr,
+                     int src_stride,
+                     const uint8_t* const ref_array[4],
+                     int ref_stride,
+                     uint32_t sad_array[4]);
+void vpx_sad8x8x4d_neon(const uint8_t* src_ptr,
+                        int src_stride,
+                        const uint8_t* const ref_array[4],
+                        int ref_stride,
+                        uint32_t sad_array[4]);
+#define vpx_sad8x8x4d vpx_sad8x8x4d_neon
+
+unsigned int vpx_sad_skip_16x16_c(const uint8_t* src_ptr,
+                                  int src_stride,
+                                  const uint8_t* ref_ptr,
+                                  int ref_stride);
+unsigned int vpx_sad_skip_16x16_neon(const uint8_t* src_ptr,
+                                     int src_stride,
+                                     const uint8_t* ref_ptr,
+                                     int ref_stride);
+unsigned int vpx_sad_skip_16x16_neon_dotprod(const uint8_t* src_ptr,
+                                             int src_stride,
+                                             const uint8_t* ref_ptr,
+                                             int ref_stride);
+RTCD_EXTERN unsigned int (*vpx_sad_skip_16x16)(const uint8_t* src_ptr,
+                                               int src_stride,
+                                               const uint8_t* ref_ptr,
+                                               int ref_stride);
+
+void vpx_sad_skip_16x16x4d_c(const uint8_t* src_ptr,
+                             int src_stride,
+                             const uint8_t* const ref_array[4],
+                             int ref_stride,
+                             uint32_t sad_array[4]);
+void vpx_sad_skip_16x16x4d_neon(const uint8_t* src_ptr,
+                                int src_stride,
+                                const uint8_t* const ref_array[4],
+                                int ref_stride,
+                                uint32_t sad_array[4]);
+void vpx_sad_skip_16x16x4d_neon_dotprod(const uint8_t* src_ptr,
+                                        int src_stride,
+                                        const uint8_t* const ref_array[4],
+                                        int ref_stride,
+                                        uint32_t sad_array[4]);
+RTCD_EXTERN void (*vpx_sad_skip_16x16x4d)(const uint8_t* src_ptr,
+                                          int src_stride,
+                                          const uint8_t* const ref_array[4],
+                                          int ref_stride,
+                                          uint32_t sad_array[4]);
+
+unsigned int vpx_sad_skip_16x32_c(const uint8_t* src_ptr,
+                                  int src_stride,
+                                  const uint8_t* ref_ptr,
+                                  int ref_stride);
+unsigned int vpx_sad_skip_16x32_neon(const uint8_t* src_ptr,
+                                     int src_stride,
+                                     const uint8_t* ref_ptr,
+                                     int ref_stride);
+unsigned int vpx_sad_skip_16x32_neon_dotprod(const uint8_t* src_ptr,
+                                             int src_stride,
+                                             const uint8_t* ref_ptr,
+                                             int ref_stride);
+RTCD_EXTERN unsigned int (*vpx_sad_skip_16x32)(const uint8_t* src_ptr,
+                                               int src_stride,
+                                               const uint8_t* ref_ptr,
+                                               int ref_stride);
+
+void vpx_sad_skip_16x32x4d_c(const uint8_t* src_ptr,
+                             int src_stride,
+                             const uint8_t* const ref_array[4],
+                             int ref_stride,
+                             uint32_t sad_array[4]);
+void vpx_sad_skip_16x32x4d_neon(const uint8_t* src_ptr,
+                                int src_stride,
+                                const uint8_t* const ref_array[4],
+                                int ref_stride,
+                                uint32_t sad_array[4]);
+void vpx_sad_skip_16x32x4d_neon_dotprod(const uint8_t* src_ptr,
+                                        int src_stride,
+                                        const uint8_t* const ref_array[4],
+                                        int ref_stride,
+                                        uint32_t sad_array[4]);
+RTCD_EXTERN void (*vpx_sad_skip_16x32x4d)(const uint8_t* src_ptr,
+                                          int src_stride,
+                                          const uint8_t* const ref_array[4],
+                                          int ref_stride,
+                                          uint32_t sad_array[4]);
+
+unsigned int vpx_sad_skip_16x8_c(const uint8_t* src_ptr,
+                                 int src_stride,
+                                 const uint8_t* ref_ptr,
+                                 int ref_stride);
+unsigned int vpx_sad_skip_16x8_neon(const uint8_t* src_ptr,
+                                    int src_stride,
+                                    const uint8_t* ref_ptr,
+                                    int ref_stride);
+unsigned int vpx_sad_skip_16x8_neon_dotprod(const uint8_t* src_ptr,
+                                            int src_stride,
+                                            const uint8_t* ref_ptr,
+                                            int ref_stride);
+RTCD_EXTERN unsigned int (*vpx_sad_skip_16x8)(const uint8_t* src_ptr,
+                                              int src_stride,
+                                              const uint8_t* ref_ptr,
+                                              int ref_stride);
+
+void vpx_sad_skip_16x8x4d_c(const uint8_t* src_ptr,
+                            int src_stride,
+                            const uint8_t* const ref_array[4],
+                            int ref_stride,
+                            uint32_t sad_array[4]);
+void vpx_sad_skip_16x8x4d_neon(const uint8_t* src_ptr,
+                               int src_stride,
+                               const uint8_t* const ref_array[4],
+                               int ref_stride,
+                               uint32_t sad_array[4]);
+void vpx_sad_skip_16x8x4d_neon_dotprod(const uint8_t* src_ptr,
+                                       int src_stride,
+                                       const uint8_t* const ref_array[4],
+                                       int ref_stride,
+                                       uint32_t sad_array[4]);
+RTCD_EXTERN void (*vpx_sad_skip_16x8x4d)(const uint8_t* src_ptr,
+                                         int src_stride,
+                                         const uint8_t* const ref_array[4],
+                                         int ref_stride,
+                                         uint32_t sad_array[4]);
+
+unsigned int vpx_sad_skip_32x16_c(const uint8_t* src_ptr,
+                                  int src_stride,
+                                  const uint8_t* ref_ptr,
+                                  int ref_stride);
+unsigned int vpx_sad_skip_32x16_neon(const uint8_t* src_ptr,
+                                     int src_stride,
+                                     const uint8_t* ref_ptr,
+                                     int ref_stride);
+unsigned int vpx_sad_skip_32x16_neon_dotprod(const uint8_t* src_ptr,
+                                             int src_stride,
+                                             const uint8_t* ref_ptr,
+                                             int ref_stride);
+RTCD_EXTERN unsigned int (*vpx_sad_skip_32x16)(const uint8_t* src_ptr,
+                                               int src_stride,
+                                               const uint8_t* ref_ptr,
+                                               int ref_stride);
+
+void vpx_sad_skip_32x16x4d_c(const uint8_t* src_ptr,
+                             int src_stride,
+                             const uint8_t* const ref_array[4],
+                             int ref_stride,
+                             uint32_t sad_array[4]);
+void vpx_sad_skip_32x16x4d_neon(const uint8_t* src_ptr,
+                                int src_stride,
+                                const uint8_t* const ref_array[4],
+                                int ref_stride,
+                                uint32_t sad_array[4]);
+void vpx_sad_skip_32x16x4d_neon_dotprod(const uint8_t* src_ptr,
+                                        int src_stride,
+                                        const uint8_t* const ref_array[4],
+                                        int ref_stride,
+                                        uint32_t sad_array[4]);
+RTCD_EXTERN void (*vpx_sad_skip_32x16x4d)(const uint8_t* src_ptr,
+                                          int src_stride,
+                                          const uint8_t* const ref_array[4],
+                                          int ref_stride,
+                                          uint32_t sad_array[4]);
+
+unsigned int vpx_sad_skip_32x32_c(const uint8_t* src_ptr,
+                                  int src_stride,
+                                  const uint8_t* ref_ptr,
+                                  int ref_stride);
+unsigned int vpx_sad_skip_32x32_neon(const uint8_t* src_ptr,
+                                     int src_stride,
+                                     const uint8_t* ref_ptr,
+                                     int ref_stride);
+unsigned int vpx_sad_skip_32x32_neon_dotprod(const uint8_t* src_ptr,
+                                             int src_stride,
+                                             const uint8_t* ref_ptr,
+                                             int ref_stride);
+RTCD_EXTERN unsigned int (*vpx_sad_skip_32x32)(const uint8_t* src_ptr,
+                                               int src_stride,
+                                               const uint8_t* ref_ptr,
+                                               int ref_stride);
+
+void vpx_sad_skip_32x32x4d_c(const uint8_t* src_ptr,
+                             int src_stride,
+                             const uint8_t* const ref_array[4],
+                             int ref_stride,
+                             uint32_t sad_array[4]);
+void vpx_sad_skip_32x32x4d_neon(const uint8_t* src_ptr,
+                                int src_stride,
+                                const uint8_t* const ref_array[4],
+                                int ref_stride,
+                                uint32_t sad_array[4]);
+void vpx_sad_skip_32x32x4d_neon_dotprod(const uint8_t* src_ptr,
+                                        int src_stride,
+                                        const uint8_t* const ref_array[4],
+                                        int ref_stride,
+                                        uint32_t sad_array[4]);
+RTCD_EXTERN void (*vpx_sad_skip_32x32x4d)(const uint8_t* src_ptr,
+                                          int src_stride,
+                                          const uint8_t* const ref_array[4],
+                                          int ref_stride,
+                                          uint32_t sad_array[4]);
+
+unsigned int vpx_sad_skip_32x64_c(const uint8_t* src_ptr,
+                                  int src_stride,
+                                  const uint8_t* ref_ptr,
+                                  int ref_stride);
+unsigned int vpx_sad_skip_32x64_neon(const uint8_t* src_ptr,
+                                     int src_stride,
+                                     const uint8_t* ref_ptr,
+                                     int ref_stride);
+unsigned int vpx_sad_skip_32x64_neon_dotprod(const uint8_t* src_ptr,
+                                             int src_stride,
+                                             const uint8_t* ref_ptr,
+                                             int ref_stride);
+RTCD_EXTERN unsigned int (*vpx_sad_skip_32x64)(const uint8_t* src_ptr,
+                                               int src_stride,
+                                               const uint8_t* ref_ptr,
+                                               int ref_stride);
+
+void vpx_sad_skip_32x64x4d_c(const uint8_t* src_ptr,
+                             int src_stride,
+                             const uint8_t* const ref_array[4],
+                             int ref_stride,
+                             uint32_t sad_array[4]);
+void vpx_sad_skip_32x64x4d_neon(const uint8_t* src_ptr,
+                                int src_stride,
+                                const uint8_t* const ref_array[4],
+                                int ref_stride,
+                                uint32_t sad_array[4]);
+void vpx_sad_skip_32x64x4d_neon_dotprod(const uint8_t* src_ptr,
+                                        int src_stride,
+                                        const uint8_t* const ref_array[4],
+                                        int ref_stride,
+                                        uint32_t sad_array[4]);
+RTCD_EXTERN void (*vpx_sad_skip_32x64x4d)(const uint8_t* src_ptr,
+                                          int src_stride,
+                                          const uint8_t* const ref_array[4],
+                                          int ref_stride,
+                                          uint32_t sad_array[4]);
+
+unsigned int vpx_sad_skip_4x4_c(const uint8_t* src_ptr,
+                                int src_stride,
+                                const uint8_t* ref_ptr,
+                                int ref_stride);
+unsigned int vpx_sad_skip_4x4_neon(const uint8_t* src_ptr,
+                                   int src_stride,
+                                   const uint8_t* ref_ptr,
+                                   int ref_stride);
+#define vpx_sad_skip_4x4 vpx_sad_skip_4x4_neon
+
+void vpx_sad_skip_4x4x4d_c(const uint8_t* src_ptr,
+                           int src_stride,
+                           const uint8_t* const ref_array[4],
+                           int ref_stride,
+                           uint32_t sad_array[4]);
+void vpx_sad_skip_4x4x4d_neon(const uint8_t* src_ptr,
+                              int src_stride,
+                              const uint8_t* const ref_array[4],
+                              int ref_stride,
+                              uint32_t sad_array[4]);
+#define vpx_sad_skip_4x4x4d vpx_sad_skip_4x4x4d_neon
+
+unsigned int vpx_sad_skip_4x8_c(const uint8_t* src_ptr,
+                                int src_stride,
+                                const uint8_t* ref_ptr,
+                                int ref_stride);
+unsigned int vpx_sad_skip_4x8_neon(const uint8_t* src_ptr,
+                                   int src_stride,
+                                   const uint8_t* ref_ptr,
+                                   int ref_stride);
+#define vpx_sad_skip_4x8 vpx_sad_skip_4x8_neon
+
+void vpx_sad_skip_4x8x4d_c(const uint8_t* src_ptr,
+                           int src_stride,
+                           const uint8_t* const ref_array[4],
+                           int ref_stride,
+                           uint32_t sad_array[4]);
+void vpx_sad_skip_4x8x4d_neon(const uint8_t* src_ptr,
+                              int src_stride,
+                              const uint8_t* const ref_array[4],
+                              int ref_stride,
+                              uint32_t sad_array[4]);
+#define vpx_sad_skip_4x8x4d vpx_sad_skip_4x8x4d_neon
+
+unsigned int vpx_sad_skip_64x32_c(const uint8_t* src_ptr,
+                                  int src_stride,
+                                  const uint8_t* ref_ptr,
+                                  int ref_stride);
+unsigned int vpx_sad_skip_64x32_neon(const uint8_t* src_ptr,
+                                     int src_stride,
+                                     const uint8_t* ref_ptr,
+                                     int ref_stride);
+unsigned int vpx_sad_skip_64x32_neon_dotprod(const uint8_t* src_ptr,
+                                             int src_stride,
+                                             const uint8_t* ref_ptr,
+                                             int ref_stride);
+RTCD_EXTERN unsigned int (*vpx_sad_skip_64x32)(const uint8_t* src_ptr,
+                                               int src_stride,
+                                               const uint8_t* ref_ptr,
+                                               int ref_stride);
+
+void vpx_sad_skip_64x32x4d_c(const uint8_t* src_ptr,
+                             int src_stride,
+                             const uint8_t* const ref_array[4],
+                             int ref_stride,
+                             uint32_t sad_array[4]);
+void vpx_sad_skip_64x32x4d_neon(const uint8_t* src_ptr,
+                                int src_stride,
+                                const uint8_t* const ref_array[4],
+                                int ref_stride,
+                                uint32_t sad_array[4]);
+void vpx_sad_skip_64x32x4d_neon_dotprod(const uint8_t* src_ptr,
+                                        int src_stride,
+                                        const uint8_t* const ref_array[4],
+                                        int ref_stride,
+                                        uint32_t sad_array[4]);
+RTCD_EXTERN void (*vpx_sad_skip_64x32x4d)(const uint8_t* src_ptr,
+                                          int src_stride,
+                                          const uint8_t* const ref_array[4],
+                                          int ref_stride,
+                                          uint32_t sad_array[4]);
+
+unsigned int vpx_sad_skip_64x64_c(const uint8_t* src_ptr,
+                                  int src_stride,
+                                  const uint8_t* ref_ptr,
+                                  int ref_stride);
+unsigned int vpx_sad_skip_64x64_neon(const uint8_t* src_ptr,
+                                     int src_stride,
+                                     const uint8_t* ref_ptr,
+                                     int ref_stride);
+unsigned int vpx_sad_skip_64x64_neon_dotprod(const uint8_t* src_ptr,
+                                             int src_stride,
+                                             const uint8_t* ref_ptr,
+                                             int ref_stride);
+RTCD_EXTERN unsigned int (*vpx_sad_skip_64x64)(const uint8_t* src_ptr,
+                                               int src_stride,
+                                               const uint8_t* ref_ptr,
+                                               int ref_stride);
+
+void vpx_sad_skip_64x64x4d_c(const uint8_t* src_ptr,
+                             int src_stride,
+                             const uint8_t* const ref_array[4],
+                             int ref_stride,
+                             uint32_t sad_array[4]);
+void vpx_sad_skip_64x64x4d_neon(const uint8_t* src_ptr,
+                                int src_stride,
+                                const uint8_t* const ref_array[4],
+                                int ref_stride,
+                                uint32_t sad_array[4]);
+void vpx_sad_skip_64x64x4d_neon_dotprod(const uint8_t* src_ptr,
+                                        int src_stride,
+                                        const uint8_t* const ref_array[4],
+                                        int ref_stride,
+                                        uint32_t sad_array[4]);
+RTCD_EXTERN void (*vpx_sad_skip_64x64x4d)(const uint8_t* src_ptr,
+                                          int src_stride,
+                                          const uint8_t* const ref_array[4],
+                                          int ref_stride,
+                                          uint32_t sad_array[4]);
+
+unsigned int vpx_sad_skip_8x16_c(const uint8_t* src_ptr,
+                                 int src_stride,
+                                 const uint8_t* ref_ptr,
+                                 int ref_stride);
+unsigned int vpx_sad_skip_8x16_neon(const uint8_t* src_ptr,
+                                    int src_stride,
+                                    const uint8_t* ref_ptr,
+                                    int ref_stride);
+#define vpx_sad_skip_8x16 vpx_sad_skip_8x16_neon
+
+void vpx_sad_skip_8x16x4d_c(const uint8_t* src_ptr,
+                            int src_stride,
+                            const uint8_t* const ref_array[4],
+                            int ref_stride,
+                            uint32_t sad_array[4]);
+void vpx_sad_skip_8x16x4d_neon(const uint8_t* src_ptr,
+                               int src_stride,
+                               const uint8_t* const ref_array[4],
+                               int ref_stride,
+                               uint32_t sad_array[4]);
+#define vpx_sad_skip_8x16x4d vpx_sad_skip_8x16x4d_neon
+
+unsigned int vpx_sad_skip_8x4_c(const uint8_t* src_ptr,
+                                int src_stride,
+                                const uint8_t* ref_ptr,
+                                int ref_stride);
+unsigned int vpx_sad_skip_8x4_neon(const uint8_t* src_ptr,
+                                   int src_stride,
+                                   const uint8_t* ref_ptr,
+                                   int ref_stride);
+#define vpx_sad_skip_8x4 vpx_sad_skip_8x4_neon
+
+void vpx_sad_skip_8x4x4d_c(const uint8_t* src_ptr,
+                           int src_stride,
+                           const uint8_t* const ref_array[4],
+                           int ref_stride,
+                           uint32_t sad_array[4]);
+void vpx_sad_skip_8x4x4d_neon(const uint8_t* src_ptr,
+                              int src_stride,
+                              const uint8_t* const ref_array[4],
+                              int ref_stride,
+                              uint32_t sad_array[4]);
+#define vpx_sad_skip_8x4x4d vpx_sad_skip_8x4x4d_neon
+
+unsigned int vpx_sad_skip_8x8_c(const uint8_t* src_ptr,
+                                int src_stride,
+                                const uint8_t* ref_ptr,
+                                int ref_stride);
+unsigned int vpx_sad_skip_8x8_neon(const uint8_t* src_ptr,
+                                   int src_stride,
+                                   const uint8_t* ref_ptr,
+                                   int ref_stride);
+#define vpx_sad_skip_8x8 vpx_sad_skip_8x8_neon
+
+void vpx_sad_skip_8x8x4d_c(const uint8_t* src_ptr,
+                           int src_stride,
+                           const uint8_t* const ref_array[4],
+                           int ref_stride,
+                           uint32_t sad_array[4]);
+void vpx_sad_skip_8x8x4d_neon(const uint8_t* src_ptr,
+                              int src_stride,
+                              const uint8_t* const ref_array[4],
+                              int ref_stride,
+                              uint32_t sad_array[4]);
+#define vpx_sad_skip_8x8x4d vpx_sad_skip_8x8x4d_neon
+
+int vpx_satd_c(const int16_t* coeff, int length);
+int vpx_satd_neon(const int16_t* coeff, int length);
+#define vpx_satd vpx_satd_neon
+
+void vpx_scaled_2d_c(const uint8_t* src,
+                     ptrdiff_t src_stride,
+                     uint8_t* dst,
+                     ptrdiff_t dst_stride,
+                     const InterpKernel* filter,
+                     int x0_q4,
+                     int x_step_q4,
+                     int y0_q4,
+                     int y_step_q4,
+                     int w,
+                     int h);
+void vpx_scaled_2d_neon(const uint8_t* src,
+                        ptrdiff_t src_stride,
+                        uint8_t* dst,
+                        ptrdiff_t dst_stride,
+                        const InterpKernel* filter,
+                        int x0_q4,
+                        int x_step_q4,
+                        int y0_q4,
+                        int y_step_q4,
+                        int w,
+                        int h);
+#define vpx_scaled_2d vpx_scaled_2d_neon
+
+void vpx_scaled_avg_2d_c(const uint8_t* src,
+                         ptrdiff_t src_stride,
+                         uint8_t* dst,
+                         ptrdiff_t dst_stride,
+                         const InterpKernel* filter,
+                         int x0_q4,
+                         int x_step_q4,
+                         int y0_q4,
+                         int y_step_q4,
+                         int w,
+                         int h);
+#define vpx_scaled_avg_2d vpx_scaled_avg_2d_c
+
+void vpx_scaled_avg_horiz_c(const uint8_t* src,
+                            ptrdiff_t src_stride,
+                            uint8_t* dst,
+                            ptrdiff_t dst_stride,
+                            const InterpKernel* filter,
+                            int x0_q4,
+                            int x_step_q4,
+                            int y0_q4,
+                            int y_step_q4,
+                            int w,
+                            int h);
+#define vpx_scaled_avg_horiz vpx_scaled_avg_horiz_c
+
+void vpx_scaled_avg_vert_c(const uint8_t* src,
+                           ptrdiff_t src_stride,
+                           uint8_t* dst,
+                           ptrdiff_t dst_stride,
+                           const InterpKernel* filter,
+                           int x0_q4,
+                           int x_step_q4,
+                           int y0_q4,
+                           int y_step_q4,
+                           int w,
+                           int h);
+#define vpx_scaled_avg_vert vpx_scaled_avg_vert_c
+
+void vpx_scaled_horiz_c(const uint8_t* src,
+                        ptrdiff_t src_stride,
+                        uint8_t* dst,
+                        ptrdiff_t dst_stride,
+                        const InterpKernel* filter,
+                        int x0_q4,
+                        int x_step_q4,
+                        int y0_q4,
+                        int y_step_q4,
+                        int w,
+                        int h);
+#define vpx_scaled_horiz vpx_scaled_horiz_c
+
+void vpx_scaled_vert_c(const uint8_t* src,
+                       ptrdiff_t src_stride,
+                       uint8_t* dst,
+                       ptrdiff_t dst_stride,
+                       const InterpKernel* filter,
+                       int x0_q4,
+                       int x_step_q4,
+                       int y0_q4,
+                       int y_step_q4,
+                       int w,
+                       int h);
+#define vpx_scaled_vert vpx_scaled_vert_c
+
+int64_t vpx_sse_c(const uint8_t* src,
+                  int src_stride,
+                  const uint8_t* ref,
+                  int ref_stride,
+                  int width,
+                  int height);
+int64_t vpx_sse_neon(const uint8_t* src,
+                     int src_stride,
+                     const uint8_t* ref,
+                     int ref_stride,
+                     int width,
+                     int height);
+int64_t vpx_sse_neon_dotprod(const uint8_t* src,
+                             int src_stride,
+                             const uint8_t* ref,
+                             int ref_stride,
+                             int width,
+                             int height);
+RTCD_EXTERN int64_t (*vpx_sse)(const uint8_t* src,
+                               int src_stride,
+                               const uint8_t* ref,
+                               int ref_stride,
+                               int width,
+                               int height);
+
+uint32_t vpx_sub_pixel_avg_variance16x16_c(const uint8_t* src_ptr,
+                                           int src_stride,
+                                           int x_offset,
+                                           int y_offset,
+                                           const uint8_t* ref_ptr,
+                                           int ref_stride,
+                                           uint32_t* sse,
+                                           const uint8_t* second_pred);
+uint32_t vpx_sub_pixel_avg_variance16x16_neon(const uint8_t* src_ptr,
+                                              int src_stride,
+                                              int x_offset,
+                                              int y_offset,
+                                              const uint8_t* ref_ptr,
+                                              int ref_stride,
+                                              uint32_t* sse,
+                                              const uint8_t* second_pred);
+#define vpx_sub_pixel_avg_variance16x16 vpx_sub_pixel_avg_variance16x16_neon
+
+uint32_t vpx_sub_pixel_avg_variance16x32_c(const uint8_t* src_ptr,
+                                           int src_stride,
+                                           int x_offset,
+                                           int y_offset,
+                                           const uint8_t* ref_ptr,
+                                           int ref_stride,
+                                           uint32_t* sse,
+                                           const uint8_t* second_pred);
+uint32_t vpx_sub_pixel_avg_variance16x32_neon(const uint8_t* src_ptr,
+                                              int src_stride,
+                                              int x_offset,
+                                              int y_offset,
+                                              const uint8_t* ref_ptr,
+                                              int ref_stride,
+                                              uint32_t* sse,
+                                              const uint8_t* second_pred);
+#define vpx_sub_pixel_avg_variance16x32 vpx_sub_pixel_avg_variance16x32_neon
+
+uint32_t vpx_sub_pixel_avg_variance16x8_c(const uint8_t* src_ptr,
+                                          int src_stride,
+                                          int x_offset,
+                                          int y_offset,
+                                          const uint8_t* ref_ptr,
+                                          int ref_stride,
+                                          uint32_t* sse,
+                                          const uint8_t* second_pred);
+uint32_t vpx_sub_pixel_avg_variance16x8_neon(const uint8_t* src_ptr,
+                                             int src_stride,
+                                             int x_offset,
+                                             int y_offset,
+                                             const uint8_t* ref_ptr,
+                                             int ref_stride,
+                                             uint32_t* sse,
+                                             const uint8_t* second_pred);
+#define vpx_sub_pixel_avg_variance16x8 vpx_sub_pixel_avg_variance16x8_neon
+
+uint32_t vpx_sub_pixel_avg_variance32x16_c(const uint8_t* src_ptr,
+                                           int src_stride,
+                                           int x_offset,
+                                           int y_offset,
+                                           const uint8_t* ref_ptr,
+                                           int ref_stride,
+                                           uint32_t* sse,
+                                           const uint8_t* second_pred);
+uint32_t vpx_sub_pixel_avg_variance32x16_neon(const uint8_t* src_ptr,
+                                              int src_stride,
+                                              int x_offset,
+                                              int y_offset,
+                                              const uint8_t* ref_ptr,
+                                              int ref_stride,
+                                              uint32_t* sse,
+                                              const uint8_t* second_pred);
+#define vpx_sub_pixel_avg_variance32x16 vpx_sub_pixel_avg_variance32x16_neon
+
+uint32_t vpx_sub_pixel_avg_variance32x32_c(const uint8_t* src_ptr,
+                                           int src_stride,
+                                           int x_offset,
+                                           int y_offset,
+                                           const uint8_t* ref_ptr,
+                                           int ref_stride,
+                                           uint32_t* sse,
+                                           const uint8_t* second_pred);
+uint32_t vpx_sub_pixel_avg_variance32x32_neon(const uint8_t* src_ptr,
+                                              int src_stride,
+                                              int x_offset,
+                                              int y_offset,
+                                              const uint8_t* ref_ptr,
+                                              int ref_stride,
+                                              uint32_t* sse,
+                                              const uint8_t* second_pred);
+#define vpx_sub_pixel_avg_variance32x32 vpx_sub_pixel_avg_variance32x32_neon
+
+uint32_t vpx_sub_pixel_avg_variance32x64_c(const uint8_t* src_ptr,
+                                           int src_stride,
+                                           int x_offset,
+                                           int y_offset,
+                                           const uint8_t* ref_ptr,
+                                           int ref_stride,
+                                           uint32_t* sse,
+                                           const uint8_t* second_pred);
+uint32_t vpx_sub_pixel_avg_variance32x64_neon(const uint8_t* src_ptr,
+                                              int src_stride,
+                                              int x_offset,
+                                              int y_offset,
+                                              const uint8_t* ref_ptr,
+                                              int ref_stride,
+                                              uint32_t* sse,
+                                              const uint8_t* second_pred);
+#define vpx_sub_pixel_avg_variance32x64 vpx_sub_pixel_avg_variance32x64_neon
+
+uint32_t vpx_sub_pixel_avg_variance4x4_c(const uint8_t* src_ptr,
+                                         int src_stride,
+                                         int x_offset,
+                                         int y_offset,
+                                         const uint8_t* ref_ptr,
+                                         int ref_stride,
+                                         uint32_t* sse,
+                                         const uint8_t* second_pred);
+uint32_t vpx_sub_pixel_avg_variance4x4_neon(const uint8_t* src_ptr,
+                                            int src_stride,
+                                            int x_offset,
+                                            int y_offset,
+                                            const uint8_t* ref_ptr,
+                                            int ref_stride,
+                                            uint32_t* sse,
+                                            const uint8_t* second_pred);
+#define vpx_sub_pixel_avg_variance4x4 vpx_sub_pixel_avg_variance4x4_neon
+
+uint32_t vpx_sub_pixel_avg_variance4x8_c(const uint8_t* src_ptr,
+                                         int src_stride,
+                                         int x_offset,
+                                         int y_offset,
+                                         const uint8_t* ref_ptr,
+                                         int ref_stride,
+                                         uint32_t* sse,
+                                         const uint8_t* second_pred);
+uint32_t vpx_sub_pixel_avg_variance4x8_neon(const uint8_t* src_ptr,
+                                            int src_stride,
+                                            int x_offset,
+                                            int y_offset,
+                                            const uint8_t* ref_ptr,
+                                            int ref_stride,
+                                            uint32_t* sse,
+                                            const uint8_t* second_pred);
+#define vpx_sub_pixel_avg_variance4x8 vpx_sub_pixel_avg_variance4x8_neon
+
+uint32_t vpx_sub_pixel_avg_variance64x32_c(const uint8_t* src_ptr,
+                                           int src_stride,
+                                           int x_offset,
+                                           int y_offset,
+                                           const uint8_t* ref_ptr,
+                                           int ref_stride,
+                                           uint32_t* sse,
+                                           const uint8_t* second_pred);
+uint32_t vpx_sub_pixel_avg_variance64x32_neon(const uint8_t* src_ptr,
+                                              int src_stride,
+                                              int x_offset,
+                                              int y_offset,
+                                              const uint8_t* ref_ptr,
+                                              int ref_stride,
+                                              uint32_t* sse,
+                                              const uint8_t* second_pred);
+#define vpx_sub_pixel_avg_variance64x32 vpx_sub_pixel_avg_variance64x32_neon
+
+uint32_t vpx_sub_pixel_avg_variance64x64_c(const uint8_t* src_ptr,
+                                           int src_stride,
+                                           int x_offset,
+                                           int y_offset,
+                                           const uint8_t* ref_ptr,
+                                           int ref_stride,
+                                           uint32_t* sse,
+                                           const uint8_t* second_pred);
+uint32_t vpx_sub_pixel_avg_variance64x64_neon(const uint8_t* src_ptr,
+                                              int src_stride,
+                                              int x_offset,
+                                              int y_offset,
+                                              const uint8_t* ref_ptr,
+                                              int ref_stride,
+                                              uint32_t* sse,
+                                              const uint8_t* second_pred);
+#define vpx_sub_pixel_avg_variance64x64 vpx_sub_pixel_avg_variance64x64_neon
+
+uint32_t vpx_sub_pixel_avg_variance8x16_c(const uint8_t* src_ptr,
+                                          int src_stride,
+                                          int x_offset,
+                                          int y_offset,
+                                          const uint8_t* ref_ptr,
+                                          int ref_stride,
+                                          uint32_t* sse,
+                                          const uint8_t* second_pred);
+uint32_t vpx_sub_pixel_avg_variance8x16_neon(const uint8_t* src_ptr,
+                                             int src_stride,
+                                             int x_offset,
+                                             int y_offset,
+                                             const uint8_t* ref_ptr,
+                                             int ref_stride,
+                                             uint32_t* sse,
+                                             const uint8_t* second_pred);
+#define vpx_sub_pixel_avg_variance8x16 vpx_sub_pixel_avg_variance8x16_neon
+
+uint32_t vpx_sub_pixel_avg_variance8x4_c(const uint8_t* src_ptr,
+                                         int src_stride,
+                                         int x_offset,
+                                         int y_offset,
+                                         const uint8_t* ref_ptr,
+                                         int ref_stride,
+                                         uint32_t* sse,
+                                         const uint8_t* second_pred);
+uint32_t vpx_sub_pixel_avg_variance8x4_neon(const uint8_t* src_ptr,
+                                            int src_stride,
+                                            int x_offset,
+                                            int y_offset,
+                                            const uint8_t* ref_ptr,
+                                            int ref_stride,
+                                            uint32_t* sse,
+                                            const uint8_t* second_pred);
+#define vpx_sub_pixel_avg_variance8x4 vpx_sub_pixel_avg_variance8x4_neon
+
+uint32_t vpx_sub_pixel_avg_variance8x8_c(const uint8_t* src_ptr,
+                                         int src_stride,
+                                         int x_offset,
+                                         int y_offset,
+                                         const uint8_t* ref_ptr,
+                                         int ref_stride,
+                                         uint32_t* sse,
+                                         const uint8_t* second_pred);
+uint32_t vpx_sub_pixel_avg_variance8x8_neon(const uint8_t* src_ptr,
+                                            int src_stride,
+                                            int x_offset,
+                                            int y_offset,
+                                            const uint8_t* ref_ptr,
+                                            int ref_stride,
+                                            uint32_t* sse,
+                                            const uint8_t* second_pred);
+#define vpx_sub_pixel_avg_variance8x8 vpx_sub_pixel_avg_variance8x8_neon
+
+uint32_t vpx_sub_pixel_variance16x16_c(const uint8_t* src_ptr,
+                                       int src_stride,
+                                       int x_offset,
+                                       int y_offset,
+                                       const uint8_t* ref_ptr,
+                                       int ref_stride,
+                                       uint32_t* sse);
+uint32_t vpx_sub_pixel_variance16x16_neon(const uint8_t* src_ptr,
+                                          int src_stride,
+                                          int x_offset,
+                                          int y_offset,
+                                          const uint8_t* ref_ptr,
+                                          int ref_stride,
+                                          uint32_t* sse);
+#define vpx_sub_pixel_variance16x16 vpx_sub_pixel_variance16x16_neon
+
+uint32_t vpx_sub_pixel_variance16x32_c(const uint8_t* src_ptr,
+                                       int src_stride,
+                                       int x_offset,
+                                       int y_offset,
+                                       const uint8_t* ref_ptr,
+                                       int ref_stride,
+                                       uint32_t* sse);
+uint32_t vpx_sub_pixel_variance16x32_neon(const uint8_t* src_ptr,
+                                          int src_stride,
+                                          int x_offset,
+                                          int y_offset,
+                                          const uint8_t* ref_ptr,
+                                          int ref_stride,
+                                          uint32_t* sse);
+#define vpx_sub_pixel_variance16x32 vpx_sub_pixel_variance16x32_neon
+
+uint32_t vpx_sub_pixel_variance16x8_c(const uint8_t* src_ptr,
+                                      int src_stride,
+                                      int x_offset,
+                                      int y_offset,
+                                      const uint8_t* ref_ptr,
+                                      int ref_stride,
+                                      uint32_t* sse);
+uint32_t vpx_sub_pixel_variance16x8_neon(const uint8_t* src_ptr,
+                                         int src_stride,
+                                         int x_offset,
+                                         int y_offset,
+                                         const uint8_t* ref_ptr,
+                                         int ref_stride,
+                                         uint32_t* sse);
+#define vpx_sub_pixel_variance16x8 vpx_sub_pixel_variance16x8_neon
+
+uint32_t vpx_sub_pixel_variance32x16_c(const uint8_t* src_ptr,
+                                       int src_stride,
+                                       int x_offset,
+                                       int y_offset,
+                                       const uint8_t* ref_ptr,
+                                       int ref_stride,
+                                       uint32_t* sse);
+uint32_t vpx_sub_pixel_variance32x16_neon(const uint8_t* src_ptr,
+                                          int src_stride,
+                                          int x_offset,
+                                          int y_offset,
+                                          const uint8_t* ref_ptr,
+                                          int ref_stride,
+                                          uint32_t* sse);
+#define vpx_sub_pixel_variance32x16 vpx_sub_pixel_variance32x16_neon
+
+uint32_t vpx_sub_pixel_variance32x32_c(const uint8_t* src_ptr,
+                                       int src_stride,
+                                       int x_offset,
+                                       int y_offset,
+                                       const uint8_t* ref_ptr,
+                                       int ref_stride,
+                                       uint32_t* sse);
+uint32_t vpx_sub_pixel_variance32x32_neon(const uint8_t* src_ptr,
+                                          int src_stride,
+                                          int x_offset,
+                                          int y_offset,
+                                          const uint8_t* ref_ptr,
+                                          int ref_stride,
+                                          uint32_t* sse);
+#define vpx_sub_pixel_variance32x32 vpx_sub_pixel_variance32x32_neon
+
+uint32_t vpx_sub_pixel_variance32x64_c(const uint8_t* src_ptr,
+                                       int src_stride,
+                                       int x_offset,
+                                       int y_offset,
+                                       const uint8_t* ref_ptr,
+                                       int ref_stride,
+                                       uint32_t* sse);
+uint32_t vpx_sub_pixel_variance32x64_neon(const uint8_t* src_ptr,
+                                          int src_stride,
+                                          int x_offset,
+                                          int y_offset,
+                                          const uint8_t* ref_ptr,
+                                          int ref_stride,
+                                          uint32_t* sse);
+#define vpx_sub_pixel_variance32x64 vpx_sub_pixel_variance32x64_neon
+
+uint32_t vpx_sub_pixel_variance4x4_c(const uint8_t* src_ptr,
+                                     int src_stride,
+                                     int x_offset,
+                                     int y_offset,
+                                     const uint8_t* ref_ptr,
+                                     int ref_stride,
+                                     uint32_t* sse);
+uint32_t vpx_sub_pixel_variance4x4_neon(const uint8_t* src_ptr,
+                                        int src_stride,
+                                        int x_offset,
+                                        int y_offset,
+                                        const uint8_t* ref_ptr,
+                                        int ref_stride,
+                                        uint32_t* sse);
+#define vpx_sub_pixel_variance4x4 vpx_sub_pixel_variance4x4_neon
+
+uint32_t vpx_sub_pixel_variance4x8_c(const uint8_t* src_ptr,
+                                     int src_stride,
+                                     int x_offset,
+                                     int y_offset,
+                                     const uint8_t* ref_ptr,
+                                     int ref_stride,
+                                     uint32_t* sse);
+uint32_t vpx_sub_pixel_variance4x8_neon(const uint8_t* src_ptr,
+                                        int src_stride,
+                                        int x_offset,
+                                        int y_offset,
+                                        const uint8_t* ref_ptr,
+                                        int ref_stride,
+                                        uint32_t* sse);
+#define vpx_sub_pixel_variance4x8 vpx_sub_pixel_variance4x8_neon
+
+uint32_t vpx_sub_pixel_variance64x32_c(const uint8_t* src_ptr,
+                                       int src_stride,
+                                       int x_offset,
+                                       int y_offset,
+                                       const uint8_t* ref_ptr,
+                                       int ref_stride,
+                                       uint32_t* sse);
+uint32_t vpx_sub_pixel_variance64x32_neon(const uint8_t* src_ptr,
+                                          int src_stride,
+                                          int x_offset,
+                                          int y_offset,
+                                          const uint8_t* ref_ptr,
+                                          int ref_stride,
+                                          uint32_t* sse);
+#define vpx_sub_pixel_variance64x32 vpx_sub_pixel_variance64x32_neon
+
+uint32_t vpx_sub_pixel_variance64x64_c(const uint8_t* src_ptr,
+                                       int src_stride,
+                                       int x_offset,
+                                       int y_offset,
+                                       const uint8_t* ref_ptr,
+                                       int ref_stride,
+                                       uint32_t* sse);
+uint32_t vpx_sub_pixel_variance64x64_neon(const uint8_t* src_ptr,
+                                          int src_stride,
+                                          int x_offset,
+                                          int y_offset,
+                                          const uint8_t* ref_ptr,
+                                          int ref_stride,
+                                          uint32_t* sse);
+#define vpx_sub_pixel_variance64x64 vpx_sub_pixel_variance64x64_neon
+
+uint32_t vpx_sub_pixel_variance8x16_c(const uint8_t* src_ptr,
+                                      int src_stride,
+                                      int x_offset,
+                                      int y_offset,
+                                      const uint8_t* ref_ptr,
+                                      int ref_stride,
+                                      uint32_t* sse);
+uint32_t vpx_sub_pixel_variance8x16_neon(const uint8_t* src_ptr,
+                                         int src_stride,
+                                         int x_offset,
+                                         int y_offset,
+                                         const uint8_t* ref_ptr,
+                                         int ref_stride,
+                                         uint32_t* sse);
+#define vpx_sub_pixel_variance8x16 vpx_sub_pixel_variance8x16_neon
+
+uint32_t vpx_sub_pixel_variance8x4_c(const uint8_t* src_ptr,
+                                     int src_stride,
+                                     int x_offset,
+                                     int y_offset,
+                                     const uint8_t* ref_ptr,
+                                     int ref_stride,
+                                     uint32_t* sse);
+uint32_t vpx_sub_pixel_variance8x4_neon(const uint8_t* src_ptr,
+                                        int src_stride,
+                                        int x_offset,
+                                        int y_offset,
+                                        const uint8_t* ref_ptr,
+                                        int ref_stride,
+                                        uint32_t* sse);
+#define vpx_sub_pixel_variance8x4 vpx_sub_pixel_variance8x4_neon
+
+uint32_t vpx_sub_pixel_variance8x8_c(const uint8_t* src_ptr,
+                                     int src_stride,
+                                     int x_offset,
+                                     int y_offset,
+                                     const uint8_t* ref_ptr,
+                                     int ref_stride,
+                                     uint32_t* sse);
+uint32_t vpx_sub_pixel_variance8x8_neon(const uint8_t* src_ptr,
+                                        int src_stride,
+                                        int x_offset,
+                                        int y_offset,
+                                        const uint8_t* ref_ptr,
+                                        int ref_stride,
+                                        uint32_t* sse);
+#define vpx_sub_pixel_variance8x8 vpx_sub_pixel_variance8x8_neon
+
+void vpx_subtract_block_c(int rows,
+                          int cols,
+                          int16_t* diff_ptr,
+                          ptrdiff_t diff_stride,
+                          const uint8_t* src_ptr,
+                          ptrdiff_t src_stride,
+                          const uint8_t* pred_ptr,
+                          ptrdiff_t pred_stride);
+void vpx_subtract_block_neon(int rows,
+                             int cols,
+                             int16_t* diff_ptr,
+                             ptrdiff_t diff_stride,
+                             const uint8_t* src_ptr,
+                             ptrdiff_t src_stride,
+                             const uint8_t* pred_ptr,
+                             ptrdiff_t pred_stride);
+#define vpx_subtract_block vpx_subtract_block_neon
+
+uint64_t vpx_sum_squares_2d_i16_c(const int16_t* src, int stride, int size);
+uint64_t vpx_sum_squares_2d_i16_neon(const int16_t* src, int stride, int size);
+#define vpx_sum_squares_2d_i16 vpx_sum_squares_2d_i16_neon
+
+void vpx_tm_predictor_16x16_c(uint8_t* dst,
+                              ptrdiff_t stride,
+                              const uint8_t* above,
+                              const uint8_t* left);
+void vpx_tm_predictor_16x16_neon(uint8_t* dst,
+                                 ptrdiff_t stride,
+                                 const uint8_t* above,
+                                 const uint8_t* left);
+#define vpx_tm_predictor_16x16 vpx_tm_predictor_16x16_neon
+
+void vpx_tm_predictor_32x32_c(uint8_t* dst,
+                              ptrdiff_t stride,
+                              const uint8_t* above,
+                              const uint8_t* left);
+void vpx_tm_predictor_32x32_neon(uint8_t* dst,
+                                 ptrdiff_t stride,
+                                 const uint8_t* above,
+                                 const uint8_t* left);
+#define vpx_tm_predictor_32x32 vpx_tm_predictor_32x32_neon
+
+void vpx_tm_predictor_4x4_c(uint8_t* dst,
+                            ptrdiff_t stride,
+                            const uint8_t* above,
+                            const uint8_t* left);
+void vpx_tm_predictor_4x4_neon(uint8_t* dst,
+                               ptrdiff_t stride,
+                               const uint8_t* above,
+                               const uint8_t* left);
+#define vpx_tm_predictor_4x4 vpx_tm_predictor_4x4_neon
+
+void vpx_tm_predictor_8x8_c(uint8_t* dst,
+                            ptrdiff_t stride,
+                            const uint8_t* above,
+                            const uint8_t* left);
+void vpx_tm_predictor_8x8_neon(uint8_t* dst,
+                               ptrdiff_t stride,
+                               const uint8_t* above,
+                               const uint8_t* left);
+#define vpx_tm_predictor_8x8 vpx_tm_predictor_8x8_neon
+
+void vpx_v_predictor_16x16_c(uint8_t* dst,
+                             ptrdiff_t stride,
+                             const uint8_t* above,
+                             const uint8_t* left);
+void vpx_v_predictor_16x16_neon(uint8_t* dst,
+                                ptrdiff_t stride,
+                                const uint8_t* above,
+                                const uint8_t* left);
+#define vpx_v_predictor_16x16 vpx_v_predictor_16x16_neon
+
+void vpx_v_predictor_32x32_c(uint8_t* dst,
+                             ptrdiff_t stride,
+                             const uint8_t* above,
+                             const uint8_t* left);
+void vpx_v_predictor_32x32_neon(uint8_t* dst,
+                                ptrdiff_t stride,
+                                const uint8_t* above,
+                                const uint8_t* left);
+#define vpx_v_predictor_32x32 vpx_v_predictor_32x32_neon
+
+void vpx_v_predictor_4x4_c(uint8_t* dst,
+                           ptrdiff_t stride,
+                           const uint8_t* above,
+                           const uint8_t* left);
+void vpx_v_predictor_4x4_neon(uint8_t* dst,
+                              ptrdiff_t stride,
+                              const uint8_t* above,
+                              const uint8_t* left);
+#define vpx_v_predictor_4x4 vpx_v_predictor_4x4_neon
+
+void vpx_v_predictor_8x8_c(uint8_t* dst,
+                           ptrdiff_t stride,
+                           const uint8_t* above,
+                           const uint8_t* left);
+void vpx_v_predictor_8x8_neon(uint8_t* dst,
+                              ptrdiff_t stride,
+                              const uint8_t* above,
+                              const uint8_t* left);
+#define vpx_v_predictor_8x8 vpx_v_predictor_8x8_neon
+
+unsigned int vpx_variance16x16_c(const uint8_t* src_ptr,
+                                 int src_stride,
+                                 const uint8_t* ref_ptr,
+                                 int ref_stride,
+                                 unsigned int* sse);
+unsigned int vpx_variance16x16_neon(const uint8_t* src_ptr,
+                                    int src_stride,
+                                    const uint8_t* ref_ptr,
+                                    int ref_stride,
+                                    unsigned int* sse);
+unsigned int vpx_variance16x16_neon_dotprod(const uint8_t* src_ptr,
+                                            int src_stride,
+                                            const uint8_t* ref_ptr,
+                                            int ref_stride,
+                                            unsigned int* sse);
+RTCD_EXTERN unsigned int (*vpx_variance16x16)(const uint8_t* src_ptr,
+                                              int src_stride,
+                                              const uint8_t* ref_ptr,
+                                              int ref_stride,
+                                              unsigned int* sse);
+
+unsigned int vpx_variance16x32_c(const uint8_t* src_ptr,
+                                 int src_stride,
+                                 const uint8_t* ref_ptr,
+                                 int ref_stride,
+                                 unsigned int* sse);
+unsigned int vpx_variance16x32_neon(const uint8_t* src_ptr,
+                                    int src_stride,
+                                    const uint8_t* ref_ptr,
+                                    int ref_stride,
+                                    unsigned int* sse);
+unsigned int vpx_variance16x32_neon_dotprod(const uint8_t* src_ptr,
+                                            int src_stride,
+                                            const uint8_t* ref_ptr,
+                                            int ref_stride,
+                                            unsigned int* sse);
+RTCD_EXTERN unsigned int (*vpx_variance16x32)(const uint8_t* src_ptr,
+                                              int src_stride,
+                                              const uint8_t* ref_ptr,
+                                              int ref_stride,
+                                              unsigned int* sse);
+
+unsigned int vpx_variance16x8_c(const uint8_t* src_ptr,
+                                int src_stride,
+                                const uint8_t* ref_ptr,
+                                int ref_stride,
+                                unsigned int* sse);
+unsigned int vpx_variance16x8_neon(const uint8_t* src_ptr,
+                                   int src_stride,
+                                   const uint8_t* ref_ptr,
+                                   int ref_stride,
+                                   unsigned int* sse);
+unsigned int vpx_variance16x8_neon_dotprod(const uint8_t* src_ptr,
+                                           int src_stride,
+                                           const uint8_t* ref_ptr,
+                                           int ref_stride,
+                                           unsigned int* sse);
+RTCD_EXTERN unsigned int (*vpx_variance16x8)(const uint8_t* src_ptr,
+                                             int src_stride,
+                                             const uint8_t* ref_ptr,
+                                             int ref_stride,
+                                             unsigned int* sse);
+
+unsigned int vpx_variance32x16_c(const uint8_t* src_ptr,
+                                 int src_stride,
+                                 const uint8_t* ref_ptr,
+                                 int ref_stride,
+                                 unsigned int* sse);
+unsigned int vpx_variance32x16_neon(const uint8_t* src_ptr,
+                                    int src_stride,
+                                    const uint8_t* ref_ptr,
+                                    int ref_stride,
+                                    unsigned int* sse);
+unsigned int vpx_variance32x16_neon_dotprod(const uint8_t* src_ptr,
+                                            int src_stride,
+                                            const uint8_t* ref_ptr,
+                                            int ref_stride,
+                                            unsigned int* sse);
+RTCD_EXTERN unsigned int (*vpx_variance32x16)(const uint8_t* src_ptr,
+                                              int src_stride,
+                                              const uint8_t* ref_ptr,
+                                              int ref_stride,
+                                              unsigned int* sse);
+
+unsigned int vpx_variance32x32_c(const uint8_t* src_ptr,
+                                 int src_stride,
+                                 const uint8_t* ref_ptr,
+                                 int ref_stride,
+                                 unsigned int* sse);
+unsigned int vpx_variance32x32_neon(const uint8_t* src_ptr,
+                                    int src_stride,
+                                    const uint8_t* ref_ptr,
+                                    int ref_stride,
+                                    unsigned int* sse);
+unsigned int vpx_variance32x32_neon_dotprod(const uint8_t* src_ptr,
+                                            int src_stride,
+                                            const uint8_t* ref_ptr,
+                                            int ref_stride,
+                                            unsigned int* sse);
+RTCD_EXTERN unsigned int (*vpx_variance32x32)(const uint8_t* src_ptr,
+                                              int src_stride,
+                                              const uint8_t* ref_ptr,
+                                              int ref_stride,
+                                              unsigned int* sse);
+
+unsigned int vpx_variance32x64_c(const uint8_t* src_ptr,
+                                 int src_stride,
+                                 const uint8_t* ref_ptr,
+                                 int ref_stride,
+                                 unsigned int* sse);
+unsigned int vpx_variance32x64_neon(const uint8_t* src_ptr,
+                                    int src_stride,
+                                    const uint8_t* ref_ptr,
+                                    int ref_stride,
+                                    unsigned int* sse);
+unsigned int vpx_variance32x64_neon_dotprod(const uint8_t* src_ptr,
+                                            int src_stride,
+                                            const uint8_t* ref_ptr,
+                                            int ref_stride,
+                                            unsigned int* sse);
+RTCD_EXTERN unsigned int (*vpx_variance32x64)(const uint8_t* src_ptr,
+                                              int src_stride,
+                                              const uint8_t* ref_ptr,
+                                              int ref_stride,
+                                              unsigned int* sse);
+
+unsigned int vpx_variance4x4_c(const uint8_t* src_ptr,
+                               int src_stride,
+                               const uint8_t* ref_ptr,
+                               int ref_stride,
+                               unsigned int* sse);
+unsigned int vpx_variance4x4_neon(const uint8_t* src_ptr,
+                                  int src_stride,
+                                  const uint8_t* ref_ptr,
+                                  int ref_stride,
+                                  unsigned int* sse);
+unsigned int vpx_variance4x4_neon_dotprod(const uint8_t* src_ptr,
+                                          int src_stride,
+                                          const uint8_t* ref_ptr,
+                                          int ref_stride,
+                                          unsigned int* sse);
+RTCD_EXTERN unsigned int (*vpx_variance4x4)(const uint8_t* src_ptr,
+                                            int src_stride,
+                                            const uint8_t* ref_ptr,
+                                            int ref_stride,
+                                            unsigned int* sse);
+
+unsigned int vpx_variance4x8_c(const uint8_t* src_ptr,
+                               int src_stride,
+                               const uint8_t* ref_ptr,
+                               int ref_stride,
+                               unsigned int* sse);
+unsigned int vpx_variance4x8_neon(const uint8_t* src_ptr,
+                                  int src_stride,
+                                  const uint8_t* ref_ptr,
+                                  int ref_stride,
+                                  unsigned int* sse);
+unsigned int vpx_variance4x8_neon_dotprod(const uint8_t* src_ptr,
+                                          int src_stride,
+                                          const uint8_t* ref_ptr,
+                                          int ref_stride,
+                                          unsigned int* sse);
+RTCD_EXTERN unsigned int (*vpx_variance4x8)(const uint8_t* src_ptr,
+                                            int src_stride,
+                                            const uint8_t* ref_ptr,
+                                            int ref_stride,
+                                            unsigned int* sse);
+
+unsigned int vpx_variance64x32_c(const uint8_t* src_ptr,
+                                 int src_stride,
+                                 const uint8_t* ref_ptr,
+                                 int ref_stride,
+                                 unsigned int* sse);
+unsigned int vpx_variance64x32_neon(const uint8_t* src_ptr,
+                                    int src_stride,
+                                    const uint8_t* ref_ptr,
+                                    int ref_stride,
+                                    unsigned int* sse);
+unsigned int vpx_variance64x32_neon_dotprod(const uint8_t* src_ptr,
+                                            int src_stride,
+                                            const uint8_t* ref_ptr,
+                                            int ref_stride,
+                                            unsigned int* sse);
+RTCD_EXTERN unsigned int (*vpx_variance64x32)(const uint8_t* src_ptr,
+                                              int src_stride,
+                                              const uint8_t* ref_ptr,
+                                              int ref_stride,
+                                              unsigned int* sse);
+
+unsigned int vpx_variance64x64_c(const uint8_t* src_ptr,
+                                 int src_stride,
+                                 const uint8_t* ref_ptr,
+                                 int ref_stride,
+                                 unsigned int* sse);
+unsigned int vpx_variance64x64_neon(const uint8_t* src_ptr,
+                                    int src_stride,
+                                    const uint8_t* ref_ptr,
+                                    int ref_stride,
+                                    unsigned int* sse);
+unsigned int vpx_variance64x64_neon_dotprod(const uint8_t* src_ptr,
+                                            int src_stride,
+                                            const uint8_t* ref_ptr,
+                                            int ref_stride,
+                                            unsigned int* sse);
+RTCD_EXTERN unsigned int (*vpx_variance64x64)(const uint8_t* src_ptr,
+                                              int src_stride,
+                                              const uint8_t* ref_ptr,
+                                              int ref_stride,
+                                              unsigned int* sse);
+
+unsigned int vpx_variance8x16_c(const uint8_t* src_ptr,
+                                int src_stride,
+                                const uint8_t* ref_ptr,
+                                int ref_stride,
+                                unsigned int* sse);
+unsigned int vpx_variance8x16_neon(const uint8_t* src_ptr,
+                                   int src_stride,
+                                   const uint8_t* ref_ptr,
+                                   int ref_stride,
+                                   unsigned int* sse);
+unsigned int vpx_variance8x16_neon_dotprod(const uint8_t* src_ptr,
+                                           int src_stride,
+                                           const uint8_t* ref_ptr,
+                                           int ref_stride,
+                                           unsigned int* sse);
+RTCD_EXTERN unsigned int (*vpx_variance8x16)(const uint8_t* src_ptr,
+                                             int src_stride,
+                                             const uint8_t* ref_ptr,
+                                             int ref_stride,
+                                             unsigned int* sse);
+
+unsigned int vpx_variance8x4_c(const uint8_t* src_ptr,
+                               int src_stride,
+                               const uint8_t* ref_ptr,
+                               int ref_stride,
+                               unsigned int* sse);
+unsigned int vpx_variance8x4_neon(const uint8_t* src_ptr,
+                                  int src_stride,
+                                  const uint8_t* ref_ptr,
+                                  int ref_stride,
+                                  unsigned int* sse);
+unsigned int vpx_variance8x4_neon_dotprod(const uint8_t* src_ptr,
+                                          int src_stride,
+                                          const uint8_t* ref_ptr,
+                                          int ref_stride,
+                                          unsigned int* sse);
+RTCD_EXTERN unsigned int (*vpx_variance8x4)(const uint8_t* src_ptr,
+                                            int src_stride,
+                                            const uint8_t* ref_ptr,
+                                            int ref_stride,
+                                            unsigned int* sse);
+
+unsigned int vpx_variance8x8_c(const uint8_t* src_ptr,
+                               int src_stride,
+                               const uint8_t* ref_ptr,
+                               int ref_stride,
+                               unsigned int* sse);
+unsigned int vpx_variance8x8_neon(const uint8_t* src_ptr,
+                                  int src_stride,
+                                  const uint8_t* ref_ptr,
+                                  int ref_stride,
+                                  unsigned int* sse);
+unsigned int vpx_variance8x8_neon_dotprod(const uint8_t* src_ptr,
+                                          int src_stride,
+                                          const uint8_t* ref_ptr,
+                                          int ref_stride,
+                                          unsigned int* sse);
+RTCD_EXTERN unsigned int (*vpx_variance8x8)(const uint8_t* src_ptr,
+                                            int src_stride,
+                                            const uint8_t* ref_ptr,
+                                            int ref_stride,
+                                            unsigned int* sse);
+
+void vpx_ve_predictor_4x4_c(uint8_t* dst,
+                            ptrdiff_t stride,
+                            const uint8_t* above,
+                            const uint8_t* left);
+#define vpx_ve_predictor_4x4 vpx_ve_predictor_4x4_c
+
+int vpx_vector_var_c(const int16_t* ref, const int16_t* src, const int bwl);
+int vpx_vector_var_neon(const int16_t* ref, const int16_t* src, const int bwl);
+#define vpx_vector_var vpx_vector_var_neon
+
+void vpx_dsp_rtcd(void);
+
+#include "vpx_config.h"
+
+#ifdef RTCD_C
+#include "vpx_ports/arm.h"
+static void setup_rtcd_internal(void) {
+  int flags = arm_cpu_caps();
+
+  (void)flags;
+
+  vpx_convolve8 = vpx_convolve8_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_convolve8 = vpx_convolve8_neon_dotprod;
+  if (flags & HAS_NEON_I8MM)
+    vpx_convolve8 = vpx_convolve8_neon_i8mm;
+  vpx_convolve8_avg = vpx_convolve8_avg_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_convolve8_avg = vpx_convolve8_avg_neon_dotprod;
+  if (flags & HAS_NEON_I8MM)
+    vpx_convolve8_avg = vpx_convolve8_avg_neon_i8mm;
+  vpx_convolve8_avg_horiz = vpx_convolve8_avg_horiz_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_convolve8_avg_horiz = vpx_convolve8_avg_horiz_neon_dotprod;
+  if (flags & HAS_NEON_I8MM)
+    vpx_convolve8_avg_horiz = vpx_convolve8_avg_horiz_neon_i8mm;
+  vpx_convolve8_avg_vert = vpx_convolve8_avg_vert_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_convolve8_avg_vert = vpx_convolve8_avg_vert_neon_dotprod;
+  if (flags & HAS_NEON_I8MM)
+    vpx_convolve8_avg_vert = vpx_convolve8_avg_vert_neon_i8mm;
+  vpx_convolve8_horiz = vpx_convolve8_horiz_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_convolve8_horiz = vpx_convolve8_horiz_neon_dotprod;
+  if (flags & HAS_NEON_I8MM)
+    vpx_convolve8_horiz = vpx_convolve8_horiz_neon_i8mm;
+  vpx_convolve8_vert = vpx_convolve8_vert_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_convolve8_vert = vpx_convolve8_vert_neon_dotprod;
+  if (flags & HAS_NEON_I8MM)
+    vpx_convolve8_vert = vpx_convolve8_vert_neon_i8mm;
+  vpx_get16x16var = vpx_get16x16var_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_get16x16var = vpx_get16x16var_neon_dotprod;
+  vpx_get4x4sse_cs = vpx_get4x4sse_cs_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_get4x4sse_cs = vpx_get4x4sse_cs_neon_dotprod;
+  vpx_get8x8var = vpx_get8x8var_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_get8x8var = vpx_get8x8var_neon_dotprod;
+  vpx_mse16x16 = vpx_mse16x16_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_mse16x16 = vpx_mse16x16_neon_dotprod;
+  vpx_mse16x8 = vpx_mse16x8_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_mse16x8 = vpx_mse16x8_neon_dotprod;
+  vpx_mse8x16 = vpx_mse8x16_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_mse8x16 = vpx_mse8x16_neon_dotprod;
+  vpx_mse8x8 = vpx_mse8x8_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_mse8x8 = vpx_mse8x8_neon_dotprod;
+  vpx_sad16x16 = vpx_sad16x16_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad16x16 = vpx_sad16x16_neon_dotprod;
+  vpx_sad16x16_avg = vpx_sad16x16_avg_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad16x16_avg = vpx_sad16x16_avg_neon_dotprod;
+  vpx_sad16x16x4d = vpx_sad16x16x4d_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad16x16x4d = vpx_sad16x16x4d_neon_dotprod;
+  vpx_sad16x32 = vpx_sad16x32_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad16x32 = vpx_sad16x32_neon_dotprod;
+  vpx_sad16x32_avg = vpx_sad16x32_avg_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad16x32_avg = vpx_sad16x32_avg_neon_dotprod;
+  vpx_sad16x32x4d = vpx_sad16x32x4d_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad16x32x4d = vpx_sad16x32x4d_neon_dotprod;
+  vpx_sad16x8 = vpx_sad16x8_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad16x8 = vpx_sad16x8_neon_dotprod;
+  vpx_sad16x8_avg = vpx_sad16x8_avg_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad16x8_avg = vpx_sad16x8_avg_neon_dotprod;
+  vpx_sad16x8x4d = vpx_sad16x8x4d_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad16x8x4d = vpx_sad16x8x4d_neon_dotprod;
+  vpx_sad32x16 = vpx_sad32x16_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad32x16 = vpx_sad32x16_neon_dotprod;
+  vpx_sad32x16_avg = vpx_sad32x16_avg_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad32x16_avg = vpx_sad32x16_avg_neon_dotprod;
+  vpx_sad32x16x4d = vpx_sad32x16x4d_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad32x16x4d = vpx_sad32x16x4d_neon_dotprod;
+  vpx_sad32x32 = vpx_sad32x32_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad32x32 = vpx_sad32x32_neon_dotprod;
+  vpx_sad32x32_avg = vpx_sad32x32_avg_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad32x32_avg = vpx_sad32x32_avg_neon_dotprod;
+  vpx_sad32x32x4d = vpx_sad32x32x4d_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad32x32x4d = vpx_sad32x32x4d_neon_dotprod;
+  vpx_sad32x64 = vpx_sad32x64_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad32x64 = vpx_sad32x64_neon_dotprod;
+  vpx_sad32x64_avg = vpx_sad32x64_avg_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad32x64_avg = vpx_sad32x64_avg_neon_dotprod;
+  vpx_sad32x64x4d = vpx_sad32x64x4d_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad32x64x4d = vpx_sad32x64x4d_neon_dotprod;
+  vpx_sad64x32 = vpx_sad64x32_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad64x32 = vpx_sad64x32_neon_dotprod;
+  vpx_sad64x32_avg = vpx_sad64x32_avg_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad64x32_avg = vpx_sad64x32_avg_neon_dotprod;
+  vpx_sad64x32x4d = vpx_sad64x32x4d_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad64x32x4d = vpx_sad64x32x4d_neon_dotprod;
+  vpx_sad64x64 = vpx_sad64x64_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad64x64 = vpx_sad64x64_neon_dotprod;
+  vpx_sad64x64_avg = vpx_sad64x64_avg_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad64x64_avg = vpx_sad64x64_avg_neon_dotprod;
+  vpx_sad64x64x4d = vpx_sad64x64x4d_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad64x64x4d = vpx_sad64x64x4d_neon_dotprod;
+  vpx_sad_skip_16x16 = vpx_sad_skip_16x16_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad_skip_16x16 = vpx_sad_skip_16x16_neon_dotprod;
+  vpx_sad_skip_16x16x4d = vpx_sad_skip_16x16x4d_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad_skip_16x16x4d = vpx_sad_skip_16x16x4d_neon_dotprod;
+  vpx_sad_skip_16x32 = vpx_sad_skip_16x32_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad_skip_16x32 = vpx_sad_skip_16x32_neon_dotprod;
+  vpx_sad_skip_16x32x4d = vpx_sad_skip_16x32x4d_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad_skip_16x32x4d = vpx_sad_skip_16x32x4d_neon_dotprod;
+  vpx_sad_skip_16x8 = vpx_sad_skip_16x8_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad_skip_16x8 = vpx_sad_skip_16x8_neon_dotprod;
+  vpx_sad_skip_16x8x4d = vpx_sad_skip_16x8x4d_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad_skip_16x8x4d = vpx_sad_skip_16x8x4d_neon_dotprod;
+  vpx_sad_skip_32x16 = vpx_sad_skip_32x16_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad_skip_32x16 = vpx_sad_skip_32x16_neon_dotprod;
+  vpx_sad_skip_32x16x4d = vpx_sad_skip_32x16x4d_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad_skip_32x16x4d = vpx_sad_skip_32x16x4d_neon_dotprod;
+  vpx_sad_skip_32x32 = vpx_sad_skip_32x32_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad_skip_32x32 = vpx_sad_skip_32x32_neon_dotprod;
+  vpx_sad_skip_32x32x4d = vpx_sad_skip_32x32x4d_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad_skip_32x32x4d = vpx_sad_skip_32x32x4d_neon_dotprod;
+  vpx_sad_skip_32x64 = vpx_sad_skip_32x64_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad_skip_32x64 = vpx_sad_skip_32x64_neon_dotprod;
+  vpx_sad_skip_32x64x4d = vpx_sad_skip_32x64x4d_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad_skip_32x64x4d = vpx_sad_skip_32x64x4d_neon_dotprod;
+  vpx_sad_skip_64x32 = vpx_sad_skip_64x32_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad_skip_64x32 = vpx_sad_skip_64x32_neon_dotprod;
+  vpx_sad_skip_64x32x4d = vpx_sad_skip_64x32x4d_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad_skip_64x32x4d = vpx_sad_skip_64x32x4d_neon_dotprod;
+  vpx_sad_skip_64x64 = vpx_sad_skip_64x64_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad_skip_64x64 = vpx_sad_skip_64x64_neon_dotprod;
+  vpx_sad_skip_64x64x4d = vpx_sad_skip_64x64x4d_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sad_skip_64x64x4d = vpx_sad_skip_64x64x4d_neon_dotprod;
+  vpx_sse = vpx_sse_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_sse = vpx_sse_neon_dotprod;
+  vpx_variance16x16 = vpx_variance16x16_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_variance16x16 = vpx_variance16x16_neon_dotprod;
+  vpx_variance16x32 = vpx_variance16x32_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_variance16x32 = vpx_variance16x32_neon_dotprod;
+  vpx_variance16x8 = vpx_variance16x8_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_variance16x8 = vpx_variance16x8_neon_dotprod;
+  vpx_variance32x16 = vpx_variance32x16_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_variance32x16 = vpx_variance32x16_neon_dotprod;
+  vpx_variance32x32 = vpx_variance32x32_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_variance32x32 = vpx_variance32x32_neon_dotprod;
+  vpx_variance32x64 = vpx_variance32x64_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_variance32x64 = vpx_variance32x64_neon_dotprod;
+  vpx_variance4x4 = vpx_variance4x4_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_variance4x4 = vpx_variance4x4_neon_dotprod;
+  vpx_variance4x8 = vpx_variance4x8_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_variance4x8 = vpx_variance4x8_neon_dotprod;
+  vpx_variance64x32 = vpx_variance64x32_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_variance64x32 = vpx_variance64x32_neon_dotprod;
+  vpx_variance64x64 = vpx_variance64x64_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_variance64x64 = vpx_variance64x64_neon_dotprod;
+  vpx_variance8x16 = vpx_variance8x16_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_variance8x16 = vpx_variance8x16_neon_dotprod;
+  vpx_variance8x4 = vpx_variance8x4_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_variance8x4 = vpx_variance8x4_neon_dotprod;
+  vpx_variance8x8 = vpx_variance8x8_neon;
+  if (flags & HAS_NEON_DOTPROD)
+    vpx_variance8x8 = vpx_variance8x8_neon_dotprod;
+}
+#endif
+
+#ifdef __cplusplus
+}  // extern "C"
+#endif
+
+#endif
diff --git a/third_party/libvpx/source/config/linux/arm64-gcc/vpx_scale_rtcd.h b/third_party/libvpx/source/config/linux/arm64-gcc/vpx_scale_rtcd.h
new file mode 100644
index 0000000000000..555013e0a7573
--- /dev/null
+++ b/third_party/libvpx/source/config/linux/arm64-gcc/vpx_scale_rtcd.h
@@ -0,0 +1,101 @@
+// This file is generated. Do not edit.
+#ifndef VPX_SCALE_RTCD_H_
+#define VPX_SCALE_RTCD_H_
+
+#ifdef RTCD_C
+#define RTCD_EXTERN
+#else
+#define RTCD_EXTERN extern
+#endif
+
+struct yv12_buffer_config;
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+void vp8_horizontal_line_2_1_scale_c(const unsigned char* source,
+                                     unsigned int source_width,
+                                     unsigned char* dest,
+                                     unsigned int dest_width);
+#define vp8_horizontal_line_2_1_scale vp8_horizontal_line_2_1_scale_c
+
+void vp8_horizontal_line_5_3_scale_c(const unsigned char* source,
+                                     unsigned int source_width,
+                                     unsigned char* dest,
+                                     unsigned int dest_width);
+#define vp8_horizontal_line_5_3_scale vp8_horizontal_line_5_3_scale_c
+
+void vp8_horizontal_line_5_4_scale_c(const unsigned char* source,
+                                     unsigned int source_width,
+                                     unsigned char* dest,
+                                     unsigned int dest_width);
+#define vp8_horizontal_line_5_4_scale vp8_horizontal_line_5_4_scale_c
+
+void vp8_vertical_band_2_1_scale_c(unsigned char* source,
+                                   unsigned int src_pitch,
+                                   unsigned char* dest,
+                                   unsigned int dest_pitch,
+                                   unsigned int dest_width);
+#define vp8_vertical_band_2_1_scale vp8_vertical_band_2_1_scale_c
+
+void vp8_vertical_band_2_1_scale_i_c(unsigned char* source,
+                                     unsigned int src_pitch,
+                                     unsigned char* dest,
+                                     unsigned int dest_pitch,
+                                     unsigned int dest_width);
+#define vp8_vertical_band_2_1_scale_i vp8_vertical_band_2_1_scale_i_c
+
+void vp8_vertical_band_5_3_scale_c(unsigned char* source,
+                                   unsigned int src_pitch,
+                                   unsigned char* dest,
+                                   unsigned int dest_pitch,
+                                   unsigned int dest_width);
+#define vp8_vertical_band_5_3_scale vp8_vertical_band_5_3_scale_c
+
+void vp8_vertical_band_5_4_scale_c(unsigned char* source,
+                                   unsigned int src_pitch,
+                                   unsigned char* dest,
+                                   unsigned int dest_pitch,
+                                   unsigned int dest_width);
+#define vp8_vertical_band_5_4_scale vp8_vertical_band_5_4_scale_c
+
+void vp8_yv12_copy_frame_c(const struct yv12_buffer_config* src_ybc,
+                           struct yv12_buffer_config* dst_ybc);
+#define vp8_yv12_copy_frame vp8_yv12_copy_frame_c
+
+void vp8_yv12_extend_frame_borders_c(struct yv12_buffer_config* ybf);
+#define vp8_yv12_extend_frame_borders vp8_yv12_extend_frame_borders_c
+
+void vpx_extend_frame_borders_c(struct yv12_buffer_config* ybf);
+#define vpx_extend_frame_borders vpx_extend_frame_borders_c
+
+void vpx_extend_frame_inner_borders_c(struct yv12_buffer_config* ybf);
+#define vpx_extend_frame_inner_borders vpx_extend_frame_inner_borders_c
+
+void vpx_yv12_copy_frame_c(const struct yv12_buffer_config* src_ybc,
+                           struct yv12_buffer_config* dst_ybc);
+#define vpx_yv12_copy_frame vpx_yv12_copy_frame_c
+
+void vpx_yv12_copy_y_c(const struct yv12_buffer_config* src_ybc,
+                       struct yv12_buffer_config* dst_ybc);
+#define vpx_yv12_copy_y vpx_yv12_copy_y_c
+
+void vpx_scale_rtcd(void);
+
+#include "vpx_config.h"
+
+#ifdef RTCD_C
+#include "vpx_ports/arm.h"
+static void setup_rtcd_internal(void) {
+  int flags = arm_cpu_caps();
+
+  (void)flags;
+}
+#endif
+
+#ifdef __cplusplus
+}  // extern "C"
+#endif
+
+#endif
-- 
2.40.1

