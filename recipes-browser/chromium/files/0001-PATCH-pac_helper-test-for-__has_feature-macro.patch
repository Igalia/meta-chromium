From cb0cc52cd9477266586f9746e3c6e35503f8fe07 Mon Sep 17 00:00:00 2001
From: Stephan Hartmann <stha09@googlemail.com>
Date: Wed, 12 Apr 2023 17:39:38 +0200
Subject: [PATCH] pac_helper: test for __has_feature macro

__has_feature is a clang extension. GCC errors out on the test.
Define a helper macro to make the code working with other compilers.

Bug: chromium:819294
Change-Id: I359150acd4700e65b4faf5f297b29664c18000d3
Reviewed-on: https://chromium-review.googlesource.com/c/crashpad/crashpad/+/4418706
Reviewed-by: Joshua Peraza <jperaza@chromium.org>
Commit-Queue: Joshua Peraza <jperaza@chromium.org>
Reviewed-by: Ben Hamilton <benhamilton@google.com>
---
 .../crashpad/crashpad/util/linux/pac_helper.cc       | 12 +++++++++---
 1 file changed, 9 insertions(+), 3 deletions(-)

diff --git a/third_party/crashpad/crashpad/util/linux/pac_helper.cc b/third_party/crashpad/crashpad/util/linux/pac_helper.cc
index 742d366e45f91..a9d5f04564ca3 100644
--- a/third_party/crashpad/crashpad/util/linux/pac_helper.cc
+++ b/third_party/crashpad/crashpad/util/linux/pac_helper.cc
@@ -14,8 +14,14 @@
 
 #include "util/linux/pac_helper.h"
 
-#if __has_feature(ptrauth_intrinsics)
-#include <ptrauth.h>
+#if defined(__has_feature)
+#define CRASHPAD_HAS_FEATURE(x) __has_feature(x)
+#else
+#define CRASHPAD_HAS_FEATURE(x) 0
+#endif
+
+#if CRASHPAD_HAS_FEATURE(ptrauth_intrinsics)
+  #include <ptrauth.h>
 #endif
 
 #include "util/misc/address_types.h"
@@ -23,7 +29,7 @@
 namespace crashpad {
 
 VMAddress StripPACBits(VMAddress address) {
-#if __has_feature(ptrauth_intrinsics)
+#if CRASHPAD_HAS_FEATURE(ptrauth_intrinsics)
     address = ptrauth_strip(address, ptrauth_key_function_pointer);
 #elif defined(ARCH_CPU_ARM64)
     // Strip any pointer authentication bits that are assigned to the address.
-- 
2.37.2

