From 2215bd9a908e6329842236f5dee55a9efc0f0717 Mon Sep 17 00:00:00 2001
From: Jose Dapena Paz <jdapena@igalia.com>
Date: Thu, 20 Jan 2022 12:04:36 +0000
Subject: libstdc++: LanguageCode constructor should not be constexpr
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

The default constructor of LanguageCode is declared with constexpr,
same as StrongAlias. But building with libstdc++ rejects it as the
underlying type, std::string, is not declared as constexpr.

Bug: 957519
Change-Id: I78a745111d75df6615704558fd6dfb829940fbb1
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/3383835
Reviewed-by: Christoph Schwering <schwering@google.com>
Commit-Queue: Jos√© Dapena Paz <jdapena@igalia.com>
Cr-Commit-Position: refs/heads/main@{#961394}
---
 components/autofill/core/common/language_code.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/components/autofill/core/common/language_code.h b/components/autofill/core/common/language_code.h
index d5116891cc7b0..ae6570fea99d3 100644
--- a/components/autofill/core/common/language_code.h
+++ b/components/autofill/core/common/language_code.h
@@ -27,7 +27,7 @@ class LanguageCode
   using BaseClass = base::StrongAlias<LanguageCodeTag, std::string>;
 
  public:
-  constexpr LanguageCode() = default;
+  LanguageCode() = default;
   explicit LanguageCode(const char* s) : BaseClass(s) { Check(); }
   explicit LanguageCode(std::string&& s) : BaseClass(std::move(s)) { Check(); }
   explicit LanguageCode(const std::string& s) : BaseClass(s) { Check(); }
-- 
2.32.0

