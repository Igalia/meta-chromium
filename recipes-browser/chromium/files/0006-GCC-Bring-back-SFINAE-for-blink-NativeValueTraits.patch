From 10b83568771c1ae2b66a74f5f74900235820fa4e Mon Sep 17 00:00:00 2001
From: Ivan Pavlotsky <ivan.pavlotsky@lge.com>
Date: Fri, 12 Jan 2024 14:34:49 +0300
Subject: GCC: Bring back SFINAE for blink::NativeValueTraits

For some reason (unfortunately, I didn't manage to find the exact root
cause) GCC fails to link func of one of blink::NativeValueTraits
templates after switching from SFINAE to C++20 constraits usage
(see https://crrev.com/c/5030335).
Brought back and used SFINAE param for that NativeValueTraits template
to fix the issue.

The GCC linker error was:
obj/third_party/blink/renderer/bindings/modules/v8/libv8.a(obj/third_party/blink/renderer/bindings/modules/v8/v8/v8_gpu_compute_pass_encoder.o):
v8_gpu_compute_pass_encoder.cc:function blink::(anonymous namespace)::v8_gpu_compute_pass_encoder::SetBindGroupOperationCallback(v8::FunctionCallbackInfo<v8::Value> const&): error: undefined reference to 'blink::NativeValueTraits<blink::TypedFlexibleArrayBufferView<unsigned int, false> >::ArgumentValue(v8::Isolate*, int, v8::Local<v8::Value>, blink::ExceptionState&)'

Bug: 819294
Change-Id: I7d46db833b53e64b61701ac105ffc055ffb16997
---
 .../blink/renderer/bindings/core/v8/native_value_traits.h  | 2 +-
 .../renderer/bindings/core/v8/native_value_traits_impl.h   | 7 +++++--
 2 files changed, 6 insertions(+), 3 deletions(-)

diff --git a/third_party/blink/renderer/bindings/core/v8/native_value_traits.h b/third_party/blink/renderer/bindings/core/v8/native_value_traits.h
index a5c28b37e9454..2cd45ff27569e 100644
--- a/third_party/blink/renderer/bindings/core/v8/native_value_traits.h
+++ b/third_party/blink/renderer/bindings/core/v8/native_value_traits.h
@@ -31,7 +31,7 @@ class ExceptionState;
 //     return toInt32(isolate, value, exceptionState, NormalConversion);
 //   }
 // }
-template <typename T>
+template <typename T, typename SFINAEHelper = void>
 struct NativeValueTraits;
 
 // This declaration serves only as a blueprint for specializations: the
diff --git a/third_party/blink/renderer/bindings/core/v8/native_value_traits_impl.h b/third_party/blink/renderer/bindings/core/v8/native_value_traits_impl.h
index 394b38f8034b2..059858c2f58a5 100644
--- a/third_party/blink/renderer/bindings/core/v8/native_value_traits_impl.h
+++ b/third_party/blink/renderer/bindings/core/v8/native_value_traits_impl.h
@@ -718,8 +718,11 @@ struct CORE_EXPORT NativeValueTraits<
 };
 
 template <typename T>
-  requires std::derived_from<T, DOMArrayBufferView>
-struct NativeValueTraits<T> {
+struct NativeValueTraits<
+    T,
+    // Used SFINAE here instead of constraits because the latter doesn't work
+    // with GCC.
+    typename std::enable_if_t<std::is_base_of<DOMArrayBufferView, T>::value>> {
   // NotShared<T> or MaybeShared<T> should be used instead.
   static T* NativeValue(v8::Isolate* isolate,
                         v8::Local<v8::Value> value,
-- 
2.40.1

