From c8431b784a207307ce2f83b9e2500d38451e9884 Mon Sep 17 00:00:00 2001
From: Jose Dapena Paz <jdapena@igalia.com>
Date: Wed, 4 Sep 2024 15:06:14 +0200
Subject: Fix string hasher Neon intrinsic types

GCC ARM intrinsics type check is more strict, and fails to compile
with type mistmatches. The ARM neon implementation added in the WTF
string hasher types were wrong.

Bug: 40565911
Change-Id: Iaddab5279e3720833047e9f287e327d15ae21afb
---
 .../blink/renderer/platform/wtf/text/string_hasher.h        | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/third_party/blink/renderer/platform/wtf/text/string_hasher.h b/third_party/blink/renderer/platform/wtf/text/string_hasher.h
index 11f322a478f93..fa50bc87caa72 100644
--- a/third_party/blink/renderer/platform/wtf/text/string_hasher.h
+++ b/third_party/blink/renderer/platform/wtf/text/string_hasher.h
@@ -68,7 +68,7 @@ struct ConvertTo8BitHashReader {
     __m128i x = _mm_loadu_si128(reinterpret_cast<const __m128i*>(p));
     return _mm_cvtsi128_si64(_mm_packus_epi16(x, x));
 #elif defined(__ARM_NEON__)
-    int16x8_t x;
+    uint16x8_t x;
     memcpy(&x, p, sizeof(x));
     return vget_lane_u64(vreinterpret_u64_u8(vmovn_u16(x)), 0);
 #else
@@ -88,9 +88,9 @@ struct ConvertTo8BitHashReader {
     __m128i x = _mm_loadu_si64(reinterpret_cast<const __m128i*>(p));
     return _mm_cvtsi128_si64(_mm_packus_epi16(x, x));
 #elif defined(__ARM_NEON__)
-    int8x8_t x;
+    uint16x4_t x;
     memcpy(&x, p, sizeof(x));
-    int16x8_t x_wide = vcombine_u64(x, x);
+    uint16x8_t x_wide = vcombine_u16(x, x);
     return vget_lane_u32(vreinterpret_u32_u8(vmovn_u16(x_wide)), 0);
 #else
     return (uint64_t{p[0]}) | (uint64_t{p[1]} << 8) | (uint64_t{p[2]} << 16) |
-- 
2.43.0

