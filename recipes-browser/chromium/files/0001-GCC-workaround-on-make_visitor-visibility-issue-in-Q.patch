From 777a7c5b14686b5c655a53fa53a493b9e32387d7 Mon Sep 17 00:00:00 2001
From: Jose Dapena Paz <jose.dapena@lge.com>
Date: Wed, 20 Jan 2021 13:00:25 +0100
Subject: GCC: workaround on make_visitor visibility issue in QuicIntervalSet

Though C++ standard says that nested classes have access to their parent
private members, QuicIntervalSet internal iterator class access to make_visitor
is failing on GCC. That breaks build.

To workaround this, we move make_visitor to be public.

Bug: chromium:819294
---
 quic/core/quic_interval_set.h | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/quic/core/quic_interval_set.h b/quic/core/quic_interval_set.h
index 1dca7734..b0564ce0 100644
--- a/quic/core/quic_interval_set.h
+++ b/quic/core/quic_interval_set.h
@@ -1882,12 +1882,13 @@ class QUIC_NO_EXPORT QuicIntervalSet {
     using B::operator();
     using C::operator();
   };
+
+ public:
   template <class A, class B, class C>
   static auto make_visitor(A a, B b, C c) {
     return overloader<A, B, C>(a, b, c);
   }
 
- public:
   bool Contains(const QuicIntervalSet<T>& other) const {
     return absl::visit(
         make_visitor(
-- 
2.25.1

