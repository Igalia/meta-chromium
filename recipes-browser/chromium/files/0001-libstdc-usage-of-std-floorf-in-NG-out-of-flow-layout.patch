From 9f50dce728f84bec9ed91bd8d6c73c1ee06259f6 Mon Sep 17 00:00:00 2001
From: Jose Dapena Paz <jdapena@igalia.com>
Date: Tue, 1 Sep 2020 21:53:46 +0200
Subject: libstdc++ usage of std::floorf in NG out of flow layout part breaks
 libstdc++ build.
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Use math.h floorf instead of std::floorf, as latter is not available in libstdc++
library.

Fixes this build error:
../../third_party/blink/renderer/core/layout/ng/ng_out_of_flow_layout_part.cc: In member function ‘void blink::NGOutOfFlowLayoutPart::ComputeStartFragmentIndexAndRelativeOffset(const blink::NGOutOfFlowLayoutPart::ContainingBlockInfo&, blink::WritingMode, WTF::wtf_size_t*,
 blink::LogicalOffset*) const’:
../../third_party/blink/renderer/core/layout/ng/ng_out_of_flow_layout_part.cc:1194:16: error: ‘floorf’ is not a member of ‘std’; did you mean ‘floor’?
 1194 |       int(std::floorf(remaining_block_offset / fragmentainer_block_size));
      |                ^~~~~~
      |                floor

Bug: 957519
Change-Id: I7d8f78c04948a6c0e37cbca59bdbca485fc839d3
---
 .../renderer/core/layout/ng/ng_out_of_flow_layout_part.cc     | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/third_party/blink/renderer/core/layout/ng/ng_out_of_flow_layout_part.cc b/third_party/blink/renderer/core/layout/ng/ng_out_of_flow_layout_part.cc
index bb90b88b7fd8..37e49e0c5c93 100644
--- a/third_party/blink/renderer/core/layout/ng/ng_out_of_flow_layout_part.cc
+++ b/third_party/blink/renderer/core/layout/ng/ng_out_of_flow_layout_part.cc
@@ -4,6 +4,8 @@
 
 #include "third_party/blink/renderer/core/layout/ng/ng_out_of_flow_layout_part.h"
 
+#include <math.h>
+
 #include "third_party/blink/renderer/core/layout/layout_block.h"
 #include "third_party/blink/renderer/core/layout/layout_box.h"
 #include "third_party/blink/renderer/core/layout/layout_flexible_box.h"
@@ -1234,7 +1236,7 @@ void NGOutOfFlowLayoutPart::ComputeStartFragmentIndexAndRelativeOffset(
   }
 
   wtf_size_t additional_fragment_count =
-      int(std::floorf(remaining_block_offset / fragmentainer_block_size));
+      int(floorf(remaining_block_offset / fragmentainer_block_size));
   *start_index = child_index + additional_fragment_count;
   offset->block_offset = remaining_block_offset -
                          additional_fragment_count * fragmentainer_block_size;
-- 
2.25.1

